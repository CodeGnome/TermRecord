<html>
    <head>
        <script src="data:application/javascript;charset=utf-8;base64,LyoqCiAqIHRlcm0uanMgLSBhbiB4dGVybSBlbXVsYXRvcgogKiBDb3B5cmlnaHQgKGMpIDIwMTItMjAxMywgQ2hyaXN0b3BoZXIgSmVmZnJleSAoTUlUIExpY2Vuc2UpCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jaGpqL3Rlcm0uanMKICoKICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weQogKiBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbAogKiBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzCiAqIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwKICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCiAqIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CiAqCiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluCiAqIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLgogKgogKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgogKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKICogRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCiAqIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKICogT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTgogKiBUSEUgU09GVFdBUkUuCiAqCiAqIE9yaWdpbmFsbHkgZm9ya2VkIGZyb20gKHdpdGggdGhlIGF1dGhvcidzIHBlcm1pc3Npb24pOgogKiAgIEZhYnJpY2UgQmVsbGFyZCdzIGphdmFzY3JpcHQgdnQxMDAgZm9yIGpzbGludXg6CiAqICAgaHR0cDovL2JlbGxhcmQub3JnL2pzbGludXgvCiAqICAgQ29weXJpZ2h0IChjKSAyMDExIEZhYnJpY2UgQmVsbGFyZAogKiAgIFRoZSBvcmlnaW5hbCBkZXNpZ24gcmVtYWlucy4gVGhlIHRlcm1pbmFsIGl0c2VsZgogKiAgIGhhcyBiZWVuIGV4dGVuZGVkIHRvIGluY2x1ZGUgeHRlcm0gQ1NJIGNvZGVzLCBhbW9uZwogKiAgIG90aGVyIGZlYXR1cmVzLgogKi8KCjsoZnVuY3Rpb24oKSB7CgovKioKICogVGVybWluYWwgRW11bGF0aW9uIFJlZmVyZW5jZXM6CiAqICAgaHR0cDovL3Z0MTAwLm5ldC8KICogICBodHRwOi8vaW52aXNpYmxlLWlzbGFuZC5uZXQveHRlcm0vY3Rsc2Vxcy9jdGxzZXFzLnR4dAogKiAgIGh0dHA6Ly9pbnZpc2libGUtaXNsYW5kLm5ldC94dGVybS9jdGxzZXFzL2N0bHNlcXMuaHRtbAogKiAgIGh0dHA6Ly9pbnZpc2libGUtaXNsYW5kLm5ldC92dHRlc3QvCiAqICAgaHR0cDovL3d3dy5pbndhcC5jb20vcGRwMTAvYW5zaWNvZGUudHh0CiAqICAgaHR0cDovL2xpbnV4LmRpZS5uZXQvbWFuLzQvY29uc29sZV9jb2RlcwogKiAgIGh0dHA6Ly9saW51eC5kaWUubmV0L21hbi83L3VyeHZ0CiAqLwoKJ3VzZSBzdHJpY3QnOwoKLyoqCiAqIFNoYXJlZAogKi8KCnZhciB3aW5kb3cgPSB0aGlzCiAgLCBkb2N1bWVudCA9IHRoaXMuZG9jdW1lbnQ7CgovKioKICogRXZlbnRFbWl0dGVyCiAqLwoKZnVuY3Rpb24gRXZlbnRFbWl0dGVyKCkgewogIHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTsKfQoKRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7CiAgdGhpcy5fZXZlbnRzW3R5cGVdID0gdGhpcy5fZXZlbnRzW3R5cGVdIHx8IFtdOwogIHRoaXMuX2V2ZW50c1t0eXBlXS5wdXNoKGxpc3RlbmVyKTsKfTsKCkV2ZW50RW1pdHRlci5wcm90b3R5cGUub24gPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmFkZExpc3RlbmVyOwoKRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVMaXN0ZW5lciA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7CiAgaWYgKCF0aGlzLl9ldmVudHNbdHlwZV0pIHJldHVybjsKCiAgdmFyIG9iaiA9IHRoaXMuX2V2ZW50c1t0eXBlXQogICAgLCBpID0gb2JqLmxlbmd0aDsKCiAgd2hpbGUgKGktLSkgewogICAgaWYgKG9ialtpXSA9PT0gbGlzdGVuZXIgfHwgb2JqW2ldLmxpc3RlbmVyID09PSBsaXN0ZW5lcikgewogICAgICBvYmouc3BsaWNlKGksIDEpOwogICAgICByZXR1cm47CiAgICB9CiAgfQp9OwoKRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyOwoKRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBmdW5jdGlvbih0eXBlKSB7CiAgaWYgKHRoaXMuX2V2ZW50c1t0eXBlXSkgZGVsZXRlIHRoaXMuX2V2ZW50c1t0eXBlXTsKfTsKCkV2ZW50RW1pdHRlci5wcm90b3R5cGUub25jZSA9IGZ1bmN0aW9uKHR5cGUsIGxpc3RlbmVyKSB7CiAgZnVuY3Rpb24gb24oKSB7CiAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7CiAgICB0aGlzLnJlbW92ZUxpc3RlbmVyKHR5cGUsIG9uKTsKICAgIHJldHVybiBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmdzKTsKICB9CiAgb24ubGlzdGVuZXIgPSBsaXN0ZW5lcjsKICByZXR1cm4gdGhpcy5vbih0eXBlLCBvbik7Cn07CgpFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbih0eXBlKSB7CiAgaWYgKCF0aGlzLl9ldmVudHNbdHlwZV0pIHJldHVybjsKCiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpCiAgICAsIG9iaiA9IHRoaXMuX2V2ZW50c1t0eXBlXQogICAgLCBsID0gb2JqLmxlbmd0aAogICAgLCBpID0gMDsKCiAgZm9yICg7IGkgPCBsOyBpKyspIHsKICAgIG9ialtpXS5hcHBseSh0aGlzLCBhcmdzKTsKICB9Cn07CgpFdmVudEVtaXR0ZXIucHJvdG90eXBlLmxpc3RlbmVycyA9IGZ1bmN0aW9uKHR5cGUpIHsKICByZXR1cm4gdGhpcy5fZXZlbnRzW3R5cGVdID0gdGhpcy5fZXZlbnRzW3R5cGVdIHx8IFtdOwp9OwoKLyoqCiAqIFN0YXRlcwogKi8KCnZhciBub3JtYWwgPSAwCiAgLCBlc2NhcGVkID0gMQogICwgY3NpID0gMgogICwgb3NjID0gMwogICwgY2hhcnNldCA9IDQKICAsIGRjcyA9IDUKICAsIGlnbm9yZSA9IDY7CgovKioKICogVGVybWluYWwKICovCgpmdW5jdGlvbiBUZXJtaW5hbChvcHRpb25zKSB7CiAgdmFyIHNlbGYgPSB0aGlzOwoKICBpZiAoISh0aGlzIGluc3RhbmNlb2YgVGVybWluYWwpKSB7CiAgICByZXR1cm4gbmV3IFRlcm1pbmFsKGFyZ3VtZW50c1swXSwgYXJndW1lbnRzWzFdLCBhcmd1bWVudHNbMl0pOwogIH0KCiAgRXZlbnRFbWl0dGVyLmNhbGwodGhpcyk7CgogIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ251bWJlcicpIHsKICAgIG9wdGlvbnMgPSB7CiAgICAgIGNvbHM6IGFyZ3VtZW50c1swXSwKICAgICAgcm93czogYXJndW1lbnRzWzFdLAogICAgICBoYW5kbGVyOiBhcmd1bWVudHNbMl0KICAgIH07CiAgfQoKICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKCiAgZWFjaChrZXlzKFRlcm1pbmFsLmRlZmF1bHRzKSwgZnVuY3Rpb24oa2V5KSB7CiAgICBpZiAob3B0aW9uc1trZXldID09IG51bGwpIHsKICAgICAgb3B0aW9uc1trZXldID0gVGVybWluYWwub3B0aW9uc1trZXldOwogICAgICAvLyBMZWdhY3k6CiAgICAgIGlmIChUZXJtaW5hbFtrZXldICE9PSBUZXJtaW5hbC5kZWZhdWx0c1trZXldKSB7CiAgICAgICAgb3B0aW9uc1trZXldID0gVGVybWluYWxba2V5XTsKICAgICAgfQogICAgfQogICAgc2VsZltrZXldID0gb3B0aW9uc1trZXldOwogIH0pOwoKICBpZiAob3B0aW9ucy5jb2xvcnMubGVuZ3RoID09PSA4KSB7CiAgICBvcHRpb25zLmNvbG9ycyA9IG9wdGlvbnMuY29sb3JzLmNvbmNhdChUZXJtaW5hbC5fY29sb3JzLnNsaWNlKDgpKTsKICB9IGVsc2UgaWYgKG9wdGlvbnMuY29sb3JzLmxlbmd0aCA9PT0gMTYpIHsKICAgIG9wdGlvbnMuY29sb3JzID0gb3B0aW9ucy5jb2xvcnMuY29uY2F0KFRlcm1pbmFsLl9jb2xvcnMuc2xpY2UoMTYpKTsKICB9IGVsc2UgaWYgKG9wdGlvbnMuY29sb3JzLmxlbmd0aCA9PT0gMTApIHsKICAgIG9wdGlvbnMuY29sb3JzID0gb3B0aW9ucy5jb2xvcnMuc2xpY2UoMCwgLTIpLmNvbmNhdCgKICAgICAgVGVybWluYWwuX2NvbG9ycy5zbGljZSg4LCAtMiksIG9wdGlvbnMuY29sb3JzLnNsaWNlKC0yKSk7CiAgfSBlbHNlIGlmIChvcHRpb25zLmNvbG9ycy5sZW5ndGggPT09IDE4KSB7CiAgICBvcHRpb25zLmNvbG9ycyA9IG9wdGlvbnMuY29sb3JzLmNvbmNhdCgKICAgICAgVGVybWluYWwuX2NvbG9ycy5zbGljZSgxNiwgLTIpLCBvcHRpb25zLmNvbG9ycy5zbGljZSgtMikpOwogIH0KICB0aGlzLmNvbG9ycyA9IG9wdGlvbnMuY29sb3JzOwoKICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zOwoKICAvLyB0aGlzLmNvbnRleHQgPSBvcHRpb25zLmNvbnRleHQgfHwgd2luZG93OwogIC8vIHRoaXMuZG9jdW1lbnQgPSBvcHRpb25zLmRvY3VtZW50IHx8IGRvY3VtZW50OwogIHRoaXMucGFyZW50ID0gb3B0aW9ucy5ib2R5IHx8IG9wdGlvbnMucGFyZW50CiAgICB8fCAoZG9jdW1lbnQgPyBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdIDogbnVsbCk7CgogIHRoaXMuY29scyA9IG9wdGlvbnMuY29scyB8fCBvcHRpb25zLmdlb21ldHJ5WzBdOwogIHRoaXMucm93cyA9IG9wdGlvbnMucm93cyB8fCBvcHRpb25zLmdlb21ldHJ5WzFdOwoKICBpZiAob3B0aW9ucy5oYW5kbGVyKSB7CiAgICB0aGlzLm9uKCdkYXRhJywgb3B0aW9ucy5oYW5kbGVyKTsKICB9CgogIHRoaXMueWJhc2UgPSAwOwogIHRoaXMueWRpc3AgPSAwOwogIHRoaXMueCA9IDA7CiAgdGhpcy55ID0gMDsKICB0aGlzLmN1cnNvclN0YXRlID0gMDsKICB0aGlzLmN1cnNvckhpZGRlbiA9IGZhbHNlOwogIHRoaXMuY29udmVydEVvbDsKICB0aGlzLnN0YXRlID0gMDsKICB0aGlzLnF1ZXVlID0gJyc7CiAgdGhpcy5zY3JvbGxUb3AgPSAwOwogIHRoaXMuc2Nyb2xsQm90dG9tID0gdGhpcy5yb3dzIC0gMTsKCiAgLy8gbW9kZXMKICB0aGlzLmFwcGxpY2F0aW9uS2V5cGFkID0gZmFsc2U7CiAgdGhpcy5hcHBsaWNhdGlvbkN1cnNvciA9IGZhbHNlOwogIHRoaXMub3JpZ2luTW9kZSA9IGZhbHNlOwogIHRoaXMuaW5zZXJ0TW9kZSA9IGZhbHNlOwogIHRoaXMud3JhcGFyb3VuZE1vZGUgPSBmYWxzZTsKICB0aGlzLm5vcm1hbCA9IG51bGw7CgogIC8vIHNlbGVjdCBtb2RlcwogIHRoaXMucHJlZml4TW9kZSA9IGZhbHNlOwogIHRoaXMuc2VsZWN0TW9kZSA9IGZhbHNlOwogIHRoaXMudmlzdWFsTW9kZSA9IGZhbHNlOwogIHRoaXMuc2VhcmNoTW9kZSA9IGZhbHNlOwogIHRoaXMuc2VhcmNoRG93bjsKICB0aGlzLmVudHJ5ID0gJyc7CiAgdGhpcy5lbnRyeVByZWZpeCA9ICdTZWFyY2g6ICc7CiAgdGhpcy5fcmVhbDsKICB0aGlzLl9zZWxlY3RlZDsKICB0aGlzLl90ZXh0YXJlYTsKCiAgLy8gY2hhcnNldAogIHRoaXMuY2hhcnNldCA9IG51bGw7CiAgdGhpcy5nY2hhcnNldCA9IG51bGw7CiAgdGhpcy5nbGV2ZWwgPSAwOwogIHRoaXMuY2hhcnNldHMgPSBbbnVsbF07CgogIC8vIG1vdXNlIHByb3BlcnRpZXMKICB0aGlzLmRlY0xvY2F0b3I7CiAgdGhpcy54MTBNb3VzZTsKICB0aGlzLnZ0MjAwTW91c2U7CiAgdGhpcy52dDMwME1vdXNlOwogIHRoaXMubm9ybWFsTW91c2U7CiAgdGhpcy5tb3VzZUV2ZW50czsKICB0aGlzLnNlbmRGb2N1czsKICB0aGlzLnV0Zk1vdXNlOwogIHRoaXMuc2dyTW91c2U7CiAgdGhpcy51cnh2dE1vdXNlOwoKICAvLyBtaXNjCiAgdGhpcy5lbGVtZW50OwogIHRoaXMuY2hpbGRyZW47CiAgdGhpcy5yZWZyZXNoU3RhcnQ7CiAgdGhpcy5yZWZyZXNoRW5kOwogIHRoaXMuc2F2ZWRYOwogIHRoaXMuc2F2ZWRZOwogIHRoaXMuc2F2ZWRDb2xzOwoKICAvLyBzdHJlYW0KICB0aGlzLnJlYWRhYmxlID0gdHJ1ZTsKICB0aGlzLndyaXRhYmxlID0gdHJ1ZTsKCiAgdGhpcy5kZWZBdHRyID0gKDAgPDwgMTgpIHwgKDI1NyA8PCA5KSB8ICgyNTYgPDwgMCk7CiAgdGhpcy5jdXJBdHRyID0gdGhpcy5kZWZBdHRyOwoKICB0aGlzLnBhcmFtcyA9IFtdOwogIHRoaXMuY3VycmVudFBhcmFtID0gMDsKICB0aGlzLnByZWZpeCA9ICcnOwogIHRoaXMucG9zdGZpeCA9ICcnOwoKICB0aGlzLmxpbmVzID0gW107CiAgdmFyIGkgPSB0aGlzLnJvd3M7CiAgd2hpbGUgKGktLSkgewogICAgdGhpcy5saW5lcy5wdXNoKHRoaXMuYmxhbmtMaW5lKCkpOwogIH0KCiAgdGhpcy50YWJzOwogIHRoaXMuc2V0dXBTdG9wcygpOwp9Cgppbmhlcml0cyhUZXJtaW5hbCwgRXZlbnRFbWl0dGVyKTsKCi8vIGJhY2tfY29sb3JfZXJhc2UgZmVhdHVyZSBmb3IgeHRlcm0uClRlcm1pbmFsLnByb3RvdHlwZS5lcmFzZUF0dHIgPSBmdW5jdGlvbigpIHsKICAvLyBpZiAodGhpcy5pcygnc2NyZWVuJykpIHJldHVybiB0aGlzLmRlZkF0dHI7CiAgcmV0dXJuICh0aGlzLmRlZkF0dHIgJiB+MHgxZmYpIHwgKHRoaXMuY3VyQXR0ciAmIDB4MWZmKTsKfTsKCi8qKgogKiBDb2xvcnMKICovCgovLyBDb2xvcnMgMC0xNQpUZXJtaW5hbC50YW5nb0NvbG9ycyA9IFsKICAvLyBkYXJrOgogICcjMmUzNDM2JywKICAnI2NjMDAwMCcsCiAgJyM0ZTlhMDYnLAogICcjYzRhMDAwJywKICAnIzM0NjVhNCcsCiAgJyM3NTUwN2InLAogICcjMDY5ODlhJywKICAnI2QzZDdjZicsCiAgLy8gYnJpZ2h0OgogICcjNTU1NzUzJywKICAnI2VmMjkyOScsCiAgJyM4YWUyMzQnLAogICcjZmNlOTRmJywKICAnIzcyOWZjZicsCiAgJyNhZDdmYTgnLAogICcjMzRlMmUyJywKICAnI2VlZWVlYycKXTsKClRlcm1pbmFsLnh0ZXJtQ29sb3JzID0gWwogIC8vIGRhcms6CiAgJyMwMDAwMDAnLCAvLyBibGFjawogICcjY2QwMDAwJywgLy8gcmVkMwogICcjMDBjZDAwJywgLy8gZ3JlZW4zCiAgJyNjZGNkMDAnLCAvLyB5ZWxsb3czCiAgJyMwMDAwZWUnLCAvLyBibHVlMgogICcjY2QwMGNkJywgLy8gbWFnZW50YTMKICAnIzAwY2RjZCcsIC8vIGN5YW4zCiAgJyNlNWU1ZTUnLCAvLyBncmF5OTAKICAvLyBicmlnaHQ6CiAgJyM3ZjdmN2YnLCAvLyBncmF5NTAKICAnI2ZmMDAwMCcsIC8vIHJlZAogICcjMDBmZjAwJywgLy8gZ3JlZW4KICAnI2ZmZmYwMCcsIC8vIHllbGxvdwogICcjNWM1Y2ZmJywgLy8gcmdiOjVjLzVjL2ZmCiAgJyNmZjAwZmYnLCAvLyBtYWdlbnRhCiAgJyMwMGZmZmYnLCAvLyBjeWFuCiAgJyNmZmZmZmYnICAvLyB3aGl0ZQpdOwoKLy8gQ29sb3JzIDAtMTUgKyAxNi0yNTUKLy8gTXVjaCB0aGFua3MgdG8gVG9vVGFsbE5hdGUgZm9yIHdyaXRpbmcgdGhpcy4KVGVybWluYWwuY29sb3JzID0gKGZ1bmN0aW9uKCkgewogIHZhciBjb2xvcnMgPSBUZXJtaW5hbC50YW5nb0NvbG9ycy5zbGljZSgpCiAgICAsIHIgPSBbMHgwMCwgMHg1ZiwgMHg4NywgMHhhZiwgMHhkNywgMHhmZl0KICAgICwgaTsKCiAgLy8gMTYtMjMxCiAgaSA9IDA7CiAgZm9yICg7IGkgPCAyMTY7IGkrKykgewogICAgb3V0KHJbKGkgLyAzNikgJSA2IHwgMF0sIHJbKGkgLyA2KSAlIDYgfCAwXSwgcltpICUgNl0pOwogIH0KCiAgLy8gMjMyLTI1NSAoZ3JleSkKICBpID0gMDsKICBmb3IgKDsgaSA8IDI0OyBpKyspIHsKICAgIHIgPSA4ICsgaSAqIDEwOwogICAgb3V0KHIsIHIsIHIpOwogIH0KCiAgZnVuY3Rpb24gb3V0KHIsIGcsIGIpIHsKICAgIGNvbG9ycy5wdXNoKCcjJyArIGhleChyKSArIGhleChnKSArIGhleChiKSk7CiAgfQoKICBmdW5jdGlvbiBoZXgoYykgewogICAgYyA9IGMudG9TdHJpbmcoMTYpOwogICAgcmV0dXJuIGMubGVuZ3RoIDwgMiA/ICcwJyArIGMgOiBjOwogIH0KCiAgcmV0dXJuIGNvbG9yczsKfSkoKTsKCi8vIERlZmF1bHQgQkcvRkcKVGVybWluYWwuY29sb3JzWzI1Nl0gPSAnIzAwMDAwMCc7ClRlcm1pbmFsLmNvbG9yc1syNTddID0gJyNmMGYwZjAnOwoKVGVybWluYWwuX2NvbG9ycyA9IFRlcm1pbmFsLmNvbG9ycy5zbGljZSgpOwoKVGVybWluYWwudmNvbG9ycyA9IChmdW5jdGlvbigpIHsKICB2YXIgb3V0ID0gW10KICAgICwgY29sb3JzID0gVGVybWluYWwuY29sb3JzCiAgICAsIGkgPSAwCiAgICAsIGNvbG9yOwoKICBmb3IgKDsgaSA8IDI1NjsgaSsrKSB7CiAgICBjb2xvciA9IHBhcnNlSW50KGNvbG9yc1tpXS5zdWJzdHJpbmcoMSksIDE2KTsKICAgIG91dC5wdXNoKFsKICAgICAgKGNvbG9yID4+IDE2KSAmIDB4ZmYsCiAgICAgIChjb2xvciA+PiA4KSAmIDB4ZmYsCiAgICAgIGNvbG9yICYgMHhmZgogICAgXSk7CiAgfQoKICByZXR1cm4gb3V0Owp9KSgpOwoKLyoqCiAqIE9wdGlvbnMKICovCgpUZXJtaW5hbC5kZWZhdWx0cyA9IHsKICBjb2xvcnM6IFRlcm1pbmFsLmNvbG9ycywKICBjb252ZXJ0RW9sOiBmYWxzZSwKICB0ZXJtTmFtZTogJ3h0ZXJtJywKICBnZW9tZXRyeTogWzgwLCAyNF0sCiAgY3Vyc29yQmxpbms6IHRydWUsCiAgdmlzdWFsQmVsbDogZmFsc2UsCiAgcG9wT25CZWxsOiBmYWxzZSwKICBzY3JvbGxiYWNrOiAxMDAwLAogIHNjcmVlbktleXM6IGZhbHNlLAogIGRlYnVnOiBmYWxzZSwKICB1c2VTdHlsZTogZmFsc2UKICAvLyBwcm9ncmFtRmVhdHVyZXM6IGZhbHNlLAogIC8vIGZvY3VzS2V5czogZmFsc2UsCn07CgpUZXJtaW5hbC5vcHRpb25zID0ge307CgplYWNoKGtleXMoVGVybWluYWwuZGVmYXVsdHMpLCBmdW5jdGlvbihrZXkpIHsKICBUZXJtaW5hbFtrZXldID0gVGVybWluYWwuZGVmYXVsdHNba2V5XTsKICBUZXJtaW5hbC5vcHRpb25zW2tleV0gPSBUZXJtaW5hbC5kZWZhdWx0c1trZXldOwp9KTsKCi8qKgogKiBGb2N1c2VkIFRlcm1pbmFsCiAqLwoKVGVybWluYWwuZm9jdXMgPSBudWxsOwoKVGVybWluYWwucHJvdG90eXBlLmZvY3VzID0gZnVuY3Rpb24oKSB7CiAgaWYgKFRlcm1pbmFsLmZvY3VzID09PSB0aGlzKSByZXR1cm47CgogIGlmIChUZXJtaW5hbC5mb2N1cykgewogICAgVGVybWluYWwuZm9jdXMuYmx1cigpOwogIH0KCiAgaWYgKHRoaXMuc2VuZEZvY3VzKSB0aGlzLnNlbmQoJ1x4MWJbSScpOwogIHRoaXMuc2hvd0N1cnNvcigpOwoKICAvLyB0cnkgewogIC8vICAgdGhpcy5lbGVtZW50LmZvY3VzKCk7CiAgLy8gfSBjYXRjaCAoZSkgewogIC8vICAgOwogIC8vIH0KCiAgLy8gdGhpcy5lbWl0KCdmb2N1cycpOwoKICBUZXJtaW5hbC5mb2N1cyA9IHRoaXM7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuYmx1ciA9IGZ1bmN0aW9uKCkgewogIGlmIChUZXJtaW5hbC5mb2N1cyAhPT0gdGhpcykgcmV0dXJuOwoKICB0aGlzLmN1cnNvclN0YXRlID0gMDsKICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwogIGlmICh0aGlzLnNlbmRGb2N1cykgdGhpcy5zZW5kKCdceDFiW08nKTsKCiAgLy8gdHJ5IHsKICAvLyAgIHRoaXMuZWxlbWVudC5ibHVyKCk7CiAgLy8gfSBjYXRjaCAoZSkgewogIC8vICAgOwogIC8vIH0KCiAgLy8gdGhpcy5lbWl0KCdibHVyJyk7CgogIFRlcm1pbmFsLmZvY3VzID0gbnVsbDsKfTsKCi8qKgogKiBJbml0aWFsaXplIGdsb2JhbCBiZWhhdmlvcgogKi8KClRlcm1pbmFsLnByb3RvdHlwZS5pbml0R2xvYmFsID0gZnVuY3Rpb24oKSB7CiAgdmFyIGRvY3VtZW50ID0gdGhpcy5kb2N1bWVudDsKCiAgVGVybWluYWwuX2JvdW5kRG9jcyA9IFRlcm1pbmFsLl9ib3VuZERvY3MgfHwgW107CiAgaWYgKH5pbmRleE9mKFRlcm1pbmFsLl9ib3VuZERvY3MsIGRvY3VtZW50KSkgewogICAgcmV0dXJuOwogIH0KICBUZXJtaW5hbC5fYm91bmREb2NzLnB1c2goZG9jdW1lbnQpOwoKICBUZXJtaW5hbC5iaW5kUGFzdGUoZG9jdW1lbnQpOwoKICBUZXJtaW5hbC5iaW5kS2V5cyhkb2N1bWVudCk7CgogIFRlcm1pbmFsLmJpbmRDb3B5KGRvY3VtZW50KTsKCiAgaWYgKHRoaXMuaXNJcGFkIHx8IHRoaXMuaXNJcGhvbmUpIHsKICAgIFRlcm1pbmFsLmZpeElwYWQoZG9jdW1lbnQpOwogIH0KCiAgaWYgKHRoaXMudXNlU3R5bGUpIHsKICAgIFRlcm1pbmFsLmluc2VydFN0eWxlKGRvY3VtZW50LCB0aGlzLmNvbG9yc1syNTZdLCB0aGlzLmNvbG9yc1syNTddKTsKICB9Cn07CgovKioKICogQmluZCB0byBwYXN0ZSBldmVudAogKi8KClRlcm1pbmFsLmJpbmRQYXN0ZSA9IGZ1bmN0aW9uKGRvY3VtZW50KSB7CiAgLy8gVGhpcyBzZWVtcyB0byB3b3JrIHdlbGwgZm9yIGN0cmwtViBhbmQgbWlkZGxlLWNsaWNrLAogIC8vIGV2ZW4gd2l0aG91dCB0aGUgY29udGVudEVkaXRhYmxlIHdvcmthcm91bmQuCiAgdmFyIHdpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3OwogIG9uKHdpbmRvdywgJ3Bhc3RlJywgZnVuY3Rpb24oZXYpIHsKICAgIHZhciB0ZXJtID0gVGVybWluYWwuZm9jdXM7CiAgICBpZiAoIXRlcm0pIHJldHVybjsKICAgIGlmIChldi5jbGlwYm9hcmREYXRhKSB7CiAgICAgIHRlcm0uc2VuZChldi5jbGlwYm9hcmREYXRhLmdldERhdGEoJ3RleHQvcGxhaW4nKSk7CiAgICB9IGVsc2UgaWYgKHRlcm0uY29udGV4dC5jbGlwYm9hcmREYXRhKSB7CiAgICAgIHRlcm0uc2VuZCh0ZXJtLmNvbnRleHQuY2xpcGJvYXJkRGF0YS5nZXREYXRhKCdUZXh0JykpOwogICAgfQogICAgLy8gTm90IG5lY2Vzc2FyeS4gRG8gaXQgYW55d2F5IGZvciBnb29kIG1lYXN1cmUuCiAgICB0ZXJtLmVsZW1lbnQuY29udGVudEVkaXRhYmxlID0gJ2luaGVyaXQnOwogICAgcmV0dXJuIGNhbmNlbChldik7CiAgfSk7Cn07CgovKioKICogR2xvYmFsIEV2ZW50cyBmb3Iga2V5IGhhbmRsaW5nCiAqLwoKVGVybWluYWwuYmluZEtleXMgPSBmdW5jdGlvbihkb2N1bWVudCkgewogIC8vIFdlIHNob3VsZCBvbmx5IG5lZWQgdG8gY2hlY2sgYHRhcmdldCA9PT0gYm9keWAgYmVsb3csCiAgLy8gYnV0IHdlIGNhbiBjaGVjayBldmVyeXRoaW5nIGZvciBnb29kIG1lYXN1cmUuCiAgb24oZG9jdW1lbnQsICdrZXlkb3duJywgZnVuY3Rpb24oZXYpIHsKICAgIGlmICghVGVybWluYWwuZm9jdXMpIHJldHVybjsKICAgIHZhciB0YXJnZXQgPSBldi50YXJnZXQgfHwgZXYuc3JjRWxlbWVudDsKICAgIGlmICghdGFyZ2V0KSByZXR1cm47CiAgICBpZiAodGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5lbGVtZW50CiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5jb250ZXh0CiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5kb2N1bWVudAogICAgICAgIHx8IHRhcmdldCA9PT0gVGVybWluYWwuZm9jdXMuYm9keQogICAgICAgIHx8IHRhcmdldCA9PT0gVGVybWluYWwuX3RleHRhcmVhCiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5wYXJlbnQpIHsKICAgICAgcmV0dXJuIFRlcm1pbmFsLmZvY3VzLmtleURvd24oZXYpOwogICAgfQogIH0sIHRydWUpOwoKICBvbihkb2N1bWVudCwgJ2tleXByZXNzJywgZnVuY3Rpb24oZXYpIHsKICAgIGlmICghVGVybWluYWwuZm9jdXMpIHJldHVybjsKICAgIHZhciB0YXJnZXQgPSBldi50YXJnZXQgfHwgZXYuc3JjRWxlbWVudDsKICAgIGlmICghdGFyZ2V0KSByZXR1cm47CiAgICBpZiAodGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5lbGVtZW50CiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5jb250ZXh0CiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5kb2N1bWVudAogICAgICAgIHx8IHRhcmdldCA9PT0gVGVybWluYWwuZm9jdXMuYm9keQogICAgICAgIHx8IHRhcmdldCA9PT0gVGVybWluYWwuX3RleHRhcmVhCiAgICAgICAgfHwgdGFyZ2V0ID09PSBUZXJtaW5hbC5mb2N1cy5wYXJlbnQpIHsKICAgICAgcmV0dXJuIFRlcm1pbmFsLmZvY3VzLmtleVByZXNzKGV2KTsKICAgIH0KICB9LCB0cnVlKTsKCiAgLy8gSWYgd2UgY2xpY2sgc29tZXdoZXJlIG90aGVyIHRoYW4gYQogIC8vIHRlcm1pbmFsLCB1bmZvY3VzIHRoZSB0ZXJtaW5hbC4KICBvbihkb2N1bWVudCwgJ21vdXNlZG93bicsIGZ1bmN0aW9uKGV2KSB7CiAgICBpZiAoIVRlcm1pbmFsLmZvY3VzKSByZXR1cm47CgogICAgdmFyIGVsID0gZXYudGFyZ2V0IHx8IGV2LnNyY0VsZW1lbnQ7CiAgICBpZiAoIWVsKSByZXR1cm47CgogICAgZG8gewogICAgICBpZiAoZWwgPT09IFRlcm1pbmFsLmZvY3VzLmVsZW1lbnQpIHJldHVybjsKICAgIH0gd2hpbGUgKGVsID0gZWwucGFyZW50Tm9kZSk7CgogICAgVGVybWluYWwuZm9jdXMuYmx1cigpOwogIH0pOwp9OwoKLyoqCiAqIENvcHkgU2VsZWN0aW9uIHcvIEN0cmwtQyAoU2VsZWN0IE1vZGUpCiAqLwoKVGVybWluYWwuYmluZENvcHkgPSBmdW5jdGlvbihkb2N1bWVudCkgewogIHZhciB3aW5kb3cgPSBkb2N1bWVudC5kZWZhdWx0VmlldzsKCiAgLy8gaWYgKCEoJ29uYmVmb3JlY29weScgaW4gZG9jdW1lbnQpKSB7CiAgLy8gICAvLyBDb3BpZXMgdG8gKm9ubHkqIHRoZSBjbGlwYm9hcmQuCiAgLy8gICBvbih3aW5kb3csICdjb3B5JywgZnVuY3Rpb24gZm4oZXYpIHsKICAvLyAgICAgdmFyIHRlcm0gPSBUZXJtaW5hbC5mb2N1czsKICAvLyAgICAgaWYgKCF0ZXJtKSByZXR1cm47CiAgLy8gICAgIGlmICghdGVybS5fc2VsZWN0ZWQpIHJldHVybjsKICAvLyAgICAgdmFyIHRleHQgPSB0ZXJtLmdyYWJUZXh0KAogIC8vICAgICAgIHRlcm0uX3NlbGVjdGVkLngxLCB0ZXJtLl9zZWxlY3RlZC54MiwKICAvLyAgICAgICB0ZXJtLl9zZWxlY3RlZC55MSwgdGVybS5fc2VsZWN0ZWQueTIpOwogIC8vICAgICB0ZXJtLmVtaXQoJ2NvcHknLCB0ZXh0KTsKICAvLyAgICAgZXYuY2xpcGJvYXJkRGF0YS5zZXREYXRhKCd0ZXh0L3BsYWluJywgdGV4dCk7CiAgLy8gICB9KTsKICAvLyAgIHJldHVybjsKICAvLyB9CgogIC8vIENvcGllcyB0byBwcmltYXJ5IHNlbGVjdGlvbiAqYW5kKiBjbGlwYm9hcmQuCiAgLy8gTk9URTogVGhpcyBtYXkgd29yayBiZXR0ZXIgb24gY2FwdHVyZSBwaGFzZSwKICAvLyBvciB1c2luZyB0aGUgYGJlZm9yZWNvcHlgIGV2ZW50LgogIG9uKHdpbmRvdywgJ2NvcHknLCBmdW5jdGlvbihldikgewogICAgdmFyIHRlcm0gPSBUZXJtaW5hbC5mb2N1czsKICAgIGlmICghdGVybSkgcmV0dXJuOwogICAgaWYgKCF0ZXJtLl9zZWxlY3RlZCkgcmV0dXJuOwogICAgdmFyIHRleHRhcmVhID0gdGVybS5nZXRDb3B5VGV4dGFyZWEoKTsKICAgIHZhciB0ZXh0ID0gdGVybS5ncmFiVGV4dCgKICAgICAgdGVybS5fc2VsZWN0ZWQueDEsIHRlcm0uX3NlbGVjdGVkLngyLAogICAgICB0ZXJtLl9zZWxlY3RlZC55MSwgdGVybS5fc2VsZWN0ZWQueTIpOwogICAgdGVybS5lbWl0KCdjb3B5JywgdGV4dCk7CiAgICB0ZXh0YXJlYS5mb2N1cygpOwogICAgdGV4dGFyZWEudGV4dENvbnRlbnQgPSB0ZXh0OwogICAgdGV4dGFyZWEudmFsdWUgPSB0ZXh0OwogICAgdGV4dGFyZWEuc2V0U2VsZWN0aW9uUmFuZ2UoMCwgdGV4dC5sZW5ndGgpOwogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdGVybS5lbGVtZW50LmZvY3VzKCk7CiAgICAgIHRlcm0uZm9jdXMoKTsKICAgIH0sIDEpOwogIH0pOwp9OwoKLyoqCiAqIEZpeCBpUGFkIC0gbm8gaWRlYSBpZiB0aGlzIHdvcmtzCiAqLwoKVGVybWluYWwuZml4SXBhZCA9IGZ1bmN0aW9uKGRvY3VtZW50KSB7CiAgdmFyIHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTsKICB0ZXh0YXJlYS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7CiAgdGV4dGFyZWEuc3R5bGUubGVmdCA9ICctMzIwMDBweCc7CiAgdGV4dGFyZWEuc3R5bGUudG9wID0gJy0zMjAwMHB4JzsKICB0ZXh0YXJlYS5zdHlsZS53aWR0aCA9ICcwcHgnOwogIHRleHRhcmVhLnN0eWxlLmhlaWdodCA9ICcwcHgnOwogIHRleHRhcmVhLnN0eWxlLm9wYWNpdHkgPSAnMCc7CiAgdGV4dGFyZWEuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3RyYW5zcGFyZW50JzsKICB0ZXh0YXJlYS5zdHlsZS5ib3JkZXJTdHlsZSA9ICdub25lJzsKICB0ZXh0YXJlYS5zdHlsZS5vdXRsaW5lU3R5bGUgPSAnbm9uZSc7CiAgdGV4dGFyZWEuYXV0b2NhcGl0YWxpemU9J25vbmUnOwogIHRleHRhcmVhLmF1dG9jb3JyZWN0PSdvZmYnOwoKICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdLmFwcGVuZENoaWxkKHRleHRhcmVhKTsKCiAgVGVybWluYWwuX3RleHRhcmVhID0gdGV4dGFyZWE7CgogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICB0ZXh0YXJlYS5mb2N1cygpOwogIH0sIDEwMDApOwp9OwoKLyoqCiAqIEluc2VydCBhIGRlZmF1bHQgc3R5bGUKICovCgpUZXJtaW5hbC5pbnNlcnRTdHlsZSA9IGZ1bmN0aW9uKGRvY3VtZW50LCBiZywgZmcpIHsKICB2YXIgc3R5bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGVybS1zdHlsZScpOwogIGlmIChzdHlsZSkgcmV0dXJuOwoKICB2YXIgaGVhZCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07CiAgaWYgKCFoZWFkKSByZXR1cm47CgogIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgc3R5bGUuaWQgPSAndGVybS1zdHlsZSc7CgogIC8vIHRleHRDb250ZW50IGRvZXNuJ3Qgd29yayB3ZWxsIHdpdGggSUUgZm9yIDxzdHlsZT4gZWxlbWVudHMuCiAgc3R5bGUuaW5uZXJIVE1MID0gJycKICAgICsgJy50ZXJtaW5hbCB7XG4nCiAgICArICcgIGZsb2F0OiBsZWZ0O1xuJwogICAgKyAnICBib3JkZXI6ICcgKyBiZyArICcgc29saWQgNXB4O1xuJwogICAgKyAnICBmb250LWZhbWlseTogIkRlamFWdSBTYW5zIE1vbm8iLCAiTGliZXJhdGlvbiBNb25vIiwgbW9ub3NwYWNlO1xuJwogICAgKyAnICBmb250LXNpemU6IDExcHg7XG4nCiAgICArICcgIGNvbG9yOiAnICsgZmcgKyAnO1xuJwogICAgKyAnICBiYWNrZ3JvdW5kOiAnICsgYmcgKyAnO1xuJwogICAgKyAnfVxuJwogICAgKyAnXG4nCiAgICArICcudGVybWluYWwtY3Vyc29yIHtcbicKICAgICsgJyAgY29sb3I6ICcgKyBiZyArICc7XG4nCiAgICArICcgIGJhY2tncm91bmQ6ICcgKyBmZyArICc7XG4nCiAgICArICd9XG4nOwoKICAvLyB2YXIgb3V0ID0gJyc7CiAgLy8gZWFjaChUZXJtaW5hbC5jb2xvcnMsIGZ1bmN0aW9uKGNvbG9yLCBpKSB7CiAgLy8gICBpZiAoaSA9PT0gMjU2KSB7CiAgLy8gICAgIG91dCArPSAnXG4udGVybS1iZy1jb2xvci1kZWZhdWx0IHsgYmFja2dyb3VuZC1jb2xvcjogJyArIGNvbG9yICsgJzsgfSc7CiAgLy8gICB9CiAgLy8gICBpZiAoaSA9PT0gMjU3KSB7CiAgLy8gICAgIG91dCArPSAnXG4udGVybS1mZy1jb2xvci1kZWZhdWx0IHsgY29sb3I6ICcgKyBjb2xvciArICc7IH0nOwogIC8vICAgfQogIC8vICAgb3V0ICs9ICdcbi50ZXJtLWJnLWNvbG9yLScgKyBpICsgJyB7IGJhY2tncm91bmQtY29sb3I6ICcgKyBjb2xvciArICc7IH0nOwogIC8vICAgb3V0ICs9ICdcbi50ZXJtLWZnLWNvbG9yLScgKyBpICsgJyB7IGNvbG9yOiAnICsgY29sb3IgKyAnOyB9JzsKICAvLyB9KTsKICAvLyBzdHlsZS5pbm5lckhUTUwgKz0gb3V0ICsgJ1xuJzsKCiAgaGVhZC5pbnNlcnRCZWZvcmUoc3R5bGUsIGhlYWQuZmlyc3RDaGlsZCk7Cn07CgovKioKICogT3BlbiBUZXJtaW5hbAogKi8KClRlcm1pbmFsLnByb3RvdHlwZS5vcGVuID0gZnVuY3Rpb24ocGFyZW50KSB7CiAgdmFyIHNlbGYgPSB0aGlzCiAgICAsIGkgPSAwCiAgICAsIGRpdjsKCiAgdGhpcy5wYXJlbnQgPSBwYXJlbnQgfHwgdGhpcy5wYXJlbnQ7CgogIGlmICghdGhpcy5wYXJlbnQpIHsKICAgIHRocm93IG5ldyBFcnJvcignVGVybWluYWwgcmVxdWlyZXMgYSBwYXJlbnQgZWxlbWVudC4nKTsKICB9CgogIC8vIEdyYWIgZ2xvYmFsIGVsZW1lbnRzLgogIHRoaXMuY29udGV4dCA9IHRoaXMucGFyZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7CiAgdGhpcy5kb2N1bWVudCA9IHRoaXMucGFyZW50Lm93bmVyRG9jdW1lbnQ7CiAgdGhpcy5ib2R5ID0gdGhpcy5kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnYm9keScpWzBdOwoKICAvLyBQYXJzZSB1c2VyLWFnZW50IHN0cmluZ3MuCiAgaWYgKHRoaXMuY29udGV4dC5uYXZpZ2F0b3IgJiYgdGhpcy5jb250ZXh0Lm5hdmlnYXRvci51c2VyQWdlbnQpIHsKICAgIHRoaXMuaXNNYWMgPSAhIX50aGlzLmNvbnRleHQubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNYWMnKTsKICAgIHRoaXMuaXNJcGFkID0gISF+dGhpcy5jb250ZXh0Lm5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignaVBhZCcpOwogICAgdGhpcy5pc0lwaG9uZSA9ICEhfnRoaXMuY29udGV4dC5uYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJ2lQaG9uZScpOwogICAgdGhpcy5pc01TSUUgPSAhIX50aGlzLmNvbnRleHQubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNU0lFJyk7CiAgfQoKICAvLyBDcmVhdGUgb3VyIG1haW4gdGVybWluYWwgZWxlbWVudC4KICB0aGlzLmVsZW1lbnQgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSAndGVybWluYWwnOwogIHRoaXMuZWxlbWVudC5zdHlsZS5vdXRsaW5lID0gJ25vbmUnOwogIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgMCk7CiAgdGhpcy5lbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuY29sb3JzWzI1Nl07CiAgdGhpcy5lbGVtZW50LnN0eWxlLmNvbG9yID0gdGhpcy5jb2xvcnNbMjU3XTsKCiAgLy8gQ3JlYXRlIHRoZSBsaW5lcyBmb3Igb3VyIHRlcm1pbmFsLgogIHRoaXMuY2hpbGRyZW4gPSBbXTsKICBmb3IgKDsgaSA8IHRoaXMucm93czsgaSsrKSB7CiAgICBkaXYgPSB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGRpdik7CiAgICB0aGlzLmNoaWxkcmVuLnB1c2goZGl2KTsKICB9CiAgdGhpcy5wYXJlbnQuYXBwZW5kQ2hpbGQodGhpcy5lbGVtZW50KTsKCiAgLy8gRHJhdyB0aGUgc2NyZWVuLgogIHRoaXMucmVmcmVzaCgwLCB0aGlzLnJvd3MgLSAxKTsKCiAgLy8gSW5pdGlhbGl6ZSBnbG9iYWwgYWN0aW9ucyB0aGF0CiAgLy8gbmVlZCB0byBiZSB0YWtlbiBvbiB0aGUgZG9jdW1lbnQuCiAgdGhpcy5pbml0R2xvYmFsKCk7CgogIC8vIEVuc3VyZSB0aGVyZSBpcyBhIFRlcm1pbmFsLmZvY3VzLgogIHRoaXMuZm9jdXMoKTsKCiAgLy8gU3RhcnQgYmxpbmtpbmcgdGhlIGN1cnNvci4KICB0aGlzLnN0YXJ0QmxpbmsoKTsKCiAgLy8gQmluZCB0byBET00gZXZlbnRzIHJlbGF0ZWQKICAvLyB0byBmb2N1cyBhbmQgcGFzdGUgYmVoYXZpb3IuCiAgb24odGhpcy5lbGVtZW50LCAnZm9jdXMnLCBmdW5jdGlvbigpIHsKICAgIHNlbGYuZm9jdXMoKTsKICAgIGlmIChzZWxmLmlzSXBhZCB8fCBzZWxmLmlzSXBob25lKSB7CiAgICAgIFRlcm1pbmFsLl90ZXh0YXJlYS5mb2N1cygpOwogICAgfQogIH0pOwoKICAvLyBUaGlzIGNhdXNlcyBzbGlnaHRseSBmdW5reSBiZWhhdmlvci4KICAvLyBvbih0aGlzLmVsZW1lbnQsICdibHVyJywgZnVuY3Rpb24oKSB7CiAgLy8gICBzZWxmLmJsdXIoKTsKICAvLyB9KTsKCiAgb24odGhpcy5lbGVtZW50LCAnbW91c2Vkb3duJywgZnVuY3Rpb24oKSB7CiAgICBzZWxmLmZvY3VzKCk7CiAgfSk7CgogIC8vIENsaWNrYWJsZSBwYXN0ZSB3b3JrYXJvdW5kLCB1c2luZyBjb250ZW50RWRpdGFibGUuCiAgLy8gVGhpcyBwcm9iYWJseSBzaG91bGRuJ3Qgd29yaywKICAvLyAuLi4gYnV0IGl0IGRvZXMuIEZpcmVmb3gncyBwYXN0ZQogIC8vIGV2ZW50IHNlZW1zIHRvIG9ubHkgd29yayBmb3IgdGV4dGFyZWFzPwogIG9uKHRoaXMuZWxlbWVudCwgJ21vdXNlZG93bicsIGZ1bmN0aW9uKGV2KSB7CiAgICB2YXIgYnV0dG9uID0gZXYuYnV0dG9uICE9IG51bGwKICAgICAgPyArZXYuYnV0dG9uCiAgICAgIDogZXYud2hpY2ggIT0gbnVsbAogICAgICAgID8gZXYud2hpY2ggLSAxCiAgICAgICAgOiBudWxsOwoKICAgIC8vIERvZXMgSUU5IGRvIHRoaXM/CiAgICBpZiAoc2VsZi5pc01TSUUpIHsKICAgICAgYnV0dG9uID0gYnV0dG9uID09PSAxID8gMCA6IGJ1dHRvbiA9PT0gNCA/IDEgOiBidXR0b247CiAgICB9CgogICAgaWYgKGJ1dHRvbiAhPT0gMikgcmV0dXJuOwoKICAgIHNlbGYuZWxlbWVudC5jb250ZW50RWRpdGFibGUgPSAndHJ1ZSc7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICBzZWxmLmVsZW1lbnQuY29udGVudEVkaXRhYmxlID0gJ2luaGVyaXQnOyAvLyAnZmFsc2UnOwogICAgfSwgMSk7CiAgfSwgdHJ1ZSk7CgogIC8vIExpc3RlbiBmb3IgbW91c2UgZXZlbnRzIGFuZCB0cmFuc2xhdGUKICAvLyB0aGVtIGludG8gdGVybWluYWwgbW91c2UgcHJvdG9jb2xzLgogIHRoaXMuYmluZE1vdXNlKCk7CgogIC8vIEZpZ3VyZSBvdXQgd2hldGhlciBib2xkbmVzcyBhZmZlY3RzCiAgLy8gdGhlIGNoYXJhY3RlciB3aWR0aCBvZiBtb25vc3BhY2UgZm9udHMuCiAgaWYgKFRlcm1pbmFsLmJyb2tlbkJvbGQgPT0gbnVsbCkgewogICAgVGVybWluYWwuYnJva2VuQm9sZCA9IGlzQm9sZEJyb2tlbih0aGlzLmRvY3VtZW50KTsKICB9CgogIC8vIHRoaXMuZW1pdCgnb3BlbicpOwoKICAvLyBUaGlzIGNhbiBiZSB1c2VmdWwgZm9yIHBhc3RpbmcsCiAgLy8gYXMgd2VsbCBhcyB0aGUgaVBhZCBmaXguCiAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgIHNlbGYuZWxlbWVudC5mb2N1cygpOwogIH0sIDEwMCk7Cn07CgovLyBYVGVybSBtb3VzZSBldmVudHMKLy8gaHR0cDovL2ludmlzaWJsZS1pc2xhbmQubmV0L3h0ZXJtL2N0bHNlcXMvY3Rsc2Vxcy5odG1sI01vdXNlJTIwVHJhY2tpbmcKLy8gVG8gYmV0dGVyIHVuZGVyc3RhbmQgdGhlc2UKLy8gdGhlIHh0ZXJtIGNvZGUgaXMgdmVyeSBoZWxwZnVsOgovLyBSZWxldmFudCBmaWxlczoKLy8gICBidXR0b24uYywgY2hhcnByb2MuYywgbWlzYy5jCi8vIFJlbGV2YW50IGZ1bmN0aW9ucyBpbiB4dGVybS9idXR0b24uYzoKLy8gICBCdG5Db2RlLCBFbWl0QnV0dG9uQ29kZSwgRWRpdG9yQnV0dG9uLCBTZW5kTW91c2VQb3NpdGlvbgpUZXJtaW5hbC5wcm90b3R5cGUuYmluZE1vdXNlID0gZnVuY3Rpb24oKSB7CiAgdmFyIGVsID0gdGhpcy5lbGVtZW50CiAgICAsIHNlbGYgPSB0aGlzCiAgICAsIHByZXNzZWQgPSAzMjsKCiAgdmFyIHdoZWVsRXZlbnQgPSAnb25tb3VzZXdoZWVsJyBpbiB0aGlzLmNvbnRleHQKICAgID8gJ21vdXNld2hlZWwnCiAgICA6ICdET01Nb3VzZVNjcm9sbCc7CgogIC8vIG1vdXNldXAsIG1vdXNlZG93biwgbW91c2V3aGVlbAogIC8vIGxlZnQgY2xpY2s6IF5bW00gMzxeW1tNIzM8CiAgLy8gbW91c2V3aGVlbCB1cDogXltbTWAzPgogIGZ1bmN0aW9uIHNlbmRCdXR0b24oZXYpIHsKICAgIHZhciBidXR0b24KICAgICAgLCBwb3M7CgogICAgLy8gZ2V0IHRoZSB4dGVybS1zdHlsZSBidXR0b24KICAgIGJ1dHRvbiA9IGdldEJ1dHRvbihldik7CgogICAgLy8gZ2V0IG1vdXNlIGNvb3JkaW5hdGVzCiAgICBwb3MgPSBnZXRDb29yZHMoZXYpOwogICAgaWYgKCFwb3MpIHJldHVybjsKCiAgICBzZW5kRXZlbnQoYnV0dG9uLCBwb3MpOwoKICAgIHN3aXRjaCAoZXYudHlwZSkgewogICAgICBjYXNlICdtb3VzZWRvd24nOgogICAgICAgIHByZXNzZWQgPSBidXR0b247CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgJ21vdXNldXAnOgogICAgICAgIC8vIGtlZXAgaXQgYXQgdGhlIGxlZnQKICAgICAgICAvLyBidXR0b24sIGp1c3QgaW4gY2FzZS4KICAgICAgICBwcmVzc2VkID0gMzI7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2Ugd2hlZWxFdmVudDoKICAgICAgICAvLyBub3RoaW5nLiBkb24ndAogICAgICAgIC8vIGludGVyZmVyZSB3aXRoCiAgICAgICAgLy8gYHByZXNzZWRgLgogICAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgLy8gbW90aW9uIGV4YW1wbGUgb2YgYSBsZWZ0IGNsaWNrOgogIC8vIF5bW00gMzxeW1tNQDQ8XltbTUA1PF5bW01ANjxeW1tNQDc8XltbTSM3PAogIGZ1bmN0aW9uIHNlbmRNb3ZlKGV2KSB7CiAgICB2YXIgYnV0dG9uID0gcHJlc3NlZAogICAgICAsIHBvczsKCiAgICBwb3MgPSBnZXRDb29yZHMoZXYpOwogICAgaWYgKCFwb3MpIHJldHVybjsKCiAgICAvLyBidXR0b25zIG1hcmtlZCBhcyBtb3Rpb25zCiAgICAvLyBhcmUgaW5jcmVtZW50ZWQgYnkgMzIKICAgIGJ1dHRvbiArPSAzMjsKCiAgICBzZW5kRXZlbnQoYnV0dG9uLCBwb3MpOwogIH0KCiAgLy8gZW5jb2RlIGJ1dHRvbiBhbmQKICAvLyBwb3NpdGlvbiB0byBjaGFyYWN0ZXJzCiAgZnVuY3Rpb24gZW5jb2RlKGRhdGEsIGNoKSB7CiAgICBpZiAoIXNlbGYudXRmTW91c2UpIHsKICAgICAgaWYgKGNoID09PSAyNTUpIHJldHVybiBkYXRhLnB1c2goMCk7CiAgICAgIGlmIChjaCA+IDEyNykgY2ggPSAxMjc7CiAgICAgIGRhdGEucHVzaChjaCk7CiAgICB9IGVsc2UgewogICAgICBpZiAoY2ggPT09IDIwNDcpIHJldHVybiBkYXRhLnB1c2goMCk7CiAgICAgIGlmIChjaCA8IDEyNykgewogICAgICAgIGRhdGEucHVzaChjaCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKGNoID4gMjA0NykgY2ggPSAyMDQ3OwogICAgICAgIGRhdGEucHVzaCgweEMwIHwgKGNoID4+IDYpKTsKICAgICAgICBkYXRhLnB1c2goMHg4MCB8IChjaCAmIDB4M0YpKTsKICAgICAgfQogICAgfQogIH0KCiAgLy8gc2VuZCBhIG1vdXNlIGV2ZW50OgogIC8vIHJlZ3VsYXIvdXRmODogXltbTSBDYiBDeCBDeQogIC8vIHVyeHZ0OiBeW1sgQ2IgOyBDeCA7IEN5IE0KICAvLyBzZ3I6IF5bWyBDYiA7IEN4IDsgQ3kgTS9tCiAgLy8gdnQzMDA6IF5bWyAyNCgxLzMvNSl+IFsgQ3ggLCBDeSBdIFxyCiAgLy8gbG9jYXRvcjogQ1NJIFAgZSA7IFAgYiA7IFAgciA7IFAgYyA7IFAgcCAmIHcKICBmdW5jdGlvbiBzZW5kRXZlbnQoYnV0dG9uLCBwb3MpIHsKICAgIC8vIHNlbGYuZW1pdCgnbW91c2UnLCB7CiAgICAvLyAgIHg6IHBvcy54IC0gMzIsCiAgICAvLyAgIHk6IHBvcy54IC0gMzIsCiAgICAvLyAgIGJ1dHRvbjogYnV0dG9uCiAgICAvLyB9KTsKCiAgICBpZiAoc2VsZi52dDMwME1vdXNlKSB7CiAgICAgIC8vIE5PVEU6IFVuc3RhYmxlLgogICAgICAvLyBodHRwOi8vd3d3LnZ0MTAwLm5ldC9kb2NzL3Z0M3h4LWdwL2NoYXB0ZXIxNS5odG1sCiAgICAgIGJ1dHRvbiAmPSAzOwogICAgICBwb3MueCAtPSAzMjsKICAgICAgcG9zLnkgLT0gMzI7CiAgICAgIHZhciBkYXRhID0gJ1x4MWJbMjQnOwogICAgICBpZiAoYnV0dG9uID09PSAwKSBkYXRhICs9ICcxJzsKICAgICAgZWxzZSBpZiAoYnV0dG9uID09PSAxKSBkYXRhICs9ICczJzsKICAgICAgZWxzZSBpZiAoYnV0dG9uID09PSAyKSBkYXRhICs9ICc1JzsKICAgICAgZWxzZSBpZiAoYnV0dG9uID09PSAzKSByZXR1cm47CiAgICAgIGVsc2UgZGF0YSArPSAnMCc7CiAgICAgIGRhdGEgKz0gJ35bJyArIHBvcy54ICsgJywnICsgcG9zLnkgKyAnXVxyJzsKICAgICAgc2VsZi5zZW5kKGRhdGEpOwogICAgICByZXR1cm47CiAgICB9CgogICAgaWYgKHNlbGYuZGVjTG9jYXRvcikgewogICAgICAvLyBOT1RFOiBVbnN0YWJsZS4KICAgICAgYnV0dG9uICY9IDM7CiAgICAgIHBvcy54IC09IDMyOwogICAgICBwb3MueSAtPSAzMjsKICAgICAgaWYgKGJ1dHRvbiA9PT0gMCkgYnV0dG9uID0gMjsKICAgICAgZWxzZSBpZiAoYnV0dG9uID09PSAxKSBidXR0b24gPSA0OwogICAgICBlbHNlIGlmIChidXR0b24gPT09IDIpIGJ1dHRvbiA9IDY7CiAgICAgIGVsc2UgaWYgKGJ1dHRvbiA9PT0gMykgYnV0dG9uID0gMzsKICAgICAgc2VsZi5zZW5kKCdceDFiWycKICAgICAgICArIGJ1dHRvbgogICAgICAgICsgJzsnCiAgICAgICAgKyAoYnV0dG9uID09PSAzID8gNCA6IDApCiAgICAgICAgKyAnOycKICAgICAgICArIHBvcy55CiAgICAgICAgKyAnOycKICAgICAgICArIHBvcy54CiAgICAgICAgKyAnOycKICAgICAgICArIChwb3MucGFnZSB8fCAwKQogICAgICAgICsgJyZ3Jyk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBpZiAoc2VsZi51cnh2dE1vdXNlKSB7CiAgICAgIHBvcy54IC09IDMyOwogICAgICBwb3MueSAtPSAzMjsKICAgICAgcG9zLngrKzsKICAgICAgcG9zLnkrKzsKICAgICAgc2VsZi5zZW5kKCdceDFiWycgKyBidXR0b24gKyAnOycgKyBwb3MueCArICc7JyArIHBvcy55ICsgJ00nKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmIChzZWxmLnNnck1vdXNlKSB7CiAgICAgIHBvcy54IC09IDMyOwogICAgICBwb3MueSAtPSAzMjsKICAgICAgc2VsZi5zZW5kKCdceDFiWzwnCiAgICAgICAgKyAoKGJ1dHRvbiAmIDMpID09PSAzID8gYnV0dG9uICYgfjMgOiBidXR0b24pCiAgICAgICAgKyAnOycKICAgICAgICArIHBvcy54CiAgICAgICAgKyAnOycKICAgICAgICArIHBvcy55CiAgICAgICAgKyAoKGJ1dHRvbiAmIDMpID09PSAzID8gJ20nIDogJ00nKSk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgZGF0YSA9IFtdOwoKICAgIGVuY29kZShkYXRhLCBidXR0b24pOwogICAgZW5jb2RlKGRhdGEsIHBvcy54KTsKICAgIGVuY29kZShkYXRhLCBwb3MueSk7CgogICAgc2VsZi5zZW5kKCdceDFiW00nICsgU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsIGRhdGEpKTsKICB9CgogIGZ1bmN0aW9uIGdldEJ1dHRvbihldikgewogICAgdmFyIGJ1dHRvbgogICAgICAsIHNoaWZ0CiAgICAgICwgbWV0YQogICAgICAsIGN0cmwKICAgICAgLCBtb2Q7CgogICAgLy8gdHdvIGxvdyBiaXRzOgogICAgLy8gMCA9IGxlZnQKICAgIC8vIDEgPSBtaWRkbGUKICAgIC8vIDIgPSByaWdodAogICAgLy8gMyA9IHJlbGVhc2UKICAgIC8vIHdoZWVsIHVwL2Rvd246CiAgICAvLyAxLCBhbmQgMiAtIHdpdGggNjQgYWRkZWQKICAgIHN3aXRjaCAoZXYudHlwZSkgewogICAgICBjYXNlICdtb3VzZWRvd24nOgogICAgICAgIGJ1dHRvbiA9IGV2LmJ1dHRvbiAhPSBudWxsCiAgICAgICAgICA/ICtldi5idXR0b24KICAgICAgICAgIDogZXYud2hpY2ggIT0gbnVsbAogICAgICAgICAgICA/IGV2LndoaWNoIC0gMQogICAgICAgICAgICA6IG51bGw7CgogICAgICAgIGlmIChzZWxmLmlzTVNJRSkgewogICAgICAgICAgYnV0dG9uID0gYnV0dG9uID09PSAxID8gMCA6IGJ1dHRvbiA9PT0gNCA/IDEgOiBidXR0b247CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdtb3VzZXVwJzoKICAgICAgICBidXR0b24gPSAzOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdET01Nb3VzZVNjcm9sbCc6CiAgICAgICAgYnV0dG9uID0gZXYuZGV0YWlsIDwgMAogICAgICAgICAgPyA2NAogICAgICAgICAgOiA2NTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAnbW91c2V3aGVlbCc6CiAgICAgICAgYnV0dG9uID0gZXYud2hlZWxEZWx0YVkgPiAwCiAgICAgICAgICA/IDY0CiAgICAgICAgICA6IDY1OwogICAgICAgIGJyZWFrOwogICAgfQoKICAgIC8vIG5leHQgdGhyZWUgYml0cyBhcmUgdGhlIG1vZGlmaWVyczoKICAgIC8vIDQgPSBzaGlmdCwgOCA9IG1ldGEsIDE2ID0gY29udHJvbAogICAgc2hpZnQgPSBldi5zaGlmdEtleSA/IDQgOiAwOwogICAgbWV0YSA9IGV2Lm1ldGFLZXkgPyA4IDogMDsKICAgIGN0cmwgPSBldi5jdHJsS2V5ID8gMTYgOiAwOwogICAgbW9kID0gc2hpZnQgfCBtZXRhIHwgY3RybDsKCiAgICAvLyBubyBtb2RzCiAgICBpZiAoc2VsZi52dDIwME1vdXNlKSB7CiAgICAgIC8vIGN0cmwgb25seQogICAgICBtb2QgJj0gY3RybDsKICAgIH0gZWxzZSBpZiAoIXNlbGYubm9ybWFsTW91c2UpIHsKICAgICAgbW9kID0gMDsKICAgIH0KCiAgICAvLyBpbmNyZW1lbnQgdG8gU1AKICAgIGJ1dHRvbiA9ICgzMiArIChtb2QgPDwgMikpICsgYnV0dG9uOwoKICAgIHJldHVybiBidXR0b247CiAgfQoKICAvLyBtb3VzZSBjb29yZGluYXRlcyBtZWFzdXJlZCBpbiBjb2xzL3Jvd3MKICBmdW5jdGlvbiBnZXRDb29yZHMoZXYpIHsKICAgIHZhciB4LCB5LCB3LCBoLCBlbDsKCiAgICAvLyBpZ25vcmUgYnJvd3NlcnMgd2l0aG91dCBwYWdlWCBmb3Igbm93CiAgICBpZiAoZXYucGFnZVggPT0gbnVsbCkgcmV0dXJuOwoKICAgIHggPSBldi5wYWdlWDsKICAgIHkgPSBldi5wYWdlWTsKICAgIGVsID0gc2VsZi5lbGVtZW50OwoKICAgIC8vIHNob3VsZCBwcm9iYWJseSBjaGVjayBvZmZzZXRQYXJlbnQKICAgIC8vIGJ1dCB0aGlzIGlzIG1vcmUgcG9ydGFibGUKICAgIHdoaWxlIChlbCAmJiBlbCAhPT0gc2VsZi5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHsKICAgICAgeCAtPSBlbC5vZmZzZXRMZWZ0OwogICAgICB5IC09IGVsLm9mZnNldFRvcDsKICAgICAgZWwgPSAnb2Zmc2V0UGFyZW50JyBpbiBlbAogICAgICAgID8gZWwub2Zmc2V0UGFyZW50CiAgICAgICAgOiBlbC5wYXJlbnROb2RlOwogICAgfQoKICAgIC8vIGNvbnZlcnQgdG8gY29scy9yb3dzCiAgICB3ID0gc2VsZi5lbGVtZW50LmNsaWVudFdpZHRoOwogICAgaCA9IHNlbGYuZWxlbWVudC5jbGllbnRIZWlnaHQ7CiAgICB4ID0gTWF0aC5yb3VuZCgoeCAvIHcpICogc2VsZi5jb2xzKTsKICAgIHkgPSBNYXRoLnJvdW5kKCh5IC8gaCkgKiBzZWxmLnJvd3MpOwoKICAgIC8vIGJlIHN1cmUgdG8gYXZvaWQgc2VuZGluZwogICAgLy8gYmFkIHBvc2l0aW9ucyB0byB0aGUgcHJvZ3JhbQogICAgaWYgKHggPCAwKSB4ID0gMDsKICAgIGlmICh4ID4gc2VsZi5jb2xzKSB4ID0gc2VsZi5jb2xzOwogICAgaWYgKHkgPCAwKSB5ID0gMDsKICAgIGlmICh5ID4gc2VsZi5yb3dzKSB5ID0gc2VsZi5yb3dzOwoKICAgIC8vIHh0ZXJtIHNlbmRzIHJhdyBieXRlcyBhbmQKICAgIC8vIHN0YXJ0cyBhdCAzMiAoU1ApIGZvciBlYWNoLgogICAgeCArPSAzMjsKICAgIHkgKz0gMzI7CgogICAgcmV0dXJuIHsKICAgICAgeDogeCwKICAgICAgeTogeSwKICAgICAgdHlwZTogZXYudHlwZSA9PT0gd2hlZWxFdmVudAogICAgICAgID8gJ21vdXNld2hlZWwnCiAgICAgICAgOiBldi50eXBlCiAgICB9OwogIH0KCiAgb24oZWwsICdtb3VzZWRvd24nLCBmdW5jdGlvbihldikgewogICAgaWYgKCFzZWxmLm1vdXNlRXZlbnRzKSByZXR1cm47CgogICAgLy8gc2VuZCB0aGUgYnV0dG9uCiAgICBzZW5kQnV0dG9uKGV2KTsKCiAgICAvLyBlbnN1cmUgZm9jdXMKICAgIHNlbGYuZm9jdXMoKTsKCiAgICAvLyBmaXggZm9yIG9kZCBidWcKICAgIC8vaWYgKHNlbGYudnQyMDBNb3VzZSAmJiAhc2VsZi5ub3JtYWxNb3VzZSkgewogICAgaWYgKHNlbGYudnQyMDBNb3VzZSkgewogICAgICBzZW5kQnV0dG9uKHsgX19wcm90b19fOiBldiwgdHlwZTogJ21vdXNldXAnIH0pOwogICAgICByZXR1cm4gY2FuY2VsKGV2KTsKICAgIH0KCiAgICAvLyBiaW5kIGV2ZW50cwogICAgaWYgKHNlbGYubm9ybWFsTW91c2UpIG9uKHNlbGYuZG9jdW1lbnQsICdtb3VzZW1vdmUnLCBzZW5kTW92ZSk7CgogICAgLy8geDEwIGNvbXBhdGliaWxpdHkgbW9kZSBjYW4ndCBzZW5kIGJ1dHRvbiByZWxlYXNlcwogICAgaWYgKCFzZWxmLngxME1vdXNlKSB7CiAgICAgIG9uKHNlbGYuZG9jdW1lbnQsICdtb3VzZXVwJywgZnVuY3Rpb24gdXAoZXYpIHsKICAgICAgICBzZW5kQnV0dG9uKGV2KTsKICAgICAgICBpZiAoc2VsZi5ub3JtYWxNb3VzZSkgb2ZmKHNlbGYuZG9jdW1lbnQsICdtb3VzZW1vdmUnLCBzZW5kTW92ZSk7CiAgICAgICAgb2ZmKHNlbGYuZG9jdW1lbnQsICdtb3VzZXVwJywgdXApOwogICAgICAgIHJldHVybiBjYW5jZWwoZXYpOwogICAgICB9KTsKICAgIH0KCiAgICByZXR1cm4gY2FuY2VsKGV2KTsKICB9KTsKCiAgLy9pZiAoc2VsZi5ub3JtYWxNb3VzZSkgewogIC8vICBvbihzZWxmLmRvY3VtZW50LCAnbW91c2Vtb3ZlJywgc2VuZE1vdmUpOwogIC8vfQoKICBvbihlbCwgd2hlZWxFdmVudCwgZnVuY3Rpb24oZXYpIHsKICAgIGlmICghc2VsZi5tb3VzZUV2ZW50cykgcmV0dXJuOwogICAgaWYgKHNlbGYueDEwTW91c2UKICAgICAgICB8fCBzZWxmLnZ0MzAwTW91c2UKICAgICAgICB8fCBzZWxmLmRlY0xvY2F0b3IpIHJldHVybjsKICAgIHNlbmRCdXR0b24oZXYpOwogICAgcmV0dXJuIGNhbmNlbChldik7CiAgfSk7CgogIC8vIGFsbG93IG1vdXNld2hlZWwgc2Nyb2xsaW5nIGluCiAgLy8gdGhlIHNoZWxsIGZvciBleGFtcGxlCiAgb24oZWwsIHdoZWVsRXZlbnQsIGZ1bmN0aW9uKGV2KSB7CiAgICBpZiAoc2VsZi5tb3VzZUV2ZW50cykgcmV0dXJuOwogICAgaWYgKHNlbGYuYXBwbGljYXRpb25LZXlwYWQpIHJldHVybjsKICAgIGlmIChldi50eXBlID09PSAnRE9NTW91c2VTY3JvbGwnKSB7CiAgICAgIHNlbGYuc2Nyb2xsRGlzcChldi5kZXRhaWwgPCAwID8gLTUgOiA1KTsKICAgIH0gZWxzZSB7CiAgICAgIHNlbGYuc2Nyb2xsRGlzcChldi53aGVlbERlbHRhWSA+IDAgPyAtNSA6IDUpOwogICAgfQogICAgcmV0dXJuIGNhbmNlbChldik7CiAgfSk7Cn07CgovKioKICogRGVzdHJveSBUZXJtaW5hbAogKi8KClRlcm1pbmFsLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7CiAgdGhpcy5yZWFkYWJsZSA9IGZhbHNlOwogIHRoaXMud3JpdGFibGUgPSBmYWxzZTsKICB0aGlzLl9ldmVudHMgPSB7fTsKICB0aGlzLmhhbmRsZXIgPSBmdW5jdGlvbigpIHt9OwogIHRoaXMud3JpdGUgPSBmdW5jdGlvbigpIHt9OwogIGlmICh0aGlzLmVsZW1lbnQucGFyZW50Tm9kZSkgewogICAgdGhpcy5lbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KTsKICB9CiAgLy90aGlzLmVtaXQoJ2Nsb3NlJyk7Cn07CgovKioKICogUmVuZGVyaW5nIEVuZ2luZQogKi8KCi8vIEluIHRoZSBzY3JlZW4gYnVmZmVyLCBlYWNoIGNoYXJhY3RlcgovLyBpcyBzdG9yZWQgYXMgYSBhbiBhcnJheSB3aXRoIGEgY2hhcmFjdGVyCi8vIGFuZCBhIDMyLWJpdCBpbnRlZ2VyLgovLyBGaXJzdCB2YWx1ZTogYSB1dGYtMTYgY2hhcmFjdGVyLgovLyBTZWNvbmQgdmFsdWU6Ci8vIE5leHQgOSBiaXRzOiBiYWNrZ3JvdW5kIGNvbG9yICgwLTUxMSkuCi8vIE5leHQgOSBiaXRzOiBmb3JlZ3JvdW5kIGNvbG9yICgwLTUxMSkuCi8vIE5leHQgMTQgYml0czogYSBtYXNrIGZvciBtaXNjLiBmbGFnczoKLy8gICAxPWJvbGQsIDI9dW5kZXJsaW5lLCA0PWJsaW5rLCA4PWludmVyc2UsIDE2PWludmlzaWJsZQoKVGVybWluYWwucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbihzdGFydCwgZW5kKSB7CiAgdmFyIHgKICAgICwgeQogICAgLCBpCiAgICAsIGxpbmUKICAgICwgb3V0CiAgICAsIGNoCiAgICAsIHdpZHRoCiAgICAsIGRhdGEKICAgICwgYXR0cgogICAgLCBiZwogICAgLCBmZwogICAgLCBmbGFncwogICAgLCByb3cKICAgICwgcGFyZW50OwoKICBpZiAoZW5kIC0gc3RhcnQgPj0gdGhpcy5yb3dzIC8gMikgewogICAgcGFyZW50ID0gdGhpcy5lbGVtZW50LnBhcmVudE5vZGU7CiAgICBpZiAocGFyZW50KSBwYXJlbnQucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KTsKICB9CgogIHdpZHRoID0gdGhpcy5jb2xzOwogIHkgPSBzdGFydDsKCiAgaWYgKGVuZCA+PSB0aGlzLmxpbmVzLmxlbmd0aCkgewogICAgdGhpcy5sb2coJ2BlbmRgIGlzIHRvbyBsYXJnZS4gTW9zdCBsaWtlbHkgYSBiYWQgQ1NSLicpOwogICAgZW5kID0gdGhpcy5saW5lcy5sZW5ndGggLSAxOwogIH0KCiAgZm9yICg7IHkgPD0gZW5kOyB5KyspIHsKICAgIHJvdyA9IHkgKyB0aGlzLnlkaXNwOwoKICAgIGxpbmUgPSB0aGlzLmxpbmVzW3Jvd107CiAgICBvdXQgPSAnJzsKCiAgICBpZiAoeSA9PT0gdGhpcy55CiAgICAgICAgJiYgdGhpcy5jdXJzb3JTdGF0ZQogICAgICAgICYmICh0aGlzLnlkaXNwID09PSB0aGlzLnliYXNlIHx8IHRoaXMuc2VsZWN0TW9kZSkKICAgICAgICAmJiAhdGhpcy5jdXJzb3JIaWRkZW4pIHsKICAgICAgeCA9IHRoaXMueDsKICAgIH0gZWxzZSB7CiAgICAgIHggPSAtMTsKICAgIH0KCiAgICBhdHRyID0gdGhpcy5kZWZBdHRyOwogICAgaSA9IDA7CgogICAgZm9yICg7IGkgPCB3aWR0aDsgaSsrKSB7CiAgICAgIGRhdGEgPSBsaW5lW2ldWzBdOwogICAgICBjaCA9IGxpbmVbaV1bMV07CgogICAgICBpZiAoaSA9PT0geCkgZGF0YSA9IC0xOwoKICAgICAgaWYgKGRhdGEgIT09IGF0dHIpIHsKICAgICAgICBpZiAoYXR0ciAhPT0gdGhpcy5kZWZBdHRyKSB7CiAgICAgICAgICBvdXQgKz0gJzwvc3Bhbj4nOwogICAgICAgIH0KICAgICAgICBpZiAoZGF0YSAhPT0gdGhpcy5kZWZBdHRyKSB7CiAgICAgICAgICBpZiAoZGF0YSA9PT0gLTEpIHsKICAgICAgICAgICAgb3V0ICs9ICc8c3BhbiBjbGFzcz0icmV2ZXJzZS12aWRlbyB0ZXJtaW5hbC1jdXJzb3IiPic7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBvdXQgKz0gJzxzcGFuIHN0eWxlPSInOwoKICAgICAgICAgICAgYmcgPSBkYXRhICYgMHgxZmY7CiAgICAgICAgICAgIGZnID0gKGRhdGEgPj4gOSkgJiAweDFmZjsKICAgICAgICAgICAgZmxhZ3MgPSBkYXRhID4+IDE4OwoKICAgICAgICAgICAgLy8gYm9sZAogICAgICAgICAgICBpZiAoZmxhZ3MgJiAxKSB7CiAgICAgICAgICAgICAgaWYgKCFUZXJtaW5hbC5icm9rZW5Cb2xkKSB7CiAgICAgICAgICAgICAgICBvdXQgKz0gJ2ZvbnQtd2VpZ2h0OmJvbGQ7JzsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy8gU2VlOiBYVGVybSpib2xkQ29sb3JzCiAgICAgICAgICAgICAgaWYgKGZnIDwgOCkgZmcgKz0gODsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gdW5kZXJsaW5lCiAgICAgICAgICAgIGlmIChmbGFncyAmIDIpIHsKICAgICAgICAgICAgICBvdXQgKz0gJ3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7JzsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gYmxpbmsKICAgICAgICAgICAgaWYgKGZsYWdzICYgNCkgewogICAgICAgICAgICAgIGlmIChmbGFncyAmIDIpIHsKICAgICAgICAgICAgICAgIG91dCA9IG91dC5zbGljZSgwLCAtMSk7CiAgICAgICAgICAgICAgICBvdXQgKz0gJyBibGluazsnOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBvdXQgKz0gJ3RleHQtZGVjb3JhdGlvbjpibGluazsnOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gaW52ZXJzZQogICAgICAgICAgICBpZiAoZmxhZ3MgJiA4KSB7CiAgICAgICAgICAgICAgYmcgPSAoZGF0YSA+PiA5KSAmIDB4MWZmOwogICAgICAgICAgICAgIGZnID0gZGF0YSAmIDB4MWZmOwogICAgICAgICAgICAgIC8vIFNob3VsZCBpbnZlcnNlIGp1c3QgYmUgYmVmb3JlIHRoZQogICAgICAgICAgICAgIC8vIGFib3ZlIGJvbGRDb2xvcnMgZWZmZWN0IGluc3RlYWQ/CiAgICAgICAgICAgICAgaWYgKChmbGFncyAmIDEpICYmIGZnIDwgOCkgZmcgKz0gODsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gaW52aXNpYmxlCiAgICAgICAgICAgIGlmIChmbGFncyAmIDE2KSB7CiAgICAgICAgICAgICAgb3V0ICs9ICd2aXNpYmlsaXR5OmhpZGRlbjsnOwogICAgICAgICAgICB9CgogICAgICAgICAgICAvLyBvdXQgKz0gJyIgY2xhc3M9IicKICAgICAgICAgICAgLy8gICArICd0ZXJtLWJnLWNvbG9yLScgKyBiZwogICAgICAgICAgICAvLyAgICsgJyAnCiAgICAgICAgICAgIC8vICAgKyAndGVybS1mZy1jb2xvci0nICsgZmcKICAgICAgICAgICAgLy8gICArICciPic7CgogICAgICAgICAgICBpZiAoYmcgIT09IDI1NikgewogICAgICAgICAgICAgIG91dCArPSAnYmFja2dyb3VuZC1jb2xvcjonCiAgICAgICAgICAgICAgICArIHRoaXMuY29sb3JzW2JnXQogICAgICAgICAgICAgICAgKyAnOyc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChmZyAhPT0gMjU3KSB7CiAgICAgICAgICAgICAgb3V0ICs9ICdjb2xvcjonCiAgICAgICAgICAgICAgICArIHRoaXMuY29sb3JzW2ZnXQogICAgICAgICAgICAgICAgKyAnOyc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG91dCArPSAnIj4nOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgc3dpdGNoIChjaCkgewogICAgICAgIGNhc2UgJyYnOgogICAgICAgICAgb3V0ICs9ICcmYW1wOyc7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICc8JzoKICAgICAgICAgIG91dCArPSAnJmx0Oyc7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICc+JzoKICAgICAgICAgIG91dCArPSAnJmd0Oyc7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgaWYgKGNoIDw9ICcgJykgewogICAgICAgICAgICBvdXQgKz0gJyZuYnNwOyc7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoaXNXaWRlKGNoKSkgaSsrOwogICAgICAgICAgICBvdXQgKz0gY2g7CiAgICAgICAgICB9CiAgICAgICAgICBicmVhazsKICAgICAgfQoKICAgICAgYXR0ciA9IGRhdGE7CiAgICB9CgogICAgaWYgKGF0dHIgIT09IHRoaXMuZGVmQXR0cikgewogICAgICBvdXQgKz0gJzwvc3Bhbj4nOwogICAgfQoKICAgIHRoaXMuY2hpbGRyZW5beV0uaW5uZXJIVE1MID0gb3V0OwogIH0KCiAgaWYgKHBhcmVudCkgcGFyZW50LmFwcGVuZENoaWxkKHRoaXMuZWxlbWVudCk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuX2N1cnNvckJsaW5rID0gZnVuY3Rpb24oKSB7CiAgaWYgKFRlcm1pbmFsLmZvY3VzICE9PSB0aGlzKSByZXR1cm47CiAgdGhpcy5jdXJzb3JTdGF0ZSBePSAxOwogIHRoaXMucmVmcmVzaCh0aGlzLnksIHRoaXMueSk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuc2hvd0N1cnNvciA9IGZ1bmN0aW9uKCkgewogIGlmICghdGhpcy5jdXJzb3JTdGF0ZSkgewogICAgdGhpcy5jdXJzb3JTdGF0ZSA9IDE7CiAgICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwogIH0gZWxzZSB7CiAgICAvLyBUZW1wb3JhcmlseSBkaXNhYmxlZDoKICAgIC8vIHRoaXMucmVmcmVzaEJsaW5rKCk7CiAgfQp9OwoKVGVybWluYWwucHJvdG90eXBlLnN0YXJ0QmxpbmsgPSBmdW5jdGlvbigpIHsKICBpZiAoIXRoaXMuY3Vyc29yQmxpbmspIHJldHVybjsKICB2YXIgc2VsZiA9IHRoaXM7CiAgdGhpcy5fYmxpbmtlciA9IGZ1bmN0aW9uKCkgewogICAgc2VsZi5fY3Vyc29yQmxpbmsoKTsKICB9OwogIHRoaXMuX2JsaW5rID0gc2V0SW50ZXJ2YWwodGhpcy5fYmxpbmtlciwgNTAwKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5yZWZyZXNoQmxpbmsgPSBmdW5jdGlvbigpIHsKICBpZiAoIXRoaXMuY3Vyc29yQmxpbmspIHJldHVybjsKICBjbGVhckludGVydmFsKHRoaXMuX2JsaW5rKTsKICB0aGlzLl9ibGluayA9IHNldEludGVydmFsKHRoaXMuX2JsaW5rZXIsIDUwMCk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuc2Nyb2xsID0gZnVuY3Rpb24oKSB7CiAgdmFyIHJvdzsKCiAgaWYgKCsrdGhpcy55YmFzZSA9PT0gdGhpcy5zY3JvbGxiYWNrKSB7CiAgICB0aGlzLnliYXNlID0gdGhpcy55YmFzZSAvIDIgfCAwOwogICAgdGhpcy5saW5lcyA9IHRoaXMubGluZXMuc2xpY2UoLSh0aGlzLnliYXNlICsgdGhpcy5yb3dzKSArIDEpOwogIH0KCiAgdGhpcy55ZGlzcCA9IHRoaXMueWJhc2U7CgogIC8vIGxhc3QgbGluZQogIHJvdyA9IHRoaXMueWJhc2UgKyB0aGlzLnJvd3MgLSAxOwoKICAvLyBzdWJ0cmFjdCB0aGUgYm90dG9tIHNjcm9sbCByZWdpb24KICByb3cgLT0gdGhpcy5yb3dzIC0gMSAtIHRoaXMuc2Nyb2xsQm90dG9tOwoKICBpZiAocm93ID09PSB0aGlzLmxpbmVzLmxlbmd0aCkgewogICAgLy8gcG90ZW50aWFsIG9wdGltaXphdGlvbjoKICAgIC8vIHB1c2hpbmcgaXMgZmFzdGVyIHRoYW4gc3BsaWNpbmcKICAgIC8vIHdoZW4gdGhleSBhbW91bnQgdG8gdGhlIHNhbWUKICAgIC8vIGJlaGF2aW9yLgogICAgdGhpcy5saW5lcy5wdXNoKHRoaXMuYmxhbmtMaW5lKCkpOwogIH0gZWxzZSB7CiAgICAvLyBhZGQgb3VyIG5ldyBsaW5lCiAgICB0aGlzLmxpbmVzLnNwbGljZShyb3csIDAsIHRoaXMuYmxhbmtMaW5lKCkpOwogIH0KCiAgaWYgKHRoaXMuc2Nyb2xsVG9wICE9PSAwKSB7CiAgICBpZiAodGhpcy55YmFzZSAhPT0gMCkgewogICAgICB0aGlzLnliYXNlLS07CiAgICAgIHRoaXMueWRpc3AgPSB0aGlzLnliYXNlOwogICAgfQogICAgdGhpcy5saW5lcy5zcGxpY2UodGhpcy55YmFzZSArIHRoaXMuc2Nyb2xsVG9wLCAxKTsKICB9CgogIC8vIHRoaXMubWF4UmFuZ2UoKTsKICB0aGlzLnVwZGF0ZVJhbmdlKHRoaXMuc2Nyb2xsVG9wKTsKICB0aGlzLnVwZGF0ZVJhbmdlKHRoaXMuc2Nyb2xsQm90dG9tKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5zY3JvbGxEaXNwID0gZnVuY3Rpb24oZGlzcCkgewogIHRoaXMueWRpc3AgKz0gZGlzcDsKCiAgaWYgKHRoaXMueWRpc3AgPiB0aGlzLnliYXNlKSB7CiAgICB0aGlzLnlkaXNwID0gdGhpcy55YmFzZTsKICB9IGVsc2UgaWYgKHRoaXMueWRpc3AgPCAwKSB7CiAgICB0aGlzLnlkaXNwID0gMDsKICB9CgogIHRoaXMucmVmcmVzaCgwLCB0aGlzLnJvd3MgLSAxKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGRhdGEpIHsKICB2YXIgbCA9IGRhdGEubGVuZ3RoCiAgICAsIGkgPSAwCiAgICAsIGoKICAgICwgY3MKICAgICwgY2g7CgogIHRoaXMucmVmcmVzaFN0YXJ0ID0gdGhpcy55OwogIHRoaXMucmVmcmVzaEVuZCA9IHRoaXMueTsKCiAgaWYgKHRoaXMueWJhc2UgIT09IHRoaXMueWRpc3ApIHsKICAgIHRoaXMueWRpc3AgPSB0aGlzLnliYXNlOwogICAgdGhpcy5tYXhSYW5nZSgpOwogIH0KCiAgLy8gdGhpcy5sb2coSlNPTi5zdHJpbmdpZnkoZGF0YS5yZXBsYWNlKC9ceDFiL2csICdeWycpKSk7CgogIGZvciAoOyBpIDwgbDsgaSsrKSB7CiAgICBjaCA9IGRhdGFbaV07CiAgICBzd2l0Y2ggKHRoaXMuc3RhdGUpIHsKICAgICAgY2FzZSBub3JtYWw6CiAgICAgICAgc3dpdGNoIChjaCkgewogICAgICAgICAgLy8gJ1wwJwogICAgICAgICAgLy8gY2FzZSAnXDAnOgogICAgICAgICAgLy8gY2FzZSAnXDIwMCc6CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vICdcYScKICAgICAgICAgIGNhc2UgJ1x4MDcnOgogICAgICAgICAgICB0aGlzLmJlbGwoKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gJ1xuJywgJ1x2JywgJ1xmJwogICAgICAgICAgY2FzZSAnXG4nOgogICAgICAgICAgY2FzZSAnXHgwYic6CiAgICAgICAgICBjYXNlICdceDBjJzoKICAgICAgICAgICAgaWYgKHRoaXMuY29udmVydEVvbCkgewogICAgICAgICAgICAgIHRoaXMueCA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gVE9ETzogSW1wbGVtZW50IGVhdF9uZXdsaW5lX2dsaXRjaC4KICAgICAgICAgICAgLy8gaWYgKHRoaXMucmVhbFggPj0gdGhpcy5jb2xzKSBicmVhazsKICAgICAgICAgICAgLy8gdGhpcy5yZWFsWCA9IDA7CiAgICAgICAgICAgIHRoaXMueSsrOwogICAgICAgICAgICBpZiAodGhpcy55ID4gdGhpcy5zY3JvbGxCb3R0b20pIHsKICAgICAgICAgICAgICB0aGlzLnktLTsKICAgICAgICAgICAgICB0aGlzLnNjcm9sbCgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vICdccicKICAgICAgICAgIGNhc2UgJ1xyJzoKICAgICAgICAgICAgdGhpcy54ID0gMDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gJ1xiJwogICAgICAgICAgY2FzZSAnXHgwOCc6CiAgICAgICAgICAgIGlmICh0aGlzLnggPiAwKSB7CiAgICAgICAgICAgICAgdGhpcy54LS07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gJ1x0JwogICAgICAgICAgY2FzZSAnXHQnOgogICAgICAgICAgICB0aGlzLnggPSB0aGlzLm5leHRTdG9wKCk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIHNoaWZ0IG91dAogICAgICAgICAgY2FzZSAnXHgwZSc6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDEpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBzaGlmdCBpbgogICAgICAgICAgY2FzZSAnXHgwZic6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDApOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyAnXGUnCiAgICAgICAgICBjYXNlICdceDFiJzoKICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IGVzY2FwZWQ7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIC8vICcgJwogICAgICAgICAgICBpZiAoY2ggPj0gJyAnKSB7CiAgICAgICAgICAgICAgaWYgKHRoaXMuY2hhcnNldCAmJiB0aGlzLmNoYXJzZXRbY2hdKSB7CiAgICAgICAgICAgICAgICBjaCA9IHRoaXMuY2hhcnNldFtjaF07CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBpZiAodGhpcy54ID49IHRoaXMuY29scykgewogICAgICAgICAgICAgICAgdGhpcy54ID0gMDsKICAgICAgICAgICAgICAgIHRoaXMueSsrOwogICAgICAgICAgICAgICAgaWYgKHRoaXMueSA+IHRoaXMuc2Nyb2xsQm90dG9tKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMueS0tOwogICAgICAgICAgICAgICAgICB0aGlzLnNjcm9sbCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy5saW5lc1t0aGlzLnkgKyB0aGlzLnliYXNlXVt0aGlzLnhdID0gW3RoaXMuY3VyQXR0ciwgY2hdOwogICAgICAgICAgICAgIHRoaXMueCsrOwogICAgICAgICAgICAgIHRoaXMudXBkYXRlUmFuZ2UodGhpcy55KTsKCiAgICAgICAgICAgICAgaWYgKGlzV2lkZShjaCkpIHsKICAgICAgICAgICAgICAgIGogPSB0aGlzLnkgKyB0aGlzLnliYXNlOwogICAgICAgICAgICAgICAgaWYgKHRoaXMuY29scyA8IDIgfHwgdGhpcy54ID49IHRoaXMuY29scykgewogICAgICAgICAgICAgICAgICB0aGlzLmxpbmVzW2pdW3RoaXMueCAtIDFdID0gW3RoaXMuY3VyQXR0ciwgJyAnXTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmxpbmVzW2pdW3RoaXMueF0gPSBbdGhpcy5jdXJBdHRyLCAnICddOwogICAgICAgICAgICAgICAgdGhpcy54Kys7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBicmVhazsKICAgICAgY2FzZSBlc2NhcGVkOgogICAgICAgIHN3aXRjaCAoY2gpIHsKICAgICAgICAgIC8vIEVTQyBbIENvbnRyb2wgU2VxdWVuY2UgSW50cm9kdWNlciAoIENTSSBpcyAweDliKS4KICAgICAgICAgIGNhc2UgJ1snOgogICAgICAgICAgICB0aGlzLnBhcmFtcyA9IFtdOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IDA7CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBjc2k7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyBdIE9wZXJhdGluZyBTeXN0ZW0gQ29tbWFuZCAoIE9TQyBpcyAweDlkKS4KICAgICAgICAgIGNhc2UgJ10nOgogICAgICAgICAgICB0aGlzLnBhcmFtcyA9IFtdOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IDA7CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBvc2M7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyBQIERldmljZSBDb250cm9sIFN0cmluZyAoIERDUyBpcyAweDkwKS4KICAgICAgICAgIGNhc2UgJ1AnOgogICAgICAgICAgICB0aGlzLnBhcmFtcyA9IFtdOwogICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IDA7CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBkY3M7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyBfIEFwcGxpY2F0aW9uIFByb2dyYW0gQ29tbWFuZCAoIEFQQyBpcyAweDlmKS4KICAgICAgICAgIGNhc2UgJ18nOgogICAgICAgICAgICB0aGlzLnN0YXRlID0gaWdub3JlOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBFU0MgXiBQcml2YWN5IE1lc3NhZ2UgKCBQTSBpcyAweDllKS4KICAgICAgICAgIGNhc2UgJ14nOgogICAgICAgICAgICB0aGlzLnN0YXRlID0gaWdub3JlOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBFU0MgYyBGdWxsIFJlc2V0IChSSVMpLgogICAgICAgICAgY2FzZSAnYyc6CiAgICAgICAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gRVNDIEUgTmV4dCBMaW5lICggTkVMIGlzIDB4ODUpLgogICAgICAgICAgLy8gRVNDIEQgSW5kZXggKCBJTkQgaXMgMHg4NCkuCiAgICAgICAgICBjYXNlICdFJzoKICAgICAgICAgICAgdGhpcy54ID0gMDsKICAgICAgICAgICAgOwogICAgICAgICAgY2FzZSAnRCc6CiAgICAgICAgICAgIHRoaXMuaW5kZXgoKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gRVNDIE0gUmV2ZXJzZSBJbmRleCAoIFJJIGlzIDB4OGQpLgogICAgICAgICAgY2FzZSAnTSc6CiAgICAgICAgICAgIHRoaXMucmV2ZXJzZUluZGV4KCk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyAlIFNlbGVjdCBkZWZhdWx0L3V0Zi04IGNoYXJhY3RlciBzZXQuCiAgICAgICAgICAvLyBAID0gZGVmYXVsdCwgRyA9IHV0Zi04CiAgICAgICAgICBjYXNlICclJzoKICAgICAgICAgICAgLy90aGlzLmNoYXJzZXQgPSBudWxsOwogICAgICAgICAgICB0aGlzLnNldGdMZXZlbCgwKTsKICAgICAgICAgICAgdGhpcy5zZXRnQ2hhcnNldCgwLCBUZXJtaW5hbC5jaGFyc2V0cy5VUyk7CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBub3JtYWw7CiAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gRVNDICgsKSwqLCssLSwuIERlc2lnbmF0ZSBHMC1HMiBDaGFyYWN0ZXIgU2V0LgogICAgICAgICAgY2FzZSAnKCc6IC8vIDwtLSB0aGlzIHNlZW1zIHRvIGdldCBhbGwgdGhlIGF0dGVudGlvbgogICAgICAgICAgY2FzZSAnKSc6CiAgICAgICAgICBjYXNlICcqJzoKICAgICAgICAgIGNhc2UgJysnOgogICAgICAgICAgY2FzZSAnLSc6CiAgICAgICAgICBjYXNlICcuJzoKICAgICAgICAgICAgc3dpdGNoIChjaCkgewogICAgICAgICAgICAgIGNhc2UgJygnOgogICAgICAgICAgICAgICAgdGhpcy5nY2hhcnNldCA9IDA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICcpJzoKICAgICAgICAgICAgICAgIHRoaXMuZ2NoYXJzZXQgPSAxOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgY2FzZSAnKic6CiAgICAgICAgICAgICAgICB0aGlzLmdjaGFyc2V0ID0gMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgJysnOgogICAgICAgICAgICAgICAgdGhpcy5nY2hhcnNldCA9IDM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICctJzoKICAgICAgICAgICAgICAgIHRoaXMuZ2NoYXJzZXQgPSAxOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgY2FzZSAnLic6CiAgICAgICAgICAgICAgICB0aGlzLmdjaGFyc2V0ID0gMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBjaGFyc2V0OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBEZXNpZ25hdGUgRzMgQ2hhcmFjdGVyIFNldCAoVlQzMDApLgogICAgICAgICAgLy8gQSA9IElTTyBMYXRpbi0xIFN1cHBsZW1lbnRhbC4KICAgICAgICAgIC8vIE5vdCBpbXBsZW1lbnRlZC4KICAgICAgICAgIGNhc2UgJy8nOgogICAgICAgICAgICB0aGlzLmdjaGFyc2V0ID0gMzsKICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IGNoYXJzZXQ7CiAgICAgICAgICAgIGktLTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gRVNDIE4KICAgICAgICAgIC8vIFNpbmdsZSBTaGlmdCBTZWxlY3Qgb2YgRzIgQ2hhcmFjdGVyIFNldAogICAgICAgICAgLy8gKCBTUzIgaXMgMHg4ZSkuIFRoaXMgYWZmZWN0cyBuZXh0IGNoYXJhY3RlciBvbmx5LgogICAgICAgICAgY2FzZSAnTic6CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgLy8gRVNDIE8KICAgICAgICAgIC8vIFNpbmdsZSBTaGlmdCBTZWxlY3Qgb2YgRzMgQ2hhcmFjdGVyIFNldAogICAgICAgICAgLy8gKCBTUzMgaXMgMHg4ZikuIFRoaXMgYWZmZWN0cyBuZXh0IGNoYXJhY3RlciBvbmx5LgogICAgICAgICAgY2FzZSAnTyc6CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgLy8gRVNDIG4KICAgICAgICAgIC8vIEludm9rZSB0aGUgRzIgQ2hhcmFjdGVyIFNldCBhcyBHTCAoTFMyKS4KICAgICAgICAgIGNhc2UgJ24nOgogICAgICAgICAgICB0aGlzLnNldGdMZXZlbCgyKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvLyBFU0MgbwogICAgICAgICAgLy8gSW52b2tlIHRoZSBHMyBDaGFyYWN0ZXIgU2V0IGFzIEdMIChMUzMpLgogICAgICAgICAgY2FzZSAnbyc6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIC8vIEVTQyB8CiAgICAgICAgICAvLyBJbnZva2UgdGhlIEczIENoYXJhY3RlciBTZXQgYXMgR1IgKExTM1IpLgogICAgICAgICAgY2FzZSAnfCc6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDMpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIC8vIEVTQyB9CiAgICAgICAgICAvLyBJbnZva2UgdGhlIEcyIENoYXJhY3RlciBTZXQgYXMgR1IgKExTMlIpLgogICAgICAgICAgY2FzZSAnfSc6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDIpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIC8vIEVTQyB+CiAgICAgICAgICAvLyBJbnZva2UgdGhlIEcxIENoYXJhY3RlciBTZXQgYXMgR1IgKExTMVIpLgogICAgICAgICAgY2FzZSAnfic6CiAgICAgICAgICAgIHRoaXMuc2V0Z0xldmVsKDEpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBFU0MgNyBTYXZlIEN1cnNvciAoREVDU0MpLgogICAgICAgICAgY2FzZSAnNyc6CiAgICAgICAgICAgIHRoaXMuc2F2ZUN1cnNvcigpOwogICAgICAgICAgICB0aGlzLnN0YXRlID0gbm9ybWFsOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBFU0MgOCBSZXN0b3JlIEN1cnNvciAoREVDUkMpLgogICAgICAgICAgY2FzZSAnOCc6CiAgICAgICAgICAgIHRoaXMucmVzdG9yZUN1cnNvcigpOwogICAgICAgICAgICB0aGlzLnN0YXRlID0gbm9ybWFsOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBFU0MgIyAzIERFQyBsaW5lIGhlaWdodC93aWR0aAogICAgICAgICAgY2FzZSAnIyc6CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBub3JtYWw7CiAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gRVNDIEggVGFiIFNldCAoSFRTIGlzIDB4ODgpLgogICAgICAgICAgY2FzZSAnSCc6CiAgICAgICAgICAgIHRoaXMudGFiU2V0KCk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyA9IEFwcGxpY2F0aW9uIEtleXBhZCAoREVDUEFNKS4KICAgICAgICAgIGNhc2UgJz0nOgogICAgICAgICAgICB0aGlzLmxvZygnU2VyaWFsIHBvcnQgcmVxdWVzdGVkIGFwcGxpY2F0aW9uIGtleXBhZC4nKTsKICAgICAgICAgICAgdGhpcy5hcHBsaWNhdGlvbktleXBhZCA9IHRydWU7CiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBub3JtYWw7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIEVTQyA+IE5vcm1hbCBLZXlwYWQgKERFQ1BOTSkuCiAgICAgICAgICBjYXNlICc+JzoKICAgICAgICAgICAgdGhpcy5sb2coJ1N3aXRjaGluZyBiYWNrIHRvIG5vcm1hbCBrZXlwYWQuJyk7CiAgICAgICAgICAgIHRoaXMuYXBwbGljYXRpb25LZXlwYWQgPSBmYWxzZTsKICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKICAgICAgICAgICAgdGhpcy5lcnJvcignVW5rbm93biBFU0MgY29udHJvbDogJXMuJywgY2gpOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIGNoYXJzZXQ6CiAgICAgICAgc3dpdGNoIChjaCkgewogICAgICAgICAgY2FzZSAnMCc6IC8vIERFQyBTcGVjaWFsIENoYXJhY3RlciBhbmQgTGluZSBEcmF3aW5nIFNldC4KICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5TQ0xEOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ0EnOiAvLyBVSwogICAgICAgICAgICBjcyA9IFRlcm1pbmFsLmNoYXJzZXRzLlVLOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ0InOiAvLyBVbml0ZWQgU3RhdGVzIChVU0FTQ0lJKS4KICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5VUzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICc0JzogLy8gRHV0Y2gKICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5EdXRjaDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdDJzogLy8gRmlubmlzaAogICAgICAgICAgY2FzZSAnNSc6CiAgICAgICAgICAgIGNzID0gVGVybWluYWwuY2hhcnNldHMuRmlubmlzaDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdSJzogLy8gRnJlbmNoCiAgICAgICAgICAgIGNzID0gVGVybWluYWwuY2hhcnNldHMuRnJlbmNoOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ1EnOiAvLyBGcmVuY2hDYW5hZGlhbgogICAgICAgICAgICBjcyA9IFRlcm1pbmFsLmNoYXJzZXRzLkZyZW5jaENhbmFkaWFuOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ0snOiAvLyBHZXJtYW4KICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5HZXJtYW47CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAnWSc6IC8vIEl0YWxpYW4KICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5JdGFsaWFuOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgJ0UnOiAvLyBOb3J3ZWdpYW5EYW5pc2gKICAgICAgICAgIGNhc2UgJzYnOgogICAgICAgICAgICBjcyA9IFRlcm1pbmFsLmNoYXJzZXRzLk5vcndlZ2lhbkRhbmlzaDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlICdaJzogLy8gU3BhbmlzaAogICAgICAgICAgICBjcyA9IFRlcm1pbmFsLmNoYXJzZXRzLlNwYW5pc2g7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAnSCc6IC8vIFN3ZWRpc2gKICAgICAgICAgIGNhc2UgJzcnOgogICAgICAgICAgICBjcyA9IFRlcm1pbmFsLmNoYXJzZXRzLlN3ZWRpc2g7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAnPSc6IC8vIFN3aXNzCiAgICAgICAgICAgIGNzID0gVGVybWluYWwuY2hhcnNldHMuU3dpc3M7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAnLyc6IC8vIElTT0xhdGluIChhY3R1YWxseSAvQSkKICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5JU09MYXRpbjsKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGRlZmF1bHQ6IC8vIERlZmF1bHQKICAgICAgICAgICAgY3MgPSBUZXJtaW5hbC5jaGFyc2V0cy5VUzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICAgIHRoaXMuc2V0Z0NoYXJzZXQodGhpcy5nY2hhcnNldCwgY3MpOwogICAgICAgIHRoaXMuZ2NoYXJzZXQgPSBudWxsOwogICAgICAgIHRoaXMuc3RhdGUgPSBub3JtYWw7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIG9zYzoKICAgICAgICAvLyBPU0MgUHMgOyBQdCBTVAogICAgICAgIC8vIE9TQyBQcyA7IFB0IEJFTAogICAgICAgIC8vICAgU2V0IFRleHQgUGFyYW1ldGVycy4KICAgICAgICBpZiAoY2ggPT09ICdceDFiJyB8fCBjaCA9PT0gJ1x4MDcnKSB7CiAgICAgICAgICBpZiAoY2ggPT09ICdceDFiJykgaSsrOwoKICAgICAgICAgIHRoaXMucGFyYW1zLnB1c2godGhpcy5jdXJyZW50UGFyYW0pOwoKICAgICAgICAgIHN3aXRjaCAodGhpcy5wYXJhbXNbMF0pIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBpZiAodGhpcy5wYXJhbXNbMV0pIHsKICAgICAgICAgICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLnBhcmFtc1sxXTsKICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlVGl0bGUodGhpcy50aXRsZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgLy8gc2V0IFggcHJvcGVydHkKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgLy8gY2hhbmdlIGR5bmFtaWMgY29sb3JzCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgLy8gY2hhbmdlIGR5bmFtaWMgdWkgY29sb3JzCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNDY6CiAgICAgICAgICAgICAgLy8gY2hhbmdlIGxvZyBmaWxlCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNTA6CiAgICAgICAgICAgICAgLy8gZHluYW1pYyBmb250CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgNTE6CiAgICAgICAgICAgICAgLy8gZW1hY3Mgc2hlbGwKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSA1MjoKICAgICAgICAgICAgICAvLyBtYW5pcHVsYXRlIHNlbGVjdGlvbiBkYXRhCiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMTA0OgogICAgICAgICAgICBjYXNlIDEwNToKICAgICAgICAgICAgY2FzZSAxMTA6CiAgICAgICAgICAgIGNhc2UgMTExOgogICAgICAgICAgICBjYXNlIDExMjoKICAgICAgICAgICAgY2FzZSAxMTM6CiAgICAgICAgICAgIGNhc2UgMTE0OgogICAgICAgICAgICBjYXNlIDExNToKICAgICAgICAgICAgY2FzZSAxMTY6CiAgICAgICAgICAgIGNhc2UgMTE3OgogICAgICAgICAgICBjYXNlIDExODoKICAgICAgICAgICAgICAvLyByZXNldCBjb2xvcnMKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLnBhcmFtcyA9IFtdOwogICAgICAgICAgdGhpcy5jdXJyZW50UGFyYW0gPSAwOwogICAgICAgICAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKCF0aGlzLnBhcmFtcy5sZW5ndGgpIHsKICAgICAgICAgICAgaWYgKGNoID49ICcwJyAmJiBjaCA8PSAnOScpIHsKICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSAqIDEwICsgY2guY2hhckNvZGVBdCgwKSAtIDQ4OwogICAgICAgICAgICB9IGVsc2UgaWYgKGNoID09PSAnOycpIHsKICAgICAgICAgICAgICB0aGlzLnBhcmFtcy5wdXNoKHRoaXMuY3VycmVudFBhcmFtKTsKICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9ICcnOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSArPSBjaDsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIGNzaToKICAgICAgICAvLyAnPycsICc+JywgJyEnCiAgICAgICAgaWYgKGNoID09PSAnPycgfHwgY2ggPT09ICc+JyB8fCBjaCA9PT0gJyEnKSB7CiAgICAgICAgICB0aGlzLnByZWZpeCA9IGNoOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICAvLyAwIC0gOQogICAgICAgIGlmIChjaCA+PSAnMCcgJiYgY2ggPD0gJzknKSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IHRoaXMuY3VycmVudFBhcmFtICogMTAgKyBjaC5jaGFyQ29kZUF0KDApIC0gNDg7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIC8vICckJywgJyInLCAnICcsICdcJycKICAgICAgICBpZiAoY2ggPT09ICckJyB8fCBjaCA9PT0gJyInIHx8IGNoID09PSAnICcgfHwgY2ggPT09ICdcJycpIHsKICAgICAgICAgIHRoaXMucG9zdGZpeCA9IGNoOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnBhcmFtcy5wdXNoKHRoaXMuY3VycmVudFBhcmFtKTsKICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IDA7CgogICAgICAgIC8vICc7JwogICAgICAgIGlmIChjaCA9PT0gJzsnKSBicmVhazsKCiAgICAgICAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKCiAgICAgICAgc3dpdGNoIChjaCkgewogICAgICAgICAgLy8gQ1NJIFBzIEEKICAgICAgICAgIC8vIEN1cnNvciBVcCBQcyBUaW1lcyAoZGVmYXVsdCA9IDEpIChDVVUpLgogICAgICAgICAgY2FzZSAnQSc6CiAgICAgICAgICAgIHRoaXMuY3Vyc29yVXAodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgQgogICAgICAgICAgLy8gQ3Vyc29yIERvd24gUHMgVGltZXMgKGRlZmF1bHQgPSAxKSAoQ1VEKS4KICAgICAgICAgIGNhc2UgJ0InOgogICAgICAgICAgICB0aGlzLmN1cnNvckRvd24odGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgQwogICAgICAgICAgLy8gQ3Vyc29yIEZvcndhcmQgUHMgVGltZXMgKGRlZmF1bHQgPSAxKSAoQ1VGKS4KICAgICAgICAgIGNhc2UgJ0MnOgogICAgICAgICAgICB0aGlzLmN1cnNvckZvcndhcmQodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgRAogICAgICAgICAgLy8gQ3Vyc29yIEJhY2t3YXJkIFBzIFRpbWVzIChkZWZhdWx0ID0gMSkgKENVQikuCiAgICAgICAgICBjYXNlICdEJzoKICAgICAgICAgICAgdGhpcy5jdXJzb3JCYWNrd2FyZCh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyA7IFBzIEgKICAgICAgICAgIC8vIEN1cnNvciBQb3NpdGlvbiBbcm93O2NvbHVtbl0gKGRlZmF1bHQgPSBbMSwxXSkgKENVUCkuCiAgICAgICAgICBjYXNlICdIJzoKICAgICAgICAgICAgdGhpcy5jdXJzb3JQb3ModGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgSiAgRXJhc2UgaW4gRGlzcGxheSAoRUQpLgogICAgICAgICAgY2FzZSAnSic6CiAgICAgICAgICAgIHRoaXMuZXJhc2VJbkRpc3BsYXkodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgSyAgRXJhc2UgaW4gTGluZSAoRUwpLgogICAgICAgICAgY2FzZSAnSyc6CiAgICAgICAgICAgIHRoaXMuZXJhc2VJbkxpbmUodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUG0gbSAgQ2hhcmFjdGVyIEF0dHJpYnV0ZXMgKFNHUikuCiAgICAgICAgICBjYXNlICdtJzoKICAgICAgICAgICAgaWYgKCF0aGlzLnByZWZpeCkgewogICAgICAgICAgICAgIHRoaXMuY2hhckF0dHJpYnV0ZXModGhpcy5wYXJhbXMpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBuICBEZXZpY2UgU3RhdHVzIFJlcG9ydCAoRFNSKS4KICAgICAgICAgIGNhc2UgJ24nOgogICAgICAgICAgICBpZiAoIXRoaXMucHJlZml4KSB7CiAgICAgICAgICAgICAgdGhpcy5kZXZpY2VTdGF0dXModGhpcy5wYXJhbXMpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8qKgogICAgICAgICAgICogQWRkaXRpb25zCiAgICAgICAgICAgKi8KCiAgICAgICAgICAvLyBDU0kgUHMgQAogICAgICAgICAgLy8gSW5zZXJ0IFBzIChCbGFuaykgQ2hhcmFjdGVyKHMpIChkZWZhdWx0ID0gMSkgKElDSCkuCiAgICAgICAgICBjYXNlICdAJzoKICAgICAgICAgICAgdGhpcy5pbnNlcnRDaGFycyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBFCiAgICAgICAgICAvLyBDdXJzb3IgTmV4dCBMaW5lIFBzIFRpbWVzIChkZWZhdWx0ID0gMSkgKENOTCkuCiAgICAgICAgICBjYXNlICdFJzoKICAgICAgICAgICAgdGhpcy5jdXJzb3JOZXh0TGluZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBGCiAgICAgICAgICAvLyBDdXJzb3IgUHJlY2VkaW5nIExpbmUgUHMgVGltZXMgKGRlZmF1bHQgPSAxKSAoQ05MKS4KICAgICAgICAgIGNhc2UgJ0YnOgogICAgICAgICAgICB0aGlzLmN1cnNvclByZWNlZGluZ0xpbmUodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgRwogICAgICAgICAgLy8gQ3Vyc29yIENoYXJhY3RlciBBYnNvbHV0ZSAgW2NvbHVtbl0gKGRlZmF1bHQgPSBbcm93LDFdKSAoQ0hBKS4KICAgICAgICAgIGNhc2UgJ0cnOgogICAgICAgICAgICB0aGlzLmN1cnNvckNoYXJBYnNvbHV0ZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBMCiAgICAgICAgICAvLyBJbnNlcnQgUHMgTGluZShzKSAoZGVmYXVsdCA9IDEpIChJTCkuCiAgICAgICAgICBjYXNlICdMJzoKICAgICAgICAgICAgdGhpcy5pbnNlcnRMaW5lcyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBNCiAgICAgICAgICAvLyBEZWxldGUgUHMgTGluZShzKSAoZGVmYXVsdCA9IDEpIChETCkuCiAgICAgICAgICBjYXNlICdNJzoKICAgICAgICAgICAgdGhpcy5kZWxldGVMaW5lcyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBQCiAgICAgICAgICAvLyBEZWxldGUgUHMgQ2hhcmFjdGVyKHMpIChkZWZhdWx0ID0gMSkgKERDSCkuCiAgICAgICAgICBjYXNlICdQJzoKICAgICAgICAgICAgdGhpcy5kZWxldGVDaGFycyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBYCiAgICAgICAgICAvLyBFcmFzZSBQcyBDaGFyYWN0ZXIocykgKGRlZmF1bHQgPSAxKSAoRUNIKS4KICAgICAgICAgIGNhc2UgJ1gnOgogICAgICAgICAgICB0aGlzLmVyYXNlQ2hhcnModGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUG0gYCAgQ2hhcmFjdGVyIFBvc2l0aW9uIEFic29sdXRlCiAgICAgICAgICAvLyAgIFtjb2x1bW5dIChkZWZhdWx0ID0gW3JvdywxXSkgKEhQQSkuCiAgICAgICAgICBjYXNlICdgJzoKICAgICAgICAgICAgdGhpcy5jaGFyUG9zQWJzb2x1dGUodGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyAxNDEgNjEgYSAqIEhQUiAtCiAgICAgICAgICAvLyBIb3Jpem9udGFsIFBvc2l0aW9uIFJlbGF0aXZlCiAgICAgICAgICBjYXNlICdhJzoKICAgICAgICAgICAgdGhpcy5IUG9zaXRpb25SZWxhdGl2ZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQIHMgYwogICAgICAgICAgLy8gU2VuZCBEZXZpY2UgQXR0cmlidXRlcyAoUHJpbWFyeSBEQSkuCiAgICAgICAgICAvLyBDU0kgPiBQIHMgYwogICAgICAgICAgLy8gU2VuZCBEZXZpY2UgQXR0cmlidXRlcyAoU2Vjb25kYXJ5IERBKQogICAgICAgICAgY2FzZSAnYyc6CiAgICAgICAgICAgIHRoaXMuc2VuZERldmljZUF0dHJpYnV0ZXModGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUG0gZAogICAgICAgICAgLy8gTGluZSBQb3NpdGlvbiBBYnNvbHV0ZSAgW3Jvd10gKGRlZmF1bHQgPSBbMSxjb2x1bW5dKSAoVlBBKS4KICAgICAgICAgIGNhc2UgJ2QnOgogICAgICAgICAgICB0aGlzLmxpbmVQb3NBYnNvbHV0ZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIDE0NSA2NSBlICogVlBSIC0gVmVydGljYWwgUG9zaXRpb24gUmVsYXRpdmUKICAgICAgICAgIGNhc2UgJ2UnOgogICAgICAgICAgICB0aGlzLlZQb3NpdGlvblJlbGF0aXZlKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBzIDsgUHMgZgogICAgICAgICAgLy8gICBIb3Jpem9udGFsIGFuZCBWZXJ0aWNhbCBQb3NpdGlvbiBbcm93O2NvbHVtbl0gKGRlZmF1bHQgPQogICAgICAgICAgLy8gICBbMSwxXSkgKEhWUCkuCiAgICAgICAgICBjYXNlICdmJzoKICAgICAgICAgICAgdGhpcy5IVlBvc2l0aW9uKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBtIGggIFNldCBNb2RlIChTTSkuCiAgICAgICAgICAvLyBDU0kgPyBQbSBoIC0gbW91c2UgZXNjYXBlIGNvZGVzLCBjdXJzb3IgZXNjYXBlIGNvZGVzCiAgICAgICAgICBjYXNlICdoJzoKICAgICAgICAgICAgdGhpcy5zZXRNb2RlKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBtIGwgIFJlc2V0IE1vZGUgKFJNKS4KICAgICAgICAgIC8vIENTSSA/IFBtIGwKICAgICAgICAgIGNhc2UgJ2wnOgogICAgICAgICAgICB0aGlzLnJlc2V0TW9kZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyA7IFBzIHIKICAgICAgICAgIC8vICAgU2V0IFNjcm9sbGluZyBSZWdpb24gW3RvcDtib3R0b21dIChkZWZhdWx0ID0gZnVsbCBzaXplIG9mIHdpbi0KICAgICAgICAgIC8vICAgZG93KSAoREVDU1RCTSkuCiAgICAgICAgICAvLyBDU0kgPyBQbSByCiAgICAgICAgICBjYXNlICdyJzoKICAgICAgICAgICAgdGhpcy5zZXRTY3JvbGxSZWdpb24odGhpcy5wYXJhbXMpOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgcwogICAgICAgICAgLy8gICBTYXZlIGN1cnNvciAoQU5TSS5TWVMpLgogICAgICAgICAgY2FzZSAncyc6CiAgICAgICAgICAgIHRoaXMuc2F2ZUN1cnNvcih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSB1CiAgICAgICAgICAvLyAgIFJlc3RvcmUgY3Vyc29yIChBTlNJLlNZUykuCiAgICAgICAgICBjYXNlICd1JzoKICAgICAgICAgICAgdGhpcy5yZXN0b3JlQ3Vyc29yKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBMZXNzZXIgVXNlZAogICAgICAgICAgICovCgogICAgICAgICAgLy8gQ1NJIFBzIEkKICAgICAgICAgIC8vIEN1cnNvciBGb3J3YXJkIFRhYnVsYXRpb24gUHMgdGFiIHN0b3BzIChkZWZhdWx0ID0gMSkgKENIVCkuCiAgICAgICAgICBjYXNlICdJJzoKICAgICAgICAgICAgdGhpcy5jdXJzb3JGb3J3YXJkVGFiKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBzIFMgIFNjcm9sbCB1cCBQcyBsaW5lcyAoZGVmYXVsdCA9IDEpIChTVSkuCiAgICAgICAgICBjYXNlICdTJzoKICAgICAgICAgICAgdGhpcy5zY3JvbGxVcCh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBUICBTY3JvbGwgZG93biBQcyBsaW5lcyAoZGVmYXVsdCA9IDEpIChTRCkuCiAgICAgICAgICAvLyBDU0kgUHMgOyBQcyA7IFBzIDsgUHMgOyBQcyBUCiAgICAgICAgICAvLyBDU0kgPiBQczsgUHMgVAogICAgICAgICAgY2FzZSAnVCc6CiAgICAgICAgICAgIC8vIGlmICh0aGlzLnByZWZpeCA9PT0gJz4nKSB7CiAgICAgICAgICAgIC8vICAgdGhpcy5yZXNldFRpdGxlTW9kZXModGhpcy5wYXJhbXMpOwogICAgICAgICAgICAvLyAgIGJyZWFrOwogICAgICAgICAgICAvLyB9CiAgICAgICAgICAgIC8vIGlmICh0aGlzLnBhcmFtcy5sZW5ndGggPiAyKSB7CiAgICAgICAgICAgIC8vICAgdGhpcy5pbml0TW91c2VUcmFja2luZyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIC8vICAgYnJlYWs7CiAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgaWYgKHRoaXMucGFyYW1zLmxlbmd0aCA8IDIgJiYgIXRoaXMucHJlZml4KSB7CiAgICAgICAgICAgICAgdGhpcy5zY3JvbGxEb3duKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgWgogICAgICAgICAgLy8gQ3Vyc29yIEJhY2t3YXJkIFRhYnVsYXRpb24gUHMgdGFiIHN0b3BzIChkZWZhdWx0ID0gMSkgKENCVCkuCiAgICAgICAgICBjYXNlICdaJzoKICAgICAgICAgICAgdGhpcy5jdXJzb3JCYWNrd2FyZFRhYih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBiICBSZXBlYXQgdGhlIHByZWNlZGluZyBncmFwaGljIGNoYXJhY3RlciBQcyB0aW1lcyAoUkVQKS4KICAgICAgICAgIGNhc2UgJ2InOgogICAgICAgICAgICB0aGlzLnJlcGVhdFByZWNlZGluZ0NoYXJhY3Rlcih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyBnICBUYWIgQ2xlYXIgKFRCQykuCiAgICAgICAgICBjYXNlICdnJzoKICAgICAgICAgICAgdGhpcy50YWJDbGVhcih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQbSBpICBNZWRpYSBDb3B5IChNQykuCiAgICAgICAgICAvLyBDU0kgPyBQbSBpCiAgICAgICAgICAvLyBjYXNlICdpJzoKICAgICAgICAgIC8vICAgdGhpcy5tZWRpYUNvcHkodGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUG0gbSAgQ2hhcmFjdGVyIEF0dHJpYnV0ZXMgKFNHUikuCiAgICAgICAgICAvLyBDU0kgPiBQczsgUHMgbQogICAgICAgICAgLy8gY2FzZSAnbSc6IC8vIGR1cGxpY2F0ZQogICAgICAgICAgLy8gICBpZiAodGhpcy5wcmVmaXggPT09ICc+JykgewogICAgICAgICAgLy8gICAgIHRoaXMuc2V0UmVzb3VyY2VzKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfSBlbHNlIHsKICAgICAgICAgIC8vICAgICB0aGlzLmNoYXJBdHRyaWJ1dGVzKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfQogICAgICAgICAgLy8gICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUHMgbiAgRGV2aWNlIFN0YXR1cyBSZXBvcnQgKERTUikuCiAgICAgICAgICAvLyBDU0kgPiBQcyBuCiAgICAgICAgICAvLyBjYXNlICduJzogLy8gZHVwbGljYXRlCiAgICAgICAgICAvLyAgIGlmICh0aGlzLnByZWZpeCA9PT0gJz4nKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5kaXNhYmxlTW9kaWZpZXJzKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfSBlbHNlIHsKICAgICAgICAgIC8vICAgICB0aGlzLmRldmljZVN0YXR1cyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJID4gUHMgcCAgU2V0IHBvaW50ZXIgbW9kZS4KICAgICAgICAgIC8vIENTSSAhIHAgICBTb2Z0IHRlcm1pbmFsIHJlc2V0IChERUNTVFIpLgogICAgICAgICAgLy8gQ1NJIFBzJCBwCiAgICAgICAgICAvLyAgIFJlcXVlc3QgQU5TSSBtb2RlIChERUNSUU0pLgogICAgICAgICAgLy8gQ1NJID8gUHMkIHAKICAgICAgICAgIC8vICAgUmVxdWVzdCBERUMgcHJpdmF0ZSBtb2RlIChERUNSUU0pLgogICAgICAgICAgLy8gQ1NJIFBzIDsgUHMgIiBwCiAgICAgICAgICBjYXNlICdwJzoKICAgICAgICAgICAgc3dpdGNoICh0aGlzLnByZWZpeCkgewogICAgICAgICAgICAgIC8vIGNhc2UgJz4nOgogICAgICAgICAgICAgIC8vICAgdGhpcy5zZXRQb2ludGVyTW9kZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAgICAgLy8gICBicmVhazsKICAgICAgICAgICAgICBjYXNlICchJzoKICAgICAgICAgICAgICAgIHRoaXMuc29mdFJlc2V0KHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIC8vIGNhc2UgJz8nOgogICAgICAgICAgICAgIC8vICAgaWYgKHRoaXMucG9zdGZpeCA9PT0gJyQnKSB7CiAgICAgICAgICAgICAgLy8gICAgIHRoaXMucmVxdWVzdFByaXZhdGVNb2RlKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgICAvLyAgIH0KICAgICAgICAgICAgICAvLyAgIGJyZWFrOwogICAgICAgICAgICAgIC8vIGRlZmF1bHQ6CiAgICAgICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnIicpIHsKICAgICAgICAgICAgICAvLyAgICAgdGhpcy5zZXRDb25mb3JtYW5jZUxldmVsKHRoaXMucGFyYW1zKTsKICAgICAgICAgICAgICAvLyAgIH0gZWxzZSBpZiAodGhpcy5wb3N0Zml4ID09PSAnJCcpIHsKICAgICAgICAgICAgICAvLyAgICAgdGhpcy5yZXF1ZXN0QW5zaU1vZGUodGhpcy5wYXJhbXMpOwogICAgICAgICAgICAgIC8vICAgfQogICAgICAgICAgICAgIC8vICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBzIHEgIExvYWQgTEVEcyAoREVDTEwpLgogICAgICAgICAgLy8gQ1NJIFBzIFNQIHEKICAgICAgICAgIC8vIENTSSBQcyAiIHEKICAgICAgICAgIC8vIGNhc2UgJ3EnOgogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnICcpIHsKICAgICAgICAgIC8vICAgICB0aGlzLnNldEN1cnNvclN0eWxlKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgICBicmVhazsKICAgICAgICAgIC8vICAgfQogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnIicpIHsKICAgICAgICAgIC8vICAgICB0aGlzLnNldENoYXJQcm90ZWN0aW9uQXR0cih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgdGhpcy5sb2FkTEVEcyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyA7IFBzIHIKICAgICAgICAgIC8vICAgU2V0IFNjcm9sbGluZyBSZWdpb24gW3RvcDtib3R0b21dIChkZWZhdWx0ID0gZnVsbCBzaXplIG9mIHdpbi0KICAgICAgICAgIC8vICAgZG93KSAoREVDU1RCTSkuCiAgICAgICAgICAvLyBDU0kgPyBQbSByCiAgICAgICAgICAvLyBDU0kgUHQ7IFBsOyBQYjsgUHI7IFBzJCByCiAgICAgICAgICAvLyBjYXNlICdyJzogLy8gZHVwbGljYXRlCiAgICAgICAgICAvLyAgIGlmICh0aGlzLnByZWZpeCA9PT0gJz8nKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5yZXN0b3JlUHJpdmF0ZVZhbHVlcyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0gZWxzZSBpZiAodGhpcy5wb3N0Zml4ID09PSAnJCcpIHsKICAgICAgICAgIC8vICAgICB0aGlzLnNldEF0dHJJblJlY3RhbmdsZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0gZWxzZSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5zZXRTY3JvbGxSZWdpb24odGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBzICAgICBTYXZlIGN1cnNvciAoQU5TSS5TWVMpLgogICAgICAgICAgLy8gQ1NJID8gUG0gcwogICAgICAgICAgLy8gY2FzZSAncyc6IC8vIGR1cGxpY2F0ZQogICAgICAgICAgLy8gICBpZiAodGhpcy5wcmVmaXggPT09ICc/JykgewogICAgICAgICAgLy8gICAgIHRoaXMuc2F2ZVByaXZhdGVWYWx1ZXModGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9IGVsc2UgewogICAgICAgICAgLy8gICAgIHRoaXMuc2F2ZUN1cnNvcih0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBzIDsgUHMgOyBQcyB0CiAgICAgICAgICAvLyBDU0kgUHQ7IFBsOyBQYjsgUHI7IFBzJCB0CiAgICAgICAgICAvLyBDU0kgPiBQczsgUHMgdAogICAgICAgICAgLy8gQ1NJIFBzIFNQIHQKICAgICAgICAgIC8vIGNhc2UgJ3QnOgogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnJCcpIHsKICAgICAgICAgIC8vICAgICB0aGlzLnJldmVyc2VBdHRySW5SZWN0YW5nbGUodGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9IGVsc2UgaWYgKHRoaXMucG9zdGZpeCA9PT0gJyAnKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5zZXRXYXJuaW5nQmVsbFZvbHVtZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0gZWxzZSB7CiAgICAgICAgICAvLyAgICAgaWYgKHRoaXMucHJlZml4ID09PSAnPicpIHsKICAgICAgICAgIC8vICAgICAgIHRoaXMuc2V0VGl0bGVNb2RlRmVhdHVyZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vICAgICAgIHRoaXMubWFuaXB1bGF0ZVdpbmRvdyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgICAgfQogICAgICAgICAgLy8gICB9CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSB1ICAgICBSZXN0b3JlIGN1cnNvciAoQU5TSS5TWVMpLgogICAgICAgICAgLy8gQ1NJIFBzIFNQIHUKICAgICAgICAgIC8vIGNhc2UgJ3UnOiAvLyBkdXBsaWNhdGUKICAgICAgICAgIC8vICAgaWYgKHRoaXMucG9zdGZpeCA9PT0gJyAnKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5zZXRNYXJnaW5CZWxsVm9sdW1lKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfSBlbHNlIHsKICAgICAgICAgIC8vICAgICB0aGlzLnJlc3RvcmVDdXJzb3IodGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQdDsgUGw7IFBiOyBQcjsgUHA7IFB0OyBQbDsgUHAkIHYKICAgICAgICAgIC8vIGNhc2UgJ3YnOgogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnJCcpIHsKICAgICAgICAgIC8vICAgICB0aGlzLmNvcHlSZWN0YWdsZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFB0IDsgUGwgOyBQYiA7IFByICcgdwogICAgICAgICAgLy8gY2FzZSAndyc6CiAgICAgICAgICAvLyAgIGlmICh0aGlzLnBvc3RmaXggPT09ICdcJycpIHsKICAgICAgICAgIC8vICAgICB0aGlzLmVuYWJsZUZpbHRlclJlY3RhbmdsZSh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFBzIHggIFJlcXVlc3QgVGVybWluYWwgUGFyYW1ldGVycyAoREVDUkVRVFBBUk0pLgogICAgICAgICAgLy8gQ1NJIFBzIHggIFNlbGVjdCBBdHRyaWJ1dGUgQ2hhbmdlIEV4dGVudCAoREVDU0FDRSkuCiAgICAgICAgICAvLyBDU0kgUGM7IFB0OyBQbDsgUGI7IFByJCB4CiAgICAgICAgICAvLyBjYXNlICd4JzoKICAgICAgICAgIC8vICAgaWYgKHRoaXMucG9zdGZpeCA9PT0gJyQnKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5maWxsUmVjdGFuZ2xlKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfSBlbHNlIHsKICAgICAgICAgIC8vICAgICB0aGlzLnJlcXVlc3RQYXJhbWV0ZXJzKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgICAvL3RoaXMuX18odGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyA7IFB1ICcgegogICAgICAgICAgLy8gQ1NJIFB0OyBQbDsgUGI7IFByJCB6CiAgICAgICAgICAvLyBjYXNlICd6JzoKICAgICAgICAgIC8vICAgaWYgKHRoaXMucG9zdGZpeCA9PT0gJ1wnJykgewogICAgICAgICAgLy8gICAgIHRoaXMuZW5hYmxlTG9jYXRvclJlcG9ydGluZyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0gZWxzZSBpZiAodGhpcy5wb3N0Zml4ID09PSAnJCcpIHsKICAgICAgICAgIC8vICAgICB0aGlzLmVyYXNlUmVjdGFuZ2xlKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfQogICAgICAgICAgLy8gICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUG0gJyB7CiAgICAgICAgICAvLyBDU0kgUHQ7IFBsOyBQYjsgUHIkIHsKICAgICAgICAgIC8vIGNhc2UgJ3snOgogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnXCcnKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5zZXRMb2NhdG9yRXZlbnRzKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfSBlbHNlIGlmICh0aGlzLnBvc3RmaXggPT09ICckJykgewogICAgICAgICAgLy8gICAgIHRoaXMuc2VsZWN0aXZlRXJhc2VSZWN0YW5nbGUodGhpcy5wYXJhbXMpOwogICAgICAgICAgLy8gICB9CiAgICAgICAgICAvLyAgIGJyZWFrOwoKICAgICAgICAgIC8vIENTSSBQcyAnIHwKICAgICAgICAgIC8vIGNhc2UgJ3wnOgogICAgICAgICAgLy8gICBpZiAodGhpcy5wb3N0Zml4ID09PSAnXCcnKSB7CiAgICAgICAgICAvLyAgICAgdGhpcy5yZXF1ZXN0TG9jYXRvclBvc2l0aW9uKHRoaXMucGFyYW1zKTsKICAgICAgICAgIC8vICAgfQogICAgICAgICAgLy8gICBicmVhazsKCiAgICAgICAgICAvLyBDU0kgUCBtIFNQIH0KICAgICAgICAgIC8vIEluc2VydCBQIHMgQ29sdW1uKHMpIChkZWZhdWx0ID0gMSkgKERFQ0lDKSwgVlQ0MjAgYW5kIHVwLgogICAgICAgICAgLy8gY2FzZSAnfSc6CiAgICAgICAgICAvLyAgIGlmICh0aGlzLnBvc3RmaXggPT09ICcgJykgewogICAgICAgICAgLy8gICAgIHRoaXMuaW5zZXJ0Q29sdW1ucyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgLy8gQ1NJIFAgbSBTUCB+CiAgICAgICAgICAvLyBEZWxldGUgUCBzIENvbHVtbihzKSAoZGVmYXVsdCA9IDEpIChERUNEQyksIFZUNDIwIGFuZCB1cAogICAgICAgICAgLy8gY2FzZSAnfic6CiAgICAgICAgICAvLyAgIGlmICh0aGlzLnBvc3RmaXggPT09ICcgJykgewogICAgICAgICAgLy8gICAgIHRoaXMuZGVsZXRlQ29sdW1ucyh0aGlzLnBhcmFtcyk7CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vICAgYnJlYWs7CgogICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgdGhpcy5lcnJvcignVW5rbm93biBDU0kgY29kZTogJXMuJywgY2gpOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CgogICAgICAgIHRoaXMucHJlZml4ID0gJyc7CiAgICAgICAgdGhpcy5wb3N0Zml4ID0gJyc7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIGRjczoKICAgICAgICBpZiAoY2ggPT09ICdceDFiJyB8fCBjaCA9PT0gJ1x4MDcnKSB7CiAgICAgICAgICBpZiAoY2ggPT09ICdceDFiJykgaSsrOwoKICAgICAgICAgIHN3aXRjaCAodGhpcy5wcmVmaXgpIHsKICAgICAgICAgICAgLy8gVXNlci1EZWZpbmVkIEtleXMgKERFQ1VESykuCiAgICAgICAgICAgIGNhc2UgJyc6CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAvLyBSZXF1ZXN0IFN0YXR1cyBTdHJpbmcgKERFQ1JRU1MpLgogICAgICAgICAgICAvLyB0ZXN0OiBlY2hvIC1lICdcZVAkcSJwXGVcXCcKICAgICAgICAgICAgY2FzZSAnJHEnOgogICAgICAgICAgICAgIHZhciBwdCA9IHRoaXMuY3VycmVudFBhcmFtCiAgICAgICAgICAgICAgICAsIHZhbGlkID0gZmFsc2U7CgogICAgICAgICAgICAgIHN3aXRjaCAocHQpIHsKICAgICAgICAgICAgICAgIC8vIERFQ1NDQQogICAgICAgICAgICAgICAgY2FzZSAnInEnOgogICAgICAgICAgICAgICAgICBwdCA9ICcwInEnOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAvLyBERUNTQ0wKICAgICAgICAgICAgICAgIGNhc2UgJyJwJzoKICAgICAgICAgICAgICAgICAgcHQgPSAnNjEicCc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIC8vIERFQ1NUQk0KICAgICAgICAgICAgICAgIGNhc2UgJ3InOgogICAgICAgICAgICAgICAgICBwdCA9ICcnCiAgICAgICAgICAgICAgICAgICAgKyAodGhpcy5zY3JvbGxUb3AgKyAxKQogICAgICAgICAgICAgICAgICAgICsgJzsnCiAgICAgICAgICAgICAgICAgICAgKyAodGhpcy5zY3JvbGxCb3R0b20gKyAxKQogICAgICAgICAgICAgICAgICAgICsgJ3InOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICAvLyBTR1IKICAgICAgICAgICAgICAgIGNhc2UgJ20nOgogICAgICAgICAgICAgICAgICBwdCA9ICcwbSc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IoJ1Vua25vd24gRENTIFB0OiAlcy4nLCBwdCk7CiAgICAgICAgICAgICAgICAgIHB0ID0gJyc7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy5zZW5kKCdceDFiUCcgKyArdmFsaWQgKyAnJHInICsgcHQgKyAnXHgxYlxcJyk7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAvLyBTZXQgVGVybWNhcC9UZXJtaW5mbyBEYXRhICh4dGVybSwgZXhwZXJpbWVudGFsKS4KICAgICAgICAgICAgY2FzZSAnK3AnOgogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgLy8gUmVxdWVzdCBUZXJtY2FwL1Rlcm1pbmZvIFN0cmluZyAoeHRlcm0sIGV4cGVyaW1lbnRhbCkKICAgICAgICAgICAgLy8gUmVndWxhciB4dGVybSBkb2VzIG5vdCBldmVuIHJlc3BvbmQgdG8gdGhpcyBzZXF1ZW5jZS4KICAgICAgICAgICAgLy8gVGhpcyBjYW4gY2F1c2UgYSBzbWFsbCBnbGl0Y2ggaW4gdmltLgogICAgICAgICAgICAvLyB0ZXN0OiBlY2hvIC1uZSAnXGVQK3E2YjY0XGVcXCcKICAgICAgICAgICAgY2FzZSAnK3EnOgogICAgICAgICAgICAgIHZhciBwdCA9IHRoaXMuY3VycmVudFBhcmFtCiAgICAgICAgICAgICAgICAsIHZhbGlkID0gZmFsc2U7CgogICAgICAgICAgICAgIHRoaXMuc2VuZCgnXHgxYlAnICsgK3ZhbGlkICsgJytyJyArIHB0ICsgJ1x4MWJcXCcpOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICB0aGlzLmVycm9yKCdVbmtub3duIERDUyBwcmVmaXg6ICVzLicsIHRoaXMucHJlZml4KTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLmN1cnJlbnRQYXJhbSA9IDA7CiAgICAgICAgICB0aGlzLnByZWZpeCA9ICcnOwogICAgICAgICAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLmN1cnJlbnRQYXJhbSkgewogICAgICAgICAgaWYgKCF0aGlzLnByZWZpeCAmJiBjaCAhPT0gJyQnICYmIGNoICE9PSAnKycpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFyYW0gPSBjaDsKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmVmaXgubGVuZ3RoID09PSAyKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFBhcmFtID0gY2g7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnByZWZpeCArPSBjaDsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5jdXJyZW50UGFyYW0gKz0gY2g7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSBpZ25vcmU6CiAgICAgICAgLy8gRm9yIFBNIGFuZCBBUEMuCiAgICAgICAgaWYgKGNoID09PSAnXHgxYicgfHwgY2ggPT09ICdceDA3JykgewogICAgICAgICAgaWYgKGNoID09PSAnXHgxYicpIGkrKzsKICAgICAgICAgIHRoaXMuc3RhdGUgPSBub3JtYWw7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgfQogIH0KCiAgdGhpcy51cGRhdGVSYW5nZSh0aGlzLnkpOwogIHRoaXMucmVmcmVzaCh0aGlzLnJlZnJlc2hTdGFydCwgdGhpcy5yZWZyZXNoRW5kKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS53cml0ZWxuID0gZnVuY3Rpb24oZGF0YSkgewogIHRoaXMud3JpdGUoZGF0YSArICdcclxuJyk7Cn07CgovLyBLZXkgUmVzb3VyY2VzOgovLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0RPTS9LZXlib2FyZEV2ZW50ClRlcm1pbmFsLnByb3RvdHlwZS5rZXlEb3duID0gZnVuY3Rpb24oZXYpIHsKICB2YXIgc2VsZiA9IHRoaXMKICAgICwga2V5OwoKICBzd2l0Y2ggKGV2LmtleUNvZGUpIHsKICAgIC8vIGJhY2tzcGFjZQogICAgY2FzZSA4OgogICAgICBpZiAoZXYuc2hpZnRLZXkpIHsKICAgICAgICBrZXkgPSAnXHgwOCc7IC8vIF5ICiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAga2V5ID0gJ1x4N2YnOyAvLyBePwogICAgICBicmVhazsKICAgIC8vIHRhYgogICAgY2FzZSA5OgogICAgICBpZiAoZXYuc2hpZnRLZXkpIHsKICAgICAgICBrZXkgPSAnXHgxYltaJzsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBrZXkgPSAnXHQnOwogICAgICBicmVhazsKICAgIC8vIHJldHVybi9lbnRlcgogICAgY2FzZSAxMzoKICAgICAga2V5ID0gJ1xyJzsKICAgICAgYnJlYWs7CiAgICAvLyBlc2NhcGUKICAgIGNhc2UgMjc6CiAgICAgIGtleSA9ICdceDFiJzsKICAgICAgYnJlYWs7CiAgICAvLyBsZWZ0LWFycm93CiAgICBjYXNlIDM3OgogICAgICBpZiAodGhpcy5hcHBsaWNhdGlvbkN1cnNvcikgewogICAgICAgIGtleSA9ICdceDFiT0QnOyAvLyBTUzMgYXMgXltPIGZvciA3LWJpdAogICAgICAgIC8va2V5ID0gJ1x4OGZEJzsgLy8gU1MzIGFzIDB4OGYgZm9yIDgtYml0CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAga2V5ID0gJ1x4MWJbRCc7CiAgICAgIGJyZWFrOwogICAgLy8gcmlnaHQtYXJyb3cKICAgIGNhc2UgMzk6CiAgICAgIGlmICh0aGlzLmFwcGxpY2F0aW9uQ3Vyc29yKSB7CiAgICAgICAga2V5ID0gJ1x4MWJPQyc7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAga2V5ID0gJ1x4MWJbQyc7CiAgICAgIGJyZWFrOwogICAgLy8gdXAtYXJyb3cKICAgIGNhc2UgMzg6CiAgICAgIGlmICh0aGlzLmFwcGxpY2F0aW9uQ3Vyc29yKSB7CiAgICAgICAga2V5ID0gJ1x4MWJPQSc7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgaWYgKGV2LmN0cmxLZXkpIHsKICAgICAgICB0aGlzLnNjcm9sbERpc3AoLTEpOwogICAgICAgIHJldHVybiBjYW5jZWwoZXYpOwogICAgICB9IGVsc2UgewogICAgICAgIGtleSA9ICdceDFiW0EnOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgLy8gZG93bi1hcnJvdwogICAgY2FzZSA0MDoKICAgICAgaWYgKHRoaXMuYXBwbGljYXRpb25DdXJzb3IpIHsKICAgICAgICBrZXkgPSAnXHgxYk9CJzsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZiAoZXYuY3RybEtleSkgewogICAgICAgIHRoaXMuc2Nyb2xsRGlzcCgxKTsKICAgICAgICByZXR1cm4gY2FuY2VsKGV2KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBrZXkgPSAnXHgxYltCJzsKICAgICAgfQogICAgICBicmVhazsKICAgIC8vIGRlbGV0ZQogICAgY2FzZSA0NjoKICAgICAga2V5ID0gJ1x4MWJbM34nOwogICAgICBicmVhazsKICAgIC8vIGluc2VydAogICAgY2FzZSA0NToKICAgICAga2V5ID0gJ1x4MWJbMn4nOwogICAgICBicmVhazsKICAgIC8vIGhvbWUKICAgIGNhc2UgMzY6CiAgICAgIGlmICh0aGlzLmFwcGxpY2F0aW9uS2V5cGFkKSB7CiAgICAgICAga2V5ID0gJ1x4MWJPSCc7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAga2V5ID0gJ1x4MWJPSCc7CiAgICAgIGJyZWFrOwogICAgLy8gZW5kCiAgICBjYXNlIDM1OgogICAgICBpZiAodGhpcy5hcHBsaWNhdGlvbktleXBhZCkgewogICAgICAgIGtleSA9ICdceDFiT0YnOwogICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIGtleSA9ICdceDFiT0YnOwogICAgICBicmVhazsKICAgIC8vIHBhZ2UgdXAKICAgIGNhc2UgMzM6CiAgICAgIGlmIChldi5zaGlmdEtleSkgewogICAgICAgIHRoaXMuc2Nyb2xsRGlzcCgtKHRoaXMucm93cyAtIDEpKTsKICAgICAgICByZXR1cm4gY2FuY2VsKGV2KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBrZXkgPSAnXHgxYls1fic7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICAvLyBwYWdlIGRvd24KICAgIGNhc2UgMzQ6CiAgICAgIGlmIChldi5zaGlmdEtleSkgewogICAgICAgIHRoaXMuc2Nyb2xsRGlzcCh0aGlzLnJvd3MgLSAxKTsKICAgICAgICByZXR1cm4gY2FuY2VsKGV2KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBrZXkgPSAnXHgxYls2fic7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICAvLyBGMQogICAgY2FzZSAxMTI6CiAgICAgIGtleSA9ICdceDFiT1AnOwogICAgICBicmVhazsKICAgIC8vIEYyCiAgICBjYXNlIDExMzoKICAgICAga2V5ID0gJ1x4MWJPUSc7CiAgICAgIGJyZWFrOwogICAgLy8gRjMKICAgIGNhc2UgMTE0OgogICAgICBrZXkgPSAnXHgxYk9SJzsKICAgICAgYnJlYWs7CiAgICAvLyBGNAogICAgY2FzZSAxMTU6CiAgICAgIGtleSA9ICdceDFiT1MnOwogICAgICBicmVhazsKICAgIC8vIEY1CiAgICBjYXNlIDExNjoKICAgICAga2V5ID0gJ1x4MWJbMTV+JzsKICAgICAgYnJlYWs7CiAgICAvLyBGNgogICAgY2FzZSAxMTc6CiAgICAgIGtleSA9ICdceDFiWzE3fic7CiAgICAgIGJyZWFrOwogICAgLy8gRjcKICAgIGNhc2UgMTE4OgogICAgICBrZXkgPSAnXHgxYlsxOH4nOwogICAgICBicmVhazsKICAgIC8vIEY4CiAgICBjYXNlIDExOToKICAgICAga2V5ID0gJ1x4MWJbMTl+JzsKICAgICAgYnJlYWs7CiAgICAvLyBGOQogICAgY2FzZSAxMjA6CiAgICAgIGtleSA9ICdceDFiWzIwfic7CiAgICAgIGJyZWFrOwogICAgLy8gRjEwCiAgICBjYXNlIDEyMToKICAgICAga2V5ID0gJ1x4MWJbMjF+JzsKICAgICAgYnJlYWs7CiAgICAvLyBGMTEKICAgIGNhc2UgMTIyOgogICAgICBrZXkgPSAnXHgxYlsyM34nOwogICAgICBicmVhazsKICAgIC8vIEYxMgogICAgY2FzZSAxMjM6CiAgICAgIGtleSA9ICdceDFiWzI0fic7CiAgICAgIGJyZWFrOwogICAgZGVmYXVsdDoKICAgICAgLy8gYS16IGFuZCBzcGFjZQogICAgICBpZiAoZXYuY3RybEtleSkgewogICAgICAgIGlmIChldi5rZXlDb2RlID49IDY1ICYmIGV2LmtleUNvZGUgPD0gOTApIHsKICAgICAgICAgIC8vIEN0cmwtQQogICAgICAgICAgaWYgKHRoaXMuc2NyZWVuS2V5cykgewogICAgICAgICAgICBpZiAoIXRoaXMucHJlZml4TW9kZSAmJiAhdGhpcy5zZWxlY3RNb2RlICYmIGV2LmtleUNvZGUgPT09IDY1KSB7CiAgICAgICAgICAgICAgdGhpcy5lbnRlclByZWZpeCgpOwogICAgICAgICAgICAgIHJldHVybiBjYW5jZWwoZXYpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAvLyBDdHJsLVYKICAgICAgICAgIGlmICh0aGlzLnByZWZpeE1vZGUgJiYgZXYua2V5Q29kZSA9PT0gODYpIHsKICAgICAgICAgICAgdGhpcy5sZWF2ZVByZWZpeCgpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICAvLyBDdHJsLUMKICAgICAgICAgIGlmICgodGhpcy5wcmVmaXhNb2RlIHx8IHRoaXMuc2VsZWN0TW9kZSkgJiYgZXYua2V5Q29kZSA9PT0gNjcpIHsKICAgICAgICAgICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBzZWxmLmxlYXZlVmlzdWFsKCk7CiAgICAgICAgICAgICAgfSwgMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfQogICAgICAgICAga2V5ID0gU3RyaW5nLmZyb21DaGFyQ29kZShldi5rZXlDb2RlIC0gNjQpOwogICAgICAgIH0gZWxzZSBpZiAoZXYua2V5Q29kZSA9PT0gMzIpIHsKICAgICAgICAgIC8vIE5VTAogICAgICAgICAga2V5ID0gU3RyaW5nLmZyb21DaGFyQ29kZSgwKTsKICAgICAgICB9IGVsc2UgaWYgKGV2LmtleUNvZGUgPj0gNTEgJiYgZXYua2V5Q29kZSA8PSA1NSkgewogICAgICAgICAgLy8gZXNjYXBlLCBmaWxlIHNlcCwgZ3JvdXAgc2VwLCByZWNvcmQgc2VwLCB1bml0IHNlcAogICAgICAgICAga2V5ID0gU3RyaW5nLmZyb21DaGFyQ29kZShldi5rZXlDb2RlIC0gNTEgKyAyNyk7CiAgICAgICAgfSBlbHNlIGlmIChldi5rZXlDb2RlID09PSA1NikgewogICAgICAgICAgLy8gZGVsZXRlCiAgICAgICAgICBrZXkgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKDEyNyk7CiAgICAgICAgfSBlbHNlIGlmIChldi5rZXlDb2RlID09PSAyMTkpIHsKICAgICAgICAgIC8vIF5bIC0gZXNjYXBlCiAgICAgICAgICBrZXkgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKDI3KTsKICAgICAgICB9IGVsc2UgaWYgKGV2LmtleUNvZGUgPT09IDIyMSkgewogICAgICAgICAgLy8gXl0gLSBncm91cCBzZXAKICAgICAgICAgIGtleSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMjkpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmICgoIXRoaXMuaXNNYWMgJiYgZXYuYWx0S2V5KSB8fCAodGhpcy5pc01hYyAmJiBldi5tZXRhS2V5KSkgewogICAgICAgIGlmIChldi5rZXlDb2RlID49IDY1ICYmIGV2LmtleUNvZGUgPD0gOTApIHsKICAgICAgICAgIGtleSA9ICdceDFiJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoZXYua2V5Q29kZSArIDMyKTsKICAgICAgICB9IGVsc2UgaWYgKGV2LmtleUNvZGUgPT09IDE5MikgewogICAgICAgICAga2V5ID0gJ1x4MWJgJzsKICAgICAgICB9IGVsc2UgaWYgKGV2LmtleUNvZGUgPj0gNDggJiYgZXYua2V5Q29kZSA8PSA1NykgewogICAgICAgICAga2V5ID0gJ1x4MWInICsgKGV2LmtleUNvZGUgLSA0OCk7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogIH0KCiAgaWYgKCFrZXkpIHJldHVybiB0cnVlOwoKICBpZiAodGhpcy5wcmVmaXhNb2RlKSB7CiAgICB0aGlzLmxlYXZlUHJlZml4KCk7CiAgICByZXR1cm4gY2FuY2VsKGV2KTsKICB9CgogIGlmICh0aGlzLnNlbGVjdE1vZGUpIHsKICAgIHRoaXMua2V5U2VsZWN0KGV2LCBrZXkpOwogICAgcmV0dXJuIGNhbmNlbChldik7CiAgfQoKICB0aGlzLmVtaXQoJ2tleWRvd24nLCBldik7CiAgdGhpcy5lbWl0KCdrZXknLCBrZXksIGV2KTsKCiAgdGhpcy5zaG93Q3Vyc29yKCk7CiAgdGhpcy5oYW5kbGVyKGtleSk7CgogIHJldHVybiBjYW5jZWwoZXYpOwp9OwoKVGVybWluYWwucHJvdG90eXBlLnNldGdMZXZlbCA9IGZ1bmN0aW9uKGcpIHsKICB0aGlzLmdsZXZlbCA9IGc7CiAgdGhpcy5jaGFyc2V0ID0gdGhpcy5jaGFyc2V0c1tnXTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5zZXRnQ2hhcnNldCA9IGZ1bmN0aW9uKGcsIGNoYXJzZXQpIHsKICB0aGlzLmNoYXJzZXRzW2ddID0gY2hhcnNldDsKICBpZiAodGhpcy5nbGV2ZWwgPT09IGcpIHsKICAgIHRoaXMuY2hhcnNldCA9IGNoYXJzZXQ7CiAgfQp9OwoKVGVybWluYWwucHJvdG90eXBlLmtleVByZXNzID0gZnVuY3Rpb24oZXYpIHsKICB2YXIga2V5OwoKICBjYW5jZWwoZXYpOwoKICBpZiAoZXYuY2hhckNvZGUpIHsKICAgIGtleSA9IGV2LmNoYXJDb2RlOwogIH0gZWxzZSBpZiAoZXYud2hpY2ggPT0gbnVsbCkgewogICAga2V5ID0gZXYua2V5Q29kZTsKICB9IGVsc2UgaWYgKGV2LndoaWNoICE9PSAwICYmIGV2LmNoYXJDb2RlICE9PSAwKSB7CiAgICBrZXkgPSBldi53aGljaDsKICB9IGVsc2UgewogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYgKCFrZXkgfHwgZXYuY3RybEtleSB8fCBldi5hbHRLZXkgfHwgZXYubWV0YUtleSkgcmV0dXJuIGZhbHNlOwoKICBrZXkgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleSk7CgogIGlmICh0aGlzLnByZWZpeE1vZGUpIHsKICAgIHRoaXMubGVhdmVQcmVmaXgoKTsKICAgIHRoaXMua2V5UHJlZml4KGV2LCBrZXkpOwogICAgcmV0dXJuIGZhbHNlOwogIH0KCiAgaWYgKHRoaXMuc2VsZWN0TW9kZSkgewogICAgdGhpcy5rZXlTZWxlY3QoZXYsIGtleSk7CiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICB0aGlzLmVtaXQoJ2tleXByZXNzJywga2V5LCBldik7CiAgdGhpcy5lbWl0KCdrZXknLCBrZXksIGV2KTsKCiAgdGhpcy5zaG93Q3Vyc29yKCk7CiAgdGhpcy5oYW5kbGVyKGtleSk7CgogIHJldHVybiBmYWxzZTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5zZW5kID0gZnVuY3Rpb24oZGF0YSkgewogIHZhciBzZWxmID0gdGhpczsKCiAgaWYgKCF0aGlzLnF1ZXVlKSB7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICBzZWxmLmhhbmRsZXIoc2VsZi5xdWV1ZSk7CiAgICAgIHNlbGYucXVldWUgPSAnJzsKICAgIH0sIDEpOwogIH0KCiAgdGhpcy5xdWV1ZSArPSBkYXRhOwp9OwoKVGVybWluYWwucHJvdG90eXBlLmJlbGwgPSBmdW5jdGlvbigpIHsKICBpZiAoIXRoaXMudmlzdWFsQmVsbCkgcmV0dXJuOwogIHZhciBzZWxmID0gdGhpczsKICB0aGlzLmVsZW1lbnQuc3R5bGUuYm9yZGVyQ29sb3IgPSAnd2hpdGUnOwogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICBzZWxmLmVsZW1lbnQuc3R5bGUuYm9yZGVyQ29sb3IgPSAnJzsKICB9LCAxMCk7CiAgaWYgKHRoaXMucG9wT25CZWxsKSB0aGlzLmZvY3VzKCk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUubG9nID0gZnVuY3Rpb24oKSB7CiAgaWYgKCF0aGlzLmRlYnVnKSByZXR1cm47CiAgaWYgKCF0aGlzLmNvbnRleHQuY29uc29sZSB8fCAhdGhpcy5jb250ZXh0LmNvbnNvbGUubG9nKSByZXR1cm47CiAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpOwogIHRoaXMuY29udGV4dC5jb25zb2xlLmxvZy5hcHBseSh0aGlzLmNvbnRleHQuY29uc29sZSwgYXJncyk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuZXJyb3IgPSBmdW5jdGlvbigpIHsKICBpZiAoIXRoaXMuZGVidWcpIHJldHVybjsKICBpZiAoIXRoaXMuY29udGV4dC5jb25zb2xlIHx8ICF0aGlzLmNvbnRleHQuY29uc29sZS5lcnJvcikgcmV0dXJuOwogIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTsKICB0aGlzLmNvbnRleHQuY29uc29sZS5lcnJvci5hcHBseSh0aGlzLmNvbnRleHQuY29uc29sZSwgYXJncyk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24oeCwgeSkgewogIHZhciBsaW5lCiAgICAsIGVsCiAgICAsIGkKICAgICwgagogICAgLCBjaDsKCiAgaWYgKHggPCAxKSB4ID0gMTsKICBpZiAoeSA8IDEpIHkgPSAxOwoKICAvLyByZXNpemUgY29scwogIGogPSB0aGlzLmNvbHM7CiAgaWYgKGogPCB4KSB7CiAgICBjaCA9IFt0aGlzLmRlZkF0dHIsICcgJ107IC8vIGRvZXMgeHRlcm0gdXNlIHRoZSBkZWZhdWx0IGF0dHI/CiAgICBpID0gdGhpcy5saW5lcy5sZW5ndGg7CiAgICB3aGlsZSAoaS0tKSB7CiAgICAgIHdoaWxlICh0aGlzLmxpbmVzW2ldLmxlbmd0aCA8IHgpIHsKICAgICAgICB0aGlzLmxpbmVzW2ldLnB1c2goY2gpOwogICAgICB9CiAgICB9CiAgfSBlbHNlIGlmIChqID4geCkgewogICAgaSA9IHRoaXMubGluZXMubGVuZ3RoOwogICAgd2hpbGUgKGktLSkgewogICAgICB3aGlsZSAodGhpcy5saW5lc1tpXS5sZW5ndGggPiB4KSB7CiAgICAgICAgdGhpcy5saW5lc1tpXS5wb3AoKTsKICAgICAgfQogICAgfQogIH0KICB0aGlzLnNldHVwU3RvcHMoaik7CiAgdGhpcy5jb2xzID0geDsKCiAgLy8gcmVzaXplIHJvd3MKICBqID0gdGhpcy5yb3dzOwogIGlmIChqIDwgeSkgewogICAgZWwgPSB0aGlzLmVsZW1lbnQ7CiAgICB3aGlsZSAoaisrIDwgeSkgewogICAgICBpZiAodGhpcy5saW5lcy5sZW5ndGggPCB5ICsgdGhpcy55YmFzZSkgewogICAgICAgIHRoaXMubGluZXMucHVzaCh0aGlzLmJsYW5rTGluZSgpKTsKICAgICAgfQogICAgICBpZiAodGhpcy5jaGlsZHJlbi5sZW5ndGggPCB5KSB7CiAgICAgICAgbGluZSA9IHRoaXMuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgZWwuYXBwZW5kQ2hpbGQobGluZSk7CiAgICAgICAgdGhpcy5jaGlsZHJlbi5wdXNoKGxpbmUpOwogICAgICB9CiAgICB9CiAgfSBlbHNlIGlmIChqID4geSkgewogICAgd2hpbGUgKGotLSA+IHkpIHsKICAgICAgaWYgKHRoaXMubGluZXMubGVuZ3RoID4geSArIHRoaXMueWJhc2UpIHsKICAgICAgICB0aGlzLmxpbmVzLnBvcCgpOwogICAgICB9CiAgICAgIGlmICh0aGlzLmNoaWxkcmVuLmxlbmd0aCA+IHkpIHsKICAgICAgICBlbCA9IHRoaXMuY2hpbGRyZW4ucG9wKCk7CiAgICAgICAgaWYgKCFlbCkgY29udGludWU7CiAgICAgICAgZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbCk7CiAgICAgIH0KICAgIH0KICB9CiAgdGhpcy5yb3dzID0geTsKCiAgLy8gbWFrZSBzdXJlIHRoZSBjdXJzb3Igc3RheXMgb24gc2NyZWVuCiAgaWYgKHRoaXMueSA+PSB5KSB0aGlzLnkgPSB5IC0gMTsKICBpZiAodGhpcy54ID49IHgpIHRoaXMueCA9IHggLSAxOwoKICB0aGlzLnNjcm9sbFRvcCA9IDA7CiAgdGhpcy5zY3JvbGxCb3R0b20gPSB5IC0gMTsKCiAgdGhpcy5yZWZyZXNoKDAsIHRoaXMucm93cyAtIDEpOwoKICAvLyBpdCdzIGEgcmVhbCBuaWdodG1hcmUgdHJ5aW5nCiAgLy8gdG8gcmVzaXplIHRoZSBvcmlnaW5hbAogIC8vIHNjcmVlbiBidWZmZXIuIGp1c3Qgc2V0IGl0CiAgLy8gdG8gbnVsbCBmb3Igbm93LgogIHRoaXMubm9ybWFsID0gbnVsbDsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS51cGRhdGVSYW5nZSA9IGZ1bmN0aW9uKHkpIHsKICBpZiAoeSA8IHRoaXMucmVmcmVzaFN0YXJ0KSB0aGlzLnJlZnJlc2hTdGFydCA9IHk7CiAgaWYgKHkgPiB0aGlzLnJlZnJlc2hFbmQpIHRoaXMucmVmcmVzaEVuZCA9IHk7CiAgLy8gaWYgKHkgPiB0aGlzLnJlZnJlc2hFbmQpIHsKICAvLyAgIHRoaXMucmVmcmVzaEVuZCA9IHk7CiAgLy8gICBpZiAoeSA+IHRoaXMucm93cyAtIDEpIHsKICAvLyAgICAgdGhpcy5yZWZyZXNoRW5kID0gdGhpcy5yb3dzIC0gMTsKICAvLyAgIH0KICAvLyB9Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUubWF4UmFuZ2UgPSBmdW5jdGlvbigpIHsKICB0aGlzLnJlZnJlc2hTdGFydCA9IDA7CiAgdGhpcy5yZWZyZXNoRW5kID0gdGhpcy5yb3dzIC0gMTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5zZXR1cFN0b3BzID0gZnVuY3Rpb24oaSkgewogIGlmIChpICE9IG51bGwpIHsKICAgIGlmICghdGhpcy50YWJzW2ldKSB7CiAgICAgIGkgPSB0aGlzLnByZXZTdG9wKGkpOwogICAgfQogIH0gZWxzZSB7CiAgICB0aGlzLnRhYnMgPSB7fTsKICAgIGkgPSAwOwogIH0KCiAgZm9yICg7IGkgPCB0aGlzLmNvbHM7IGkgKz0gOCkgewogICAgdGhpcy50YWJzW2ldID0gdHJ1ZTsKICB9Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUucHJldlN0b3AgPSBmdW5jdGlvbih4KSB7CiAgaWYgKHggPT0gbnVsbCkgeCA9IHRoaXMueDsKICB3aGlsZSAoIXRoaXMudGFic1stLXhdICYmIHggPiAwKTsKICByZXR1cm4geCA+PSB0aGlzLmNvbHMKICAgID8gdGhpcy5jb2xzIC0gMQogICAgOiB4IDwgMCA/IDAgOiB4Owp9OwoKVGVybWluYWwucHJvdG90eXBlLm5leHRTdG9wID0gZnVuY3Rpb24oeCkgewogIGlmICh4ID09IG51bGwpIHggPSB0aGlzLng7CiAgd2hpbGUgKCF0aGlzLnRhYnNbKyt4XSAmJiB4IDwgdGhpcy5jb2xzKTsKICByZXR1cm4geCA+PSB0aGlzLmNvbHMKICAgID8gdGhpcy5jb2xzIC0gMQogICAgOiB4IDwgMCA/IDAgOiB4Owp9OwoKVGVybWluYWwucHJvdG90eXBlLmVyYXNlUmlnaHQgPSBmdW5jdGlvbih4LCB5KSB7CiAgdmFyIGxpbmUgPSB0aGlzLmxpbmVzW3RoaXMueWJhc2UgKyB5XQogICAgLCBjaCA9IFt0aGlzLmVyYXNlQXR0cigpLCAnICddOyAvLyB4dGVybQoKCiAgZm9yICg7IHggPCB0aGlzLmNvbHM7IHgrKykgewogICAgbGluZVt4XSA9IGNoOwogIH0KCiAgdGhpcy51cGRhdGVSYW5nZSh5KTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5lcmFzZUxlZnQgPSBmdW5jdGlvbih4LCB5KSB7CiAgdmFyIGxpbmUgPSB0aGlzLmxpbmVzW3RoaXMueWJhc2UgKyB5XQogICAgLCBjaCA9IFt0aGlzLmVyYXNlQXR0cigpLCAnICddOyAvLyB4dGVybQoKICB4Kys7CiAgd2hpbGUgKHgtLSkgbGluZVt4XSA9IGNoOwoKICB0aGlzLnVwZGF0ZVJhbmdlKHkpOwp9OwoKVGVybWluYWwucHJvdG90eXBlLmVyYXNlTGluZSA9IGZ1bmN0aW9uKHkpIHsKICB0aGlzLmVyYXNlUmlnaHQoMCwgeSk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuYmxhbmtMaW5lID0gZnVuY3Rpb24oY3VyKSB7CiAgdmFyIGF0dHIgPSBjdXIKICAgID8gdGhpcy5lcmFzZUF0dHIoKQogICAgOiB0aGlzLmRlZkF0dHI7CgogIHZhciBjaCA9IFthdHRyLCAnICddCiAgICAsIGxpbmUgPSBbXQogICAgLCBpID0gMDsKCiAgZm9yICg7IGkgPCB0aGlzLmNvbHM7IGkrKykgewogICAgbGluZVtpXSA9IGNoOwogIH0KCiAgcmV0dXJuIGxpbmU7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuY2ggPSBmdW5jdGlvbihjdXIpIHsKICByZXR1cm4gY3VyCiAgICA/IFt0aGlzLmVyYXNlQXR0cigpLCAnICddCiAgICA6IFt0aGlzLmRlZkF0dHIsICcgJ107Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuaXMgPSBmdW5jdGlvbih0ZXJtKSB7CiAgdmFyIG5hbWUgPSB0aGlzLnRlcm1OYW1lOwogIHJldHVybiAobmFtZSArICcnKS5pbmRleE9mKHRlcm0pID09PSAwOwp9OwoKVGVybWluYWwucHJvdG90eXBlLmhhbmRsZXIgPSBmdW5jdGlvbihkYXRhKSB7CiAgdGhpcy5lbWl0KCdkYXRhJywgZGF0YSk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuaGFuZGxlVGl0bGUgPSBmdW5jdGlvbih0aXRsZSkgewogIHRoaXMuZW1pdCgndGl0bGUnLCB0aXRsZSk7Cn07CgovKioKICogRVNDCiAqLwoKLy8gRVNDIEQgSW5kZXggKElORCBpcyAweDg0KS4KVGVybWluYWwucHJvdG90eXBlLmluZGV4ID0gZnVuY3Rpb24oKSB7CiAgdGhpcy55Kys7CiAgaWYgKHRoaXMueSA+IHRoaXMuc2Nyb2xsQm90dG9tKSB7CiAgICB0aGlzLnktLTsKICAgIHRoaXMuc2Nyb2xsKCk7CiAgfQogIHRoaXMuc3RhdGUgPSBub3JtYWw7Cn07CgovLyBFU0MgTSBSZXZlcnNlIEluZGV4IChSSSBpcyAweDhkKS4KVGVybWluYWwucHJvdG90eXBlLnJldmVyc2VJbmRleCA9IGZ1bmN0aW9uKCkgewogIHZhciBqOwogIHRoaXMueS0tOwogIGlmICh0aGlzLnkgPCB0aGlzLnNjcm9sbFRvcCkgewogICAgdGhpcy55Kys7CiAgICAvLyBwb3NzaWJseSBtb3ZlIHRoZSBjb2RlIGJlbG93IHRvIHRlcm0ucmV2ZXJzZVNjcm9sbCgpOwogICAgLy8gdGVzdDogZWNobyAtbmUgJ1xlWzE7MUhcZVs0NG1cZU1cZVswbScKICAgIC8vIGJsYW5rTGluZSh0cnVlKSBpcyB4dGVybS9saW51eCBiZWhhdmlvcgogICAgdGhpcy5saW5lcy5zcGxpY2UodGhpcy55ICsgdGhpcy55YmFzZSwgMCwgdGhpcy5ibGFua0xpbmUodHJ1ZSkpOwogICAgaiA9IHRoaXMucm93cyAtIDEgLSB0aGlzLnNjcm9sbEJvdHRvbTsKICAgIHRoaXMubGluZXMuc3BsaWNlKHRoaXMucm93cyAtIDEgKyB0aGlzLnliYXNlIC0gaiArIDEsIDEpOwogICAgLy8gdGhpcy5tYXhSYW5nZSgpOwogICAgdGhpcy51cGRhdGVSYW5nZSh0aGlzLnNjcm9sbFRvcCk7CiAgICB0aGlzLnVwZGF0ZVJhbmdlKHRoaXMuc2Nyb2xsQm90dG9tKTsKICB9CiAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKfTsKCi8vIEVTQyBjIEZ1bGwgUmVzZXQgKFJJUykuClRlcm1pbmFsLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKCkgewogIHRoaXMub3B0aW9ucy5yb3dzID0gdGhpcy5yb3dzOwogIHRoaXMub3B0aW9ucy5jb2xzID0gdGhpcy5jb2xzOwogIFRlcm1pbmFsLmNhbGwodGhpcywgdGhpcy5vcHRpb25zKTsKICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7Cn07CgovLyBFU0MgSCBUYWIgU2V0IChIVFMgaXMgMHg4OCkuClRlcm1pbmFsLnByb3RvdHlwZS50YWJTZXQgPSBmdW5jdGlvbigpIHsKICB0aGlzLnRhYnNbdGhpcy54XSA9IHRydWU7CiAgdGhpcy5zdGF0ZSA9IG5vcm1hbDsKfTsKCi8qKgogKiBDU0kKICovCgovLyBDU0kgUHMgQQovLyBDdXJzb3IgVXAgUHMgVGltZXMgKGRlZmF1bHQgPSAxKSAoQ1VVKS4KVGVybWluYWwucHJvdG90eXBlLmN1cnNvclVwID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICB0aGlzLnkgLT0gcGFyYW07CiAgaWYgKHRoaXMueSA8IDApIHRoaXMueSA9IDA7Cn07CgovLyBDU0kgUHMgQgovLyBDdXJzb3IgRG93biBQcyBUaW1lcyAoZGVmYXVsdCA9IDEpIChDVUQpLgpUZXJtaW5hbC5wcm90b3R5cGUuY3Vyc29yRG93biA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciBwYXJhbSA9IHBhcmFtc1swXTsKICBpZiAocGFyYW0gPCAxKSBwYXJhbSA9IDE7CiAgdGhpcy55ICs9IHBhcmFtOwogIGlmICh0aGlzLnkgPj0gdGhpcy5yb3dzKSB7CiAgICB0aGlzLnkgPSB0aGlzLnJvd3MgLSAxOwogIH0KfTsKCi8vIENTSSBQcyBDCi8vIEN1cnNvciBGb3J3YXJkIFBzIFRpbWVzIChkZWZhdWx0ID0gMSkgKENVRikuClRlcm1pbmFsLnByb3RvdHlwZS5jdXJzb3JGb3J3YXJkID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICB0aGlzLnggKz0gcGFyYW07CiAgaWYgKHRoaXMueCA+PSB0aGlzLmNvbHMpIHsKICAgIHRoaXMueCA9IHRoaXMuY29scyAtIDE7CiAgfQp9OwoKLy8gQ1NJIFBzIEQKLy8gQ3Vyc29yIEJhY2t3YXJkIFBzIFRpbWVzIChkZWZhdWx0ID0gMSkgKENVQikuClRlcm1pbmFsLnByb3RvdHlwZS5jdXJzb3JCYWNrd2FyZCA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciBwYXJhbSA9IHBhcmFtc1swXTsKICBpZiAocGFyYW0gPCAxKSBwYXJhbSA9IDE7CiAgdGhpcy54IC09IHBhcmFtOwogIGlmICh0aGlzLnggPCAwKSB0aGlzLnggPSAwOwp9OwoKLy8gQ1NJIFBzIDsgUHMgSAovLyBDdXJzb3IgUG9zaXRpb24gW3Jvdztjb2x1bW5dIChkZWZhdWx0ID0gWzEsMV0pIChDVVApLgpUZXJtaW5hbC5wcm90b3R5cGUuY3Vyc29yUG9zID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHJvdywgY29sOwoKICByb3cgPSBwYXJhbXNbMF0gLSAxOwoKICBpZiAocGFyYW1zLmxlbmd0aCA+PSAyKSB7CiAgICBjb2wgPSBwYXJhbXNbMV0gLSAxOwogIH0gZWxzZSB7CiAgICBjb2wgPSAwOwogIH0KCiAgaWYgKHJvdyA8IDApIHsKICAgIHJvdyA9IDA7CiAgfSBlbHNlIGlmIChyb3cgPj0gdGhpcy5yb3dzKSB7CiAgICByb3cgPSB0aGlzLnJvd3MgLSAxOwogIH0KCiAgaWYgKGNvbCA8IDApIHsKICAgIGNvbCA9IDA7CiAgfSBlbHNlIGlmIChjb2wgPj0gdGhpcy5jb2xzKSB7CiAgICBjb2wgPSB0aGlzLmNvbHMgLSAxOwogIH0KCiAgdGhpcy54ID0gY29sOwogIHRoaXMueSA9IHJvdzsKfTsKCi8vIENTSSBQcyBKICBFcmFzZSBpbiBEaXNwbGF5IChFRCkuCi8vICAgICBQcyA9IDAgIC0+IEVyYXNlIEJlbG93IChkZWZhdWx0KS4KLy8gICAgIFBzID0gMSAgLT4gRXJhc2UgQWJvdmUuCi8vICAgICBQcyA9IDIgIC0+IEVyYXNlIEFsbC4KLy8gICAgIFBzID0gMyAgLT4gRXJhc2UgU2F2ZWQgTGluZXMgKHh0ZXJtKS4KLy8gQ1NJID8gUHMgSgovLyAgIEVyYXNlIGluIERpc3BsYXkgKERFQ1NFRCkuCi8vICAgICBQcyA9IDAgIC0+IFNlbGVjdGl2ZSBFcmFzZSBCZWxvdyAoZGVmYXVsdCkuCi8vICAgICBQcyA9IDEgIC0+IFNlbGVjdGl2ZSBFcmFzZSBBYm92ZS4KLy8gICAgIFBzID0gMiAgLT4gU2VsZWN0aXZlIEVyYXNlIEFsbC4KVGVybWluYWwucHJvdG90eXBlLmVyYXNlSW5EaXNwbGF5ID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIGo7CiAgc3dpdGNoIChwYXJhbXNbMF0pIHsKICAgIGNhc2UgMDoKICAgICAgdGhpcy5lcmFzZVJpZ2h0KHRoaXMueCwgdGhpcy55KTsKICAgICAgaiA9IHRoaXMueSArIDE7CiAgICAgIGZvciAoOyBqIDwgdGhpcy5yb3dzOyBqKyspIHsKICAgICAgICB0aGlzLmVyYXNlTGluZShqKTsKICAgICAgfQogICAgICBicmVhazsKICAgIGNhc2UgMToKICAgICAgdGhpcy5lcmFzZUxlZnQodGhpcy54LCB0aGlzLnkpOwogICAgICBqID0gdGhpcy55OwogICAgICB3aGlsZSAoai0tKSB7CiAgICAgICAgdGhpcy5lcmFzZUxpbmUoaik7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICBjYXNlIDI6CiAgICAgIGogPSB0aGlzLnJvd3M7CiAgICAgIHdoaWxlIChqLS0pIHRoaXMuZXJhc2VMaW5lKGopOwogICAgICBicmVhazsKICAgIGNhc2UgMzoKICAgICAgOyAvLyBubyBzYXZlZCBsaW5lcwogICAgICBicmVhazsKICB9Cn07CgovLyBDU0kgUHMgSyAgRXJhc2UgaW4gTGluZSAoRUwpLgovLyAgICAgUHMgPSAwICAtPiBFcmFzZSB0byBSaWdodCAoZGVmYXVsdCkuCi8vICAgICBQcyA9IDEgIC0+IEVyYXNlIHRvIExlZnQuCi8vICAgICBQcyA9IDIgIC0+IEVyYXNlIEFsbC4KLy8gQ1NJID8gUHMgSwovLyAgIEVyYXNlIGluIExpbmUgKERFQ1NFTCkuCi8vICAgICBQcyA9IDAgIC0+IFNlbGVjdGl2ZSBFcmFzZSB0byBSaWdodCAoZGVmYXVsdCkuCi8vICAgICBQcyA9IDEgIC0+IFNlbGVjdGl2ZSBFcmFzZSB0byBMZWZ0LgovLyAgICAgUHMgPSAyICAtPiBTZWxlY3RpdmUgRXJhc2UgQWxsLgpUZXJtaW5hbC5wcm90b3R5cGUuZXJhc2VJbkxpbmUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICBzd2l0Y2ggKHBhcmFtc1swXSkgewogICAgY2FzZSAwOgogICAgICB0aGlzLmVyYXNlUmlnaHQodGhpcy54LCB0aGlzLnkpOwogICAgICBicmVhazsKICAgIGNhc2UgMToKICAgICAgdGhpcy5lcmFzZUxlZnQodGhpcy54LCB0aGlzLnkpOwogICAgICBicmVhazsKICAgIGNhc2UgMjoKICAgICAgdGhpcy5lcmFzZUxpbmUodGhpcy55KTsKICAgICAgYnJlYWs7CiAgfQp9OwoKLy8gQ1NJIFBtIG0gIENoYXJhY3RlciBBdHRyaWJ1dGVzIChTR1IpLgovLyAgICAgUHMgPSAwICAtPiBOb3JtYWwgKGRlZmF1bHQpLgovLyAgICAgUHMgPSAxICAtPiBCb2xkLgovLyAgICAgUHMgPSA0ICAtPiBVbmRlcmxpbmVkLgovLyAgICAgUHMgPSA1ICAtPiBCbGluayAoYXBwZWFycyBhcyBCb2xkKS4KLy8gICAgIFBzID0gNyAgLT4gSW52ZXJzZS4KLy8gICAgIFBzID0gOCAgLT4gSW52aXNpYmxlLCBpLmUuLCBoaWRkZW4gKFZUMzAwKS4KLy8gICAgIFBzID0gMiAyICAtPiBOb3JtYWwgKG5laXRoZXIgYm9sZCBub3IgZmFpbnQpLgovLyAgICAgUHMgPSAyIDQgIC0+IE5vdCB1bmRlcmxpbmVkLgovLyAgICAgUHMgPSAyIDUgIC0+IFN0ZWFkeSAobm90IGJsaW5raW5nKS4KLy8gICAgIFBzID0gMiA3ICAtPiBQb3NpdGl2ZSAobm90IGludmVyc2UpLgovLyAgICAgUHMgPSAyIDggIC0+IFZpc2libGUsIGkuZS4sIG5vdCBoaWRkZW4gKFZUMzAwKS4KLy8gICAgIFBzID0gMyAwICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBCbGFjay4KLy8gICAgIFBzID0gMyAxICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBSZWQuCi8vICAgICBQcyA9IDMgMiAgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gR3JlZW4uCi8vICAgICBQcyA9IDMgMyAgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gWWVsbG93LgovLyAgICAgUHMgPSAzIDQgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIEJsdWUuCi8vICAgICBQcyA9IDMgNSAgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gTWFnZW50YS4KLy8gICAgIFBzID0gMyA2ICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBDeWFuLgovLyAgICAgUHMgPSAzIDcgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIFdoaXRlLgovLyAgICAgUHMgPSAzIDkgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIGRlZmF1bHQgKG9yaWdpbmFsKS4KLy8gICAgIFBzID0gNCAwICAtPiBTZXQgYmFja2dyb3VuZCBjb2xvciB0byBCbGFjay4KLy8gICAgIFBzID0gNCAxICAtPiBTZXQgYmFja2dyb3VuZCBjb2xvciB0byBSZWQuCi8vICAgICBQcyA9IDQgMiAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gR3JlZW4uCi8vICAgICBQcyA9IDQgMyAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gWWVsbG93LgovLyAgICAgUHMgPSA0IDQgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIEJsdWUuCi8vICAgICBQcyA9IDQgNSAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gTWFnZW50YS4KLy8gICAgIFBzID0gNCA2ICAtPiBTZXQgYmFja2dyb3VuZCBjb2xvciB0byBDeWFuLgovLyAgICAgUHMgPSA0IDcgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIFdoaXRlLgovLyAgICAgUHMgPSA0IDkgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIGRlZmF1bHQgKG9yaWdpbmFsKS4KCi8vICAgSWYgMTYtY29sb3Igc3VwcG9ydCBpcyBjb21waWxlZCwgdGhlIGZvbGxvd2luZyBhcHBseS4gIEFzc3VtZQovLyAgIHRoYXQgeHRlcm0ncyByZXNvdXJjZXMgYXJlIHNldCBzbyB0aGF0IHRoZSBJU08gY29sb3IgY29kZXMgYXJlCi8vICAgdGhlIGZpcnN0IDggb2YgYSBzZXQgb2YgMTYuICBUaGVuIHRoZSBhaXh0ZXJtIGNvbG9ycyBhcmUgdGhlCi8vICAgYnJpZ2h0IHZlcnNpb25zIG9mIHRoZSBJU08gY29sb3JzOgovLyAgICAgUHMgPSA5IDAgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIEJsYWNrLgovLyAgICAgUHMgPSA5IDEgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIFJlZC4KLy8gICAgIFBzID0gOSAyICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBHcmVlbi4KLy8gICAgIFBzID0gOSAzICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBZZWxsb3cuCi8vICAgICBQcyA9IDkgNCAgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gQmx1ZS4KLy8gICAgIFBzID0gOSA1ICAtPiBTZXQgZm9yZWdyb3VuZCBjb2xvciB0byBNYWdlbnRhLgovLyAgICAgUHMgPSA5IDYgIC0+IFNldCBmb3JlZ3JvdW5kIGNvbG9yIHRvIEN5YW4uCi8vICAgICBQcyA9IDkgNyAgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gV2hpdGUuCi8vICAgICBQcyA9IDEgMCAwICAtPiBTZXQgYmFja2dyb3VuZCBjb2xvciB0byBCbGFjay4KLy8gICAgIFBzID0gMSAwIDEgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIFJlZC4KLy8gICAgIFBzID0gMSAwIDIgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIEdyZWVuLgovLyAgICAgUHMgPSAxIDAgMyAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gWWVsbG93LgovLyAgICAgUHMgPSAxIDAgNCAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gQmx1ZS4KLy8gICAgIFBzID0gMSAwIDUgIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIE1hZ2VudGEuCi8vICAgICBQcyA9IDEgMCA2ICAtPiBTZXQgYmFja2dyb3VuZCBjb2xvciB0byBDeWFuLgovLyAgICAgUHMgPSAxIDAgNyAgLT4gU2V0IGJhY2tncm91bmQgY29sb3IgdG8gV2hpdGUuCgovLyAgIElmIHh0ZXJtIGlzIGNvbXBpbGVkIHdpdGggdGhlIDE2LWNvbG9yIHN1cHBvcnQgZGlzYWJsZWQsIGl0Ci8vICAgc3VwcG9ydHMgdGhlIGZvbGxvd2luZywgZnJvbSByeHZ0OgovLyAgICAgUHMgPSAxIDAgMCAgLT4gU2V0IGZvcmVncm91bmQgYW5kIGJhY2tncm91bmQgY29sb3IgdG8KLy8gICAgIGRlZmF1bHQuCgovLyAgIElmIDg4LSBvciAyNTYtY29sb3Igc3VwcG9ydCBpcyBjb21waWxlZCwgdGhlIGZvbGxvd2luZyBhcHBseS4KLy8gICAgIFBzID0gMyA4ICA7IDUgIDsgUHMgLT4gU2V0IGZvcmVncm91bmQgY29sb3IgdG8gdGhlIHNlY29uZAovLyAgICAgUHMuCi8vICAgICBQcyA9IDQgOCAgOyA1ICA7IFBzIC0+IFNldCBiYWNrZ3JvdW5kIGNvbG9yIHRvIHRoZSBzZWNvbmQKLy8gICAgIFBzLgpUZXJtaW5hbC5wcm90b3R5cGUuY2hhckF0dHJpYnV0ZXMgPSBmdW5jdGlvbihwYXJhbXMpIHsKICAvLyBPcHRpbWl6ZSBhIHNpbmdsZSBTR1IwLgogIGlmIChwYXJhbXMubGVuZ3RoID09PSAxICYmIHBhcmFtc1swXSA9PT0gMCkgewogICAgdGhpcy5jdXJBdHRyID0gdGhpcy5kZWZBdHRyOwogICAgcmV0dXJuOwogIH0KCiAgdmFyIGwgPSBwYXJhbXMubGVuZ3RoCiAgICAsIGkgPSAwCiAgICAsIGZsYWdzID0gdGhpcy5jdXJBdHRyID4+IDE4CiAgICAsIGZnID0gKHRoaXMuY3VyQXR0ciA+PiA5KSAmIDB4MWZmCiAgICAsIGJnID0gdGhpcy5jdXJBdHRyICYgMHgxZmYKICAgICwgcDsKCiAgZm9yICg7IGkgPCBsOyBpKyspIHsKICAgIHAgPSBwYXJhbXNbaV07CiAgICBpZiAocCA+PSAzMCAmJiBwIDw9IDM3KSB7CiAgICAgIC8vIGZnIGNvbG9yIDgKICAgICAgZmcgPSBwIC0gMzA7CiAgICB9IGVsc2UgaWYgKHAgPj0gNDAgJiYgcCA8PSA0NykgewogICAgICAvLyBiZyBjb2xvciA4CiAgICAgIGJnID0gcCAtIDQwOwogICAgfSBlbHNlIGlmIChwID49IDkwICYmIHAgPD0gOTcpIHsKICAgICAgLy8gZmcgY29sb3IgMTYKICAgICAgcCArPSA4OwogICAgICBmZyA9IHAgLSA5MDsKICAgIH0gZWxzZSBpZiAocCA+PSAxMDAgJiYgcCA8PSAxMDcpIHsKICAgICAgLy8gYmcgY29sb3IgMTYKICAgICAgcCArPSA4OwogICAgICBiZyA9IHAgLSAxMDA7CiAgICB9IGVsc2UgaWYgKHAgPT09IDApIHsKICAgICAgLy8gZGVmYXVsdAogICAgICBmbGFncyA9IHRoaXMuZGVmQXR0ciA+PiAxODsKICAgICAgZmcgPSAodGhpcy5kZWZBdHRyID4+IDkpICYgMHgxZmY7CiAgICAgIGJnID0gdGhpcy5kZWZBdHRyICYgMHgxZmY7CiAgICAgIC8vIGZsYWdzID0gMDsKICAgICAgLy8gZmcgPSAweDFmZjsKICAgICAgLy8gYmcgPSAweDFmZjsKICAgIH0gZWxzZSBpZiAocCA9PT0gMSkgewogICAgICAvLyBib2xkIHRleHQKICAgICAgZmxhZ3MgfD0gMTsKICAgIH0gZWxzZSBpZiAocCA9PT0gNCkgewogICAgICAvLyB1bmRlcmxpbmVkIHRleHQKICAgICAgZmxhZ3MgfD0gMjsKICAgIH0gZWxzZSBpZiAocCA9PT0gNSkgewogICAgICAvLyBibGluawogICAgICBmbGFncyB8PSA0OwogICAgfSBlbHNlIGlmIChwID09PSA3KSB7CiAgICAgIC8vIGludmVyc2UgYW5kIHBvc2l0aXZlCiAgICAgIC8vIHRlc3Qgd2l0aDogZWNobyAtZSAnXGVbMzFtXGVbNDJtaGVsbG9cZVs3bXdvcmxkXGVbMjdtaGlcZVttJwogICAgICBmbGFncyB8PSA4OwogICAgfSBlbHNlIGlmIChwID09PSA4KSB7CiAgICAgIC8vIGludmlzaWJsZQogICAgICBmbGFncyB8PSAxNjsKICAgIH0gZWxzZSBpZiAocCA9PT0gMjIpIHsKICAgICAgLy8gbm90IGJvbGQKICAgICAgZmxhZ3MgJj0gfjE7CiAgICB9IGVsc2UgaWYgKHAgPT09IDI0KSB7CiAgICAgIC8vIG5vdCB1bmRlcmxpbmVkCiAgICAgIGZsYWdzICY9IH4yOwogICAgfSBlbHNlIGlmIChwID09PSAyNSkgewogICAgICAvLyBub3QgYmxpbmsKICAgICAgZmxhZ3MgJj0gfjQ7CiAgICB9IGVsc2UgaWYgKHAgPT09IDI3KSB7CiAgICAgIC8vIG5vdCBpbnZlcnNlCiAgICAgIGZsYWdzICY9IH44OwogICAgfSBlbHNlIGlmIChwID09PSAyOCkgewogICAgICAvLyBub3QgaW52aXNpYmxlCiAgICAgIGZsYWdzICY9IH4xNjsKICAgIH0gZWxzZSBpZiAocCA9PT0gMzkpIHsKICAgICAgLy8gcmVzZXQgZmcKICAgICAgZmcgPSAodGhpcy5kZWZBdHRyID4+IDkpICYgMHgxZmY7CiAgICB9IGVsc2UgaWYgKHAgPT09IDQ5KSB7CiAgICAgIC8vIHJlc2V0IGJnCiAgICAgIGJnID0gdGhpcy5kZWZBdHRyICYgMHgxZmY7CiAgICB9IGVsc2UgaWYgKHAgPT09IDM4KSB7CiAgICAgIC8vIGZnIGNvbG9yIDI1NgogICAgICBpZiAocGFyYW1zW2kgKyAxXSA9PT0gMikgewogICAgICAgIGkgKz0gMjsKICAgICAgICBmZyA9IG1hdGNoQ29sb3IoCiAgICAgICAgICBwYXJhbXNbaV0gJiAweGZmLAogICAgICAgICAgcGFyYW1zW2kgKyAxXSAmIDB4ZmYsCiAgICAgICAgICBwYXJhbXNbaSArIDJdICYgMHhmZik7CiAgICAgICAgaWYgKGZnID09PSAtMSkgZmcgPSAweDFmZjsKICAgICAgICBpICs9IDI7CiAgICAgIH0gZWxzZSBpZiAocGFyYW1zW2kgKyAxXSA9PT0gNSkgewogICAgICAgIGkgKz0gMjsKICAgICAgICBwID0gcGFyYW1zW2ldICYgMHhmZjsKICAgICAgICBmZyA9IHA7CiAgICAgIH0KICAgIH0gZWxzZSBpZiAocCA9PT0gNDgpIHsKICAgICAgLy8gYmcgY29sb3IgMjU2CiAgICAgIGlmIChwYXJhbXNbaSArIDFdID09PSAyKSB7CiAgICAgICAgaSArPSAyOwogICAgICAgIGJnID0gbWF0Y2hDb2xvcigKICAgICAgICAgIHBhcmFtc1tpXSAmIDB4ZmYsCiAgICAgICAgICBwYXJhbXNbaSArIDFdICYgMHhmZiwKICAgICAgICAgIHBhcmFtc1tpICsgMl0gJiAweGZmKTsKICAgICAgICBpZiAoYmcgPT09IC0xKSBiZyA9IDB4MWZmOwogICAgICAgIGkgKz0gMjsKICAgICAgfSBlbHNlIGlmIChwYXJhbXNbaSArIDFdID09PSA1KSB7CiAgICAgICAgaSArPSAyOwogICAgICAgIHAgPSBwYXJhbXNbaV0gJiAweGZmOwogICAgICAgIGJnID0gcDsKICAgICAgfQogICAgfSBlbHNlIGlmIChwID09PSAxMDApIHsKICAgICAgLy8gcmVzZXQgZmcvYmcKICAgICAgZmcgPSAodGhpcy5kZWZBdHRyID4+IDkpICYgMHgxZmY7CiAgICAgIGJnID0gdGhpcy5kZWZBdHRyICYgMHgxZmY7CiAgICB9IGVsc2UgewogICAgICB0aGlzLmVycm9yKCdVbmtub3duIFNHUiBhdHRyaWJ1dGU6ICVkLicsIHApOwogICAgfQogIH0KCiAgdGhpcy5jdXJBdHRyID0gKGZsYWdzIDw8IDE4KSB8IChmZyA8PCA5KSB8IGJnOwp9OwoKLy8gQ1NJIFBzIG4gIERldmljZSBTdGF0dXMgUmVwb3J0IChEU1IpLgovLyAgICAgUHMgPSA1ICAtPiBTdGF0dXMgUmVwb3J0LiAgUmVzdWx0IChgYE9LJycpIGlzCi8vICAgQ1NJIDAgbgovLyAgICAgUHMgPSA2ICAtPiBSZXBvcnQgQ3Vyc29yIFBvc2l0aW9uIChDUFIpIFtyb3c7Y29sdW1uXS4KLy8gICBSZXN1bHQgaXMKLy8gICBDU0kgciA7IGMgUgovLyBDU0kgPyBQcyBuCi8vICAgRGV2aWNlIFN0YXR1cyBSZXBvcnQgKERTUiwgREVDLXNwZWNpZmljKS4KLy8gICAgIFBzID0gNiAgLT4gUmVwb3J0IEN1cnNvciBQb3NpdGlvbiAoQ1BSKSBbcm93O2NvbHVtbl0gYXMgQ1NJCi8vICAgICA/IHIgOyBjIFIgKGFzc3VtZXMgcGFnZSBpcyB6ZXJvKS4KLy8gICAgIFBzID0gMSA1ICAtPiBSZXBvcnQgUHJpbnRlciBzdGF0dXMgYXMgQ1NJID8gMSAwICBuICAocmVhZHkpLgovLyAgICAgb3IgQ1NJID8gMSAxICBuICAobm90IHJlYWR5KS4KLy8gICAgIFBzID0gMiA1ICAtPiBSZXBvcnQgVURLIHN0YXR1cyBhcyBDU0kgPyAyIDAgIG4gICh1bmxvY2tlZCkKLy8gICAgIG9yIENTSSA/IDIgMSAgbiAgKGxvY2tlZCkuCi8vICAgICBQcyA9IDIgNiAgLT4gUmVwb3J0IEtleWJvYXJkIHN0YXR1cyBhcwovLyAgIENTSSA/IDIgNyAgOyAgMSAgOyAgMCAgOyAgMCAgbiAgKE5vcnRoIEFtZXJpY2FuKS4KLy8gICBUaGUgbGFzdCB0d28gcGFyYW1ldGVycyBhcHBseSB0byBWVDQwMCAmIHVwLCBhbmQgZGVub3RlIGtleS0KLy8gICBib2FyZCByZWFkeSBhbmQgTEswMSByZXNwZWN0aXZlbHkuCi8vICAgICBQcyA9IDUgMyAgLT4gUmVwb3J0IExvY2F0b3Igc3RhdHVzIGFzCi8vICAgQ1NJID8gNSAzICBuICBMb2NhdG9yIGF2YWlsYWJsZSwgaWYgY29tcGlsZWQtaW4sIG9yCi8vICAgQ1NJID8gNSAwICBuICBObyBMb2NhdG9yLCBpZiBub3QuClRlcm1pbmFsLnByb3RvdHlwZS5kZXZpY2VTdGF0dXMgPSBmdW5jdGlvbihwYXJhbXMpIHsKICBpZiAoIXRoaXMucHJlZml4KSB7CiAgICBzd2l0Y2ggKHBhcmFtc1swXSkgewogICAgICBjYXNlIDU6CiAgICAgICAgLy8gc3RhdHVzIHJlcG9ydAogICAgICAgIHRoaXMuc2VuZCgnXHgxYlswbicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDY6CiAgICAgICAgLy8gY3Vyc29yIHBvc2l0aW9uCiAgICAgICAgdGhpcy5zZW5kKCdceDFiWycKICAgICAgICAgICsgKHRoaXMueSArIDEpCiAgICAgICAgICArICc7JwogICAgICAgICAgKyAodGhpcy54ICsgMSkKICAgICAgICAgICsgJ1InKTsKICAgICAgICBicmVhazsKICAgIH0KICB9IGVsc2UgaWYgKHRoaXMucHJlZml4ID09PSAnPycpIHsKICAgIC8vIG1vZGVybiB4dGVybSBkb2VzbnQgc2VlbSB0bwogICAgLy8gcmVzcG9uZCB0byBhbnkgb2YgdGhlc2UgZXhjZXB0ID82LCA2LCBhbmQgNQogICAgc3dpdGNoIChwYXJhbXNbMF0pIHsKICAgICAgY2FzZSA2OgogICAgICAgIC8vIGN1cnNvciBwb3NpdGlvbgogICAgICAgIHRoaXMuc2VuZCgnXHgxYls/JwogICAgICAgICAgKyAodGhpcy55ICsgMSkKICAgICAgICAgICsgJzsnCiAgICAgICAgICArICh0aGlzLnggKyAxKQogICAgICAgICAgKyAnUicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDE1OgogICAgICAgIC8vIG5vIHByaW50ZXIKICAgICAgICAvLyB0aGlzLnNlbmQoJ1x4MWJbPzExbicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDI1OgogICAgICAgIC8vIGRvbnQgc3VwcG9ydCB1c2VyIGRlZmluZWQga2V5cwogICAgICAgIC8vIHRoaXMuc2VuZCgnXHgxYls/MjFuJyk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMjY6CiAgICAgICAgLy8gbm9ydGggYW1lcmljYW4ga2V5Ym9hcmQKICAgICAgICAvLyB0aGlzLnNlbmQoJ1x4MWJbPzI3OzE7MDswbicpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDUzOgogICAgICAgIC8vIG5vIGRlYyBsb2NhdG9yL21vdXNlCiAgICAgICAgLy8gdGhpcy5zZW5kKCdceDFiWz81MG4nKTsKICAgICAgICBicmVhazsKICAgIH0KICB9Cn07CgovKioKICogQWRkaXRpb25zCiAqLwoKLy8gQ1NJIFBzIEAKLy8gSW5zZXJ0IFBzIChCbGFuaykgQ2hhcmFjdGVyKHMpIChkZWZhdWx0ID0gMSkgKElDSCkuClRlcm1pbmFsLnByb3RvdHlwZS5pbnNlcnRDaGFycyA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciBwYXJhbSwgcm93LCBqLCBjaDsKCiAgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwoKICByb3cgPSB0aGlzLnkgKyB0aGlzLnliYXNlOwogIGogPSB0aGlzLng7CiAgY2ggPSBbdGhpcy5lcmFzZUF0dHIoKSwgJyAnXTsgLy8geHRlcm0KCiAgd2hpbGUgKHBhcmFtLS0gJiYgaiA8IHRoaXMuY29scykgewogICAgdGhpcy5saW5lc1tyb3ddLnNwbGljZShqKyssIDAsIGNoKTsKICAgIHRoaXMubGluZXNbcm93XS5wb3AoKTsKICB9Cn07CgovLyBDU0kgUHMgRQovLyBDdXJzb3IgTmV4dCBMaW5lIFBzIFRpbWVzIChkZWZhdWx0ID0gMSkgKENOTCkuCi8vIHNhbWUgYXMgQ1NJIFBzIEIgPwpUZXJtaW5hbC5wcm90b3R5cGUuY3Vyc29yTmV4dExpbmUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwogIHRoaXMueSArPSBwYXJhbTsKICBpZiAodGhpcy55ID49IHRoaXMucm93cykgewogICAgdGhpcy55ID0gdGhpcy5yb3dzIC0gMTsKICB9CiAgdGhpcy54ID0gMDsKfTsKCi8vIENTSSBQcyBGCi8vIEN1cnNvciBQcmVjZWRpbmcgTGluZSBQcyBUaW1lcyAoZGVmYXVsdCA9IDEpIChDTkwpLgovLyByZXVzZSBDU0kgUHMgQSA/ClRlcm1pbmFsLnByb3RvdHlwZS5jdXJzb3JQcmVjZWRpbmdMaW5lID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICB0aGlzLnkgLT0gcGFyYW07CiAgaWYgKHRoaXMueSA8IDApIHRoaXMueSA9IDA7CiAgdGhpcy54ID0gMDsKfTsKCi8vIENTSSBQcyBHCi8vIEN1cnNvciBDaGFyYWN0ZXIgQWJzb2x1dGUgIFtjb2x1bW5dIChkZWZhdWx0ID0gW3JvdywxXSkgKENIQSkuClRlcm1pbmFsLnByb3RvdHlwZS5jdXJzb3JDaGFyQWJzb2x1dGUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwogIHRoaXMueCA9IHBhcmFtIC0gMTsKfTsKCi8vIENTSSBQcyBMCi8vIEluc2VydCBQcyBMaW5lKHMpIChkZWZhdWx0ID0gMSkgKElMKS4KVGVybWluYWwucHJvdG90eXBlLmluc2VydExpbmVzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtLCByb3csIGo7CgogIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICByb3cgPSB0aGlzLnkgKyB0aGlzLnliYXNlOwoKICBqID0gdGhpcy5yb3dzIC0gMSAtIHRoaXMuc2Nyb2xsQm90dG9tOwogIGogPSB0aGlzLnJvd3MgLSAxICsgdGhpcy55YmFzZSAtIGogKyAxOwoKICB3aGlsZSAocGFyYW0tLSkgewogICAgLy8gdGVzdDogZWNobyAtZSAnXGVbNDRtXGVbMUxcZVswbScKICAgIC8vIGJsYW5rTGluZSh0cnVlKSAtIHh0ZXJtL2xpbnV4IGJlaGF2aW9yCiAgICB0aGlzLmxpbmVzLnNwbGljZShyb3csIDAsIHRoaXMuYmxhbmtMaW5lKHRydWUpKTsKICAgIHRoaXMubGluZXMuc3BsaWNlKGosIDEpOwogIH0KCiAgLy8gdGhpcy5tYXhSYW5nZSgpOwogIHRoaXMudXBkYXRlUmFuZ2UodGhpcy55KTsKICB0aGlzLnVwZGF0ZVJhbmdlKHRoaXMuc2Nyb2xsQm90dG9tKTsKfTsKCi8vIENTSSBQcyBNCi8vIERlbGV0ZSBQcyBMaW5lKHMpIChkZWZhdWx0ID0gMSkgKERMKS4KVGVybWluYWwucHJvdG90eXBlLmRlbGV0ZUxpbmVzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtLCByb3csIGo7CgogIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICByb3cgPSB0aGlzLnkgKyB0aGlzLnliYXNlOwoKICBqID0gdGhpcy5yb3dzIC0gMSAtIHRoaXMuc2Nyb2xsQm90dG9tOwogIGogPSB0aGlzLnJvd3MgLSAxICsgdGhpcy55YmFzZSAtIGo7CgogIHdoaWxlIChwYXJhbS0tKSB7CiAgICAvLyB0ZXN0OiBlY2hvIC1lICdcZVs0NG1cZVsxTVxlWzBtJwogICAgLy8gYmxhbmtMaW5lKHRydWUpIC0geHRlcm0vbGludXggYmVoYXZpb3IKICAgIHRoaXMubGluZXMuc3BsaWNlKGogKyAxLCAwLCB0aGlzLmJsYW5rTGluZSh0cnVlKSk7CiAgICB0aGlzLmxpbmVzLnNwbGljZShyb3csIDEpOwogIH0KCiAgLy8gdGhpcy5tYXhSYW5nZSgpOwogIHRoaXMudXBkYXRlUmFuZ2UodGhpcy55KTsKICB0aGlzLnVwZGF0ZVJhbmdlKHRoaXMuc2Nyb2xsQm90dG9tKTsKfTsKCi8vIENTSSBQcyBQCi8vIERlbGV0ZSBQcyBDaGFyYWN0ZXIocykgKGRlZmF1bHQgPSAxKSAoRENIKS4KVGVybWluYWwucHJvdG90eXBlLmRlbGV0ZUNoYXJzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtLCByb3csIGNoOwoKICBwYXJhbSA9IHBhcmFtc1swXTsKICBpZiAocGFyYW0gPCAxKSBwYXJhbSA9IDE7CgogIHJvdyA9IHRoaXMueSArIHRoaXMueWJhc2U7CiAgY2ggPSBbdGhpcy5lcmFzZUF0dHIoKSwgJyAnXTsgLy8geHRlcm0KCiAgd2hpbGUgKHBhcmFtLS0pIHsKICAgIHRoaXMubGluZXNbcm93XS5zcGxpY2UodGhpcy54LCAxKTsKICAgIHRoaXMubGluZXNbcm93XS5wdXNoKGNoKTsKICB9Cn07CgovLyBDU0kgUHMgWAovLyBFcmFzZSBQcyBDaGFyYWN0ZXIocykgKGRlZmF1bHQgPSAxKSAoRUNIKS4KVGVybWluYWwucHJvdG90eXBlLmVyYXNlQ2hhcnMgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0sIHJvdywgaiwgY2g7CgogIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKCiAgcm93ID0gdGhpcy55ICsgdGhpcy55YmFzZTsKICBqID0gdGhpcy54OwogIGNoID0gW3RoaXMuZXJhc2VBdHRyKCksICcgJ107IC8vIHh0ZXJtCgogIHdoaWxlIChwYXJhbS0tICYmIGogPCB0aGlzLmNvbHMpIHsKICAgIHRoaXMubGluZXNbcm93XVtqKytdID0gY2g7CiAgfQp9OwoKLy8gQ1NJIFBtIGAgIENoYXJhY3RlciBQb3NpdGlvbiBBYnNvbHV0ZQovLyAgIFtjb2x1bW5dIChkZWZhdWx0ID0gW3JvdywxXSkgKEhQQSkuClRlcm1pbmFsLnByb3RvdHlwZS5jaGFyUG9zQWJzb2x1dGUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwogIHRoaXMueCA9IHBhcmFtIC0gMTsKICBpZiAodGhpcy54ID49IHRoaXMuY29scykgewogICAgdGhpcy54ID0gdGhpcy5jb2xzIC0gMTsKICB9Cn07CgovLyAxNDEgNjEgYSAqIEhQUiAtCi8vIEhvcml6b250YWwgUG9zaXRpb24gUmVsYXRpdmUKLy8gcmV1c2UgQ1NJIFBzIEMgPwpUZXJtaW5hbC5wcm90b3R5cGUuSFBvc2l0aW9uUmVsYXRpdmUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwogIHRoaXMueCArPSBwYXJhbTsKICBpZiAodGhpcy54ID49IHRoaXMuY29scykgewogICAgdGhpcy54ID0gdGhpcy5jb2xzIC0gMTsKICB9Cn07CgovLyBDU0kgUHMgYyAgU2VuZCBEZXZpY2UgQXR0cmlidXRlcyAoUHJpbWFyeSBEQSkuCi8vICAgICBQcyA9IDAgIG9yIG9taXR0ZWQgLT4gcmVxdWVzdCBhdHRyaWJ1dGVzIGZyb20gdGVybWluYWwuICBUaGUKLy8gICAgIHJlc3BvbnNlIGRlcGVuZHMgb24gdGhlIGRlY1Rlcm1pbmFsSUQgcmVzb3VyY2Ugc2V0dGluZy4KLy8gICAgIC0+IENTSSA/IDEgOyAyIGMgIChgYFZUMTAwIHdpdGggQWR2YW5jZWQgVmlkZW8gT3B0aW9uJycpCi8vICAgICAtPiBDU0kgPyAxIDsgMCBjICAoYGBWVDEwMSB3aXRoIE5vIE9wdGlvbnMnJykKLy8gICAgIC0+IENTSSA/IDYgYyAgKGBgVlQxMDInJykKLy8gICAgIC0+IENTSSA/IDYgMCA7IDEgOyAyIDsgNiA7IDggOyA5IDsgMSA1IDsgYyAgKGBgVlQyMjAnJykKLy8gICBUaGUgVlQxMDAtc3R5bGUgcmVzcG9uc2UgcGFyYW1ldGVycyBkbyBub3QgbWVhbiBhbnl0aGluZyBieQovLyAgIHRoZW1zZWx2ZXMuICBWVDIyMCBwYXJhbWV0ZXJzIGRvLCB0ZWxsaW5nIHRoZSBob3N0IHdoYXQgZmVhLQovLyAgIHR1cmVzIHRoZSB0ZXJtaW5hbCBzdXBwb3J0czoKLy8gICAgIFBzID0gMSAgLT4gMTMyLWNvbHVtbnMuCi8vICAgICBQcyA9IDIgIC0+IFByaW50ZXIuCi8vICAgICBQcyA9IDYgIC0+IFNlbGVjdGl2ZSBlcmFzZS4KLy8gICAgIFBzID0gOCAgLT4gVXNlci1kZWZpbmVkIGtleXMuCi8vICAgICBQcyA9IDkgIC0+IE5hdGlvbmFsIHJlcGxhY2VtZW50IGNoYXJhY3RlciBzZXRzLgovLyAgICAgUHMgPSAxIDUgIC0+IFRlY2huaWNhbCBjaGFyYWN0ZXJzLgovLyAgICAgUHMgPSAyIDIgIC0+IEFOU0kgY29sb3IsIGUuZy4sIFZUNTI1LgovLyAgICAgUHMgPSAyIDkgIC0+IEFOU0kgdGV4dCBsb2NhdG9yIChpLmUuLCBERUMgTG9jYXRvciBtb2RlKS4KLy8gQ1NJID4gUHMgYwovLyAgIFNlbmQgRGV2aWNlIEF0dHJpYnV0ZXMgKFNlY29uZGFyeSBEQSkuCi8vICAgICBQcyA9IDAgIG9yIG9taXR0ZWQgLT4gcmVxdWVzdCB0aGUgdGVybWluYWwncyBpZGVudGlmaWNhdGlvbgovLyAgICAgY29kZS4gIFRoZSByZXNwb25zZSBkZXBlbmRzIG9uIHRoZSBkZWNUZXJtaW5hbElEIHJlc291cmNlIHNldC0KLy8gICAgIHRpbmcuICBJdCBzaG91bGQgYXBwbHkgb25seSB0byBWVDIyMCBhbmQgdXAsIGJ1dCB4dGVybSBleHRlbmRzCi8vICAgICB0aGlzIHRvIFZUMTAwLgovLyAgICAgLT4gQ1NJICA+IFBwIDsgUHYgOyBQYyBjCi8vICAgd2hlcmUgUHAgZGVub3RlcyB0aGUgdGVybWluYWwgdHlwZQovLyAgICAgUHAgPSAwICAtPiBgYFZUMTAwJycuCi8vICAgICBQcCA9IDEgIC0+IGBgVlQyMjAnJy4KLy8gICBhbmQgUHYgaXMgdGhlIGZpcm13YXJlIHZlcnNpb24gKGZvciB4dGVybSwgdGhpcyB3YXMgb3JpZ2luYWxseQovLyAgIHRoZSBYRnJlZTg2IHBhdGNoIG51bWJlciwgc3RhcnRpbmcgd2l0aCA5NSkuICBJbiBhIERFQyB0ZXJtaS0KLy8gICBuYWwsIFBjIGluZGljYXRlcyB0aGUgUk9NIGNhcnRyaWRnZSByZWdpc3RyYXRpb24gbnVtYmVyIGFuZCBpcwovLyAgIGFsd2F5cyB6ZXJvLgovLyBNb3JlIGluZm9ybWF0aW9uOgovLyAgIHh0ZXJtL2NoYXJwcm9jLmMgLSBsaW5lIDIwMTIsIGZvciBtb3JlIGluZm9ybWF0aW9uLgovLyAgIHZpbSByZXNwb25kcyB3aXRoIF5bWz8wYyBvciBeW1s/MWMgYWZ0ZXIgdGhlIHRlcm1pbmFsJ3MgcmVzcG9uc2UgKD8pClRlcm1pbmFsLnByb3RvdHlwZS5zZW5kRGV2aWNlQXR0cmlidXRlcyA9IGZ1bmN0aW9uKHBhcmFtcykgewogIGlmIChwYXJhbXNbMF0gPiAwKSByZXR1cm47CgogIGlmICghdGhpcy5wcmVmaXgpIHsKICAgIGlmICh0aGlzLmlzKCd4dGVybScpCiAgICAgICAgfHwgdGhpcy5pcygncnh2dC11bmljb2RlJykKICAgICAgICB8fCB0aGlzLmlzKCdzY3JlZW4nKSkgewogICAgICB0aGlzLnNlbmQoJ1x4MWJbPzE7MmMnKTsKICAgIH0gZWxzZSBpZiAodGhpcy5pcygnbGludXgnKSkgewogICAgICB0aGlzLnNlbmQoJ1x4MWJbPzZjJyk7CiAgICB9CiAgfSBlbHNlIGlmICh0aGlzLnByZWZpeCA9PT0gJz4nKSB7CiAgICAvLyB4dGVybSBhbmQgdXJ4dnQKICAgIC8vIHNlZW0gdG8gc3BpdCB0aGlzCiAgICAvLyBvdXQgYXJvdW5kIH4zNzAgdGltZXMgKD8pLgogICAgaWYgKHRoaXMuaXMoJ3h0ZXJtJykpIHsKICAgICAgdGhpcy5zZW5kKCdceDFiWz4wOzI3NjswYycpOwogICAgfSBlbHNlIGlmICh0aGlzLmlzKCdyeHZ0LXVuaWNvZGUnKSkgewogICAgICB0aGlzLnNlbmQoJ1x4MWJbPjg1Ozk1OzBjJyk7CiAgICB9IGVsc2UgaWYgKHRoaXMuaXMoJ2xpbnV4JykpIHsKICAgICAgLy8gbm90IHN1cHBvcnRlZCBieSBsaW51eCBjb25zb2xlLgogICAgICAvLyBsaW51eCBjb25zb2xlIGVjaG9lcyBwYXJhbWV0ZXJzLgogICAgICB0aGlzLnNlbmQocGFyYW1zWzBdICsgJ2MnKTsKICAgIH0gZWxzZSBpZiAodGhpcy5pcygnc2NyZWVuJykpIHsKICAgICAgdGhpcy5zZW5kKCdceDFiWz44Mzs0MDAwMzswYycpOwogICAgfQogIH0KfTsKCi8vIENTSSBQbSBkCi8vIExpbmUgUG9zaXRpb24gQWJzb2x1dGUgIFtyb3ddIChkZWZhdWx0ID0gWzEsY29sdW1uXSkgKFZQQSkuClRlcm1pbmFsLnByb3RvdHlwZS5saW5lUG9zQWJzb2x1dGUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDwgMSkgcGFyYW0gPSAxOwogIHRoaXMueSA9IHBhcmFtIC0gMTsKICBpZiAodGhpcy55ID49IHRoaXMucm93cykgewogICAgdGhpcy55ID0gdGhpcy5yb3dzIC0gMTsKICB9Cn07CgovLyAxNDUgNjUgZSAqIFZQUiAtIFZlcnRpY2FsIFBvc2l0aW9uIFJlbGF0aXZlCi8vIHJldXNlIENTSSBQcyBCID8KVGVybWluYWwucHJvdG90eXBlLlZQb3NpdGlvblJlbGF0aXZlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdOwogIGlmIChwYXJhbSA8IDEpIHBhcmFtID0gMTsKICB0aGlzLnkgKz0gcGFyYW07CiAgaWYgKHRoaXMueSA+PSB0aGlzLnJvd3MpIHsKICAgIHRoaXMueSA9IHRoaXMucm93cyAtIDE7CiAgfQp9OwoKLy8gQ1NJIFBzIDsgUHMgZgovLyAgIEhvcml6b250YWwgYW5kIFZlcnRpY2FsIFBvc2l0aW9uIFtyb3c7Y29sdW1uXSAoZGVmYXVsdCA9Ci8vICAgWzEsMV0pIChIVlApLgpUZXJtaW5hbC5wcm90b3R5cGUuSFZQb3NpdGlvbiA9IGZ1bmN0aW9uKHBhcmFtcykgewogIGlmIChwYXJhbXNbMF0gPCAxKSBwYXJhbXNbMF0gPSAxOwogIGlmIChwYXJhbXNbMV0gPCAxKSBwYXJhbXNbMV0gPSAxOwoKICB0aGlzLnkgPSBwYXJhbXNbMF0gLSAxOwogIGlmICh0aGlzLnkgPj0gdGhpcy5yb3dzKSB7CiAgICB0aGlzLnkgPSB0aGlzLnJvd3MgLSAxOwogIH0KCiAgdGhpcy54ID0gcGFyYW1zWzFdIC0gMTsKICBpZiAodGhpcy54ID49IHRoaXMuY29scykgewogICAgdGhpcy54ID0gdGhpcy5jb2xzIC0gMTsKICB9Cn07CgovLyBDU0kgUG0gaCAgU2V0IE1vZGUgKFNNKS4KLy8gICAgIFBzID0gMiAgLT4gS2V5Ym9hcmQgQWN0aW9uIE1vZGUgKEFNKS4KLy8gICAgIFBzID0gNCAgLT4gSW5zZXJ0IE1vZGUgKElSTSkuCi8vICAgICBQcyA9IDEgMiAgLT4gU2VuZC9yZWNlaXZlIChTUk0pLgovLyAgICAgUHMgPSAyIDAgIC0+IEF1dG9tYXRpYyBOZXdsaW5lIChMTk0pLgovLyBDU0kgPyBQbSBoCi8vICAgREVDIFByaXZhdGUgTW9kZSBTZXQgKERFQ1NFVCkuCi8vICAgICBQcyA9IDEgIC0+IEFwcGxpY2F0aW9uIEN1cnNvciBLZXlzIChERUNDS00pLgovLyAgICAgUHMgPSAyICAtPiBEZXNpZ25hdGUgVVNBU0NJSSBmb3IgY2hhcmFjdGVyIHNldHMgRzAtRzMKLy8gICAgIChERUNBTk0pLCBhbmQgc2V0IFZUMTAwIG1vZGUuCi8vICAgICBQcyA9IDMgIC0+IDEzMiBDb2x1bW4gTW9kZSAoREVDQ09MTSkuCi8vICAgICBQcyA9IDQgIC0+IFNtb290aCAoU2xvdykgU2Nyb2xsIChERUNTQ0xNKS4KLy8gICAgIFBzID0gNSAgLT4gUmV2ZXJzZSBWaWRlbyAoREVDU0NOTSkuCi8vICAgICBQcyA9IDYgIC0+IE9yaWdpbiBNb2RlIChERUNPTSkuCi8vICAgICBQcyA9IDcgIC0+IFdyYXBhcm91bmQgTW9kZSAoREVDQVdNKS4KLy8gICAgIFBzID0gOCAgLT4gQXV0by1yZXBlYXQgS2V5cyAoREVDQVJNKS4KLy8gICAgIFBzID0gOSAgLT4gU2VuZCBNb3VzZSBYICYgWSBvbiBidXR0b24gcHJlc3MuICBTZWUgdGhlIHNlYy0KLy8gICAgIHRpb24gTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAgLT4gU2hvdyB0b29sYmFyIChyeHZ0KS4KLy8gICAgIFBzID0gMSAyICAtPiBTdGFydCBCbGlua2luZyBDdXJzb3IgKGF0dDYxMCkuCi8vICAgICBQcyA9IDEgOCAgLT4gUHJpbnQgZm9ybSBmZWVkIChERUNQRkYpLgovLyAgICAgUHMgPSAxIDkgIC0+IFNldCBwcmludCBleHRlbnQgdG8gZnVsbCBzY3JlZW4gKERFQ1BFWCkuCi8vICAgICBQcyA9IDIgNSAgLT4gU2hvdyBDdXJzb3IgKERFQ1RDRU0pLgovLyAgICAgUHMgPSAzIDAgIC0+IFNob3cgc2Nyb2xsYmFyIChyeHZ0KS4KLy8gICAgIFBzID0gMyA1ICAtPiBFbmFibGUgZm9udC1zaGlmdGluZyBmdW5jdGlvbnMgKHJ4dnQpLgovLyAgICAgUHMgPSAzIDggIC0+IEVudGVyIFRla3Ryb25peCBNb2RlIChERUNURUspLgovLyAgICAgUHMgPSA0IDAgIC0+IEFsbG93IDgwIC0+IDEzMiBNb2RlLgovLyAgICAgUHMgPSA0IDEgIC0+IG1vcmUoMSkgZml4IChzZWUgY3Vyc2VzIHJlc291cmNlKS4KLy8gICAgIFBzID0gNCAyICAtPiBFbmFibGUgTmF0aW9uIFJlcGxhY2VtZW50IENoYXJhY3RlciBzZXRzIChERUNOLQovLyAgICAgUkNNKS4KLy8gICAgIFBzID0gNCA0ICAtPiBUdXJuIE9uIE1hcmdpbiBCZWxsLgovLyAgICAgUHMgPSA0IDUgIC0+IFJldmVyc2Utd3JhcGFyb3VuZCBNb2RlLgovLyAgICAgUHMgPSA0IDYgIC0+IFN0YXJ0IExvZ2dpbmcuICBUaGlzIGlzIG5vcm1hbGx5IGRpc2FibGVkIGJ5IGEKLy8gICAgIGNvbXBpbGUtdGltZSBvcHRpb24uCi8vICAgICBQcyA9IDQgNyAgLT4gVXNlIEFsdGVybmF0ZSBTY3JlZW4gQnVmZmVyLiAgKFRoaXMgbWF5IGJlIGRpcy0KLy8gICAgIGFibGVkIGJ5IHRoZSB0aXRlSW5oaWJpdCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDYgNiAgLT4gQXBwbGljYXRpb24ga2V5cGFkIChERUNOS00pLgovLyAgICAgUHMgPSA2IDcgIC0+IEJhY2thcnJvdyBrZXkgc2VuZHMgYmFja3NwYWNlIChERUNCS00pLgovLyAgICAgUHMgPSAxIDAgMCAwICAtPiBTZW5kIE1vdXNlIFggJiBZIG9uIGJ1dHRvbiBwcmVzcyBhbmQKLy8gICAgIHJlbGVhc2UuICBTZWUgdGhlIHNlY3Rpb24gTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDEgIC0+IFVzZSBIaWxpdGUgTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDIgIC0+IFVzZSBDZWxsIE1vdGlvbiBNb3VzZSBUcmFja2luZy4KLy8gICAgIFBzID0gMSAwIDAgMyAgLT4gVXNlIEFsbCBNb3Rpb24gTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDQgIC0+IFNlbmQgRm9jdXNJbi9Gb2N1c091dCBldmVudHMuCi8vICAgICBQcyA9IDEgMCAwIDUgIC0+IEVuYWJsZSBFeHRlbmRlZCBNb3VzZSBNb2RlLgovLyAgICAgUHMgPSAxIDAgMSAwICAtPiBTY3JvbGwgdG8gYm90dG9tIG9uIHR0eSBvdXRwdXQgKHJ4dnQpLgovLyAgICAgUHMgPSAxIDAgMSAxICAtPiBTY3JvbGwgdG8gYm90dG9tIG9uIGtleSBwcmVzcyAocnh2dCkuCi8vICAgICBQcyA9IDEgMCAzIDQgIC0+IEludGVycHJldCAibWV0YSIga2V5LCBzZXRzIGVpZ2h0aCBiaXQuCi8vICAgICAoZW5hYmxlcyB0aGUgZWlnaHRCaXRJbnB1dCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCAzIDUgIC0+IEVuYWJsZSBzcGVjaWFsIG1vZGlmaWVycyBmb3IgQWx0IGFuZCBOdW0tCi8vICAgICBMb2NrIGtleXMuICAoVGhpcyBlbmFibGVzIHRoZSBudW1Mb2NrIHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDMgNiAgLT4gU2VuZCBFU0MgICB3aGVuIE1ldGEgbW9kaWZpZXMgYSBrZXkuICAoVGhpcwovLyAgICAgZW5hYmxlcyB0aGUgbWV0YVNlbmRzRXNjYXBlIHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDMgNyAgLT4gU2VuZCBERUwgZnJvbSB0aGUgZWRpdGluZy1rZXlwYWQgRGVsZXRlCi8vICAgICBrZXkuCi8vICAgICBQcyA9IDEgMCAzIDkgIC0+IFNlbmQgRVNDICB3aGVuIEFsdCBtb2RpZmllcyBhIGtleS4gIChUaGlzCi8vICAgICBlbmFibGVzIHRoZSBhbHRTZW5kc0VzY2FwZSByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDAgIC0+IEtlZXAgc2VsZWN0aW9uIGV2ZW4gaWYgbm90IGhpZ2hsaWdodGVkLgovLyAgICAgKFRoaXMgZW5hYmxlcyB0aGUga2VlcFNlbGVjdGlvbiByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDEgIC0+IFVzZSB0aGUgQ0xJUEJPQVJEIHNlbGVjdGlvbi4gIChUaGlzIGVuYWJsZXMKLy8gICAgIHRoZSBzZWxlY3RUb0NsaXBib2FyZCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDIgIC0+IEVuYWJsZSBVcmdlbmN5IHdpbmRvdyBtYW5hZ2VyIGhpbnQgd2hlbgovLyAgICAgQ29udHJvbC1HIGlzIHJlY2VpdmVkLiAgKFRoaXMgZW5hYmxlcyB0aGUgYmVsbElzVXJnZW50Ci8vICAgICByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDMgIC0+IEVuYWJsZSByYWlzaW5nIG9mIHRoZSB3aW5kb3cgd2hlbiBDb250cm9sLUcKLy8gICAgIGlzIHJlY2VpdmVkLiAgKGVuYWJsZXMgdGhlIHBvcE9uQmVsbCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDcgIC0+IFVzZSBBbHRlcm5hdGUgU2NyZWVuIEJ1ZmZlci4gIChUaGlzIG1heSBiZQovLyAgICAgZGlzYWJsZWQgYnkgdGhlIHRpdGVJbmhpYml0IHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDQgOCAgLT4gU2F2ZSBjdXJzb3IgYXMgaW4gREVDU0MuICAoVGhpcyBtYXkgYmUgZGlzLQovLyAgICAgYWJsZWQgYnkgdGhlIHRpdGVJbmhpYml0IHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDQgOSAgLT4gU2F2ZSBjdXJzb3IgYXMgaW4gREVDU0MgYW5kIHVzZSBBbHRlcm5hdGUKLy8gICAgIFNjcmVlbiBCdWZmZXIsIGNsZWFyaW5nIGl0IGZpcnN0LiAgKFRoaXMgbWF5IGJlIGRpc2FibGVkIGJ5Ci8vICAgICB0aGUgdGl0ZUluaGliaXQgcmVzb3VyY2UpLiAgVGhpcyBjb21iaW5lcyB0aGUgZWZmZWN0cyBvZiB0aGUgMQovLyAgICAgMCA0IDcgIGFuZCAxIDAgNCA4ICBtb2Rlcy4gIFVzZSB0aGlzIHdpdGggdGVybWluZm8tYmFzZWQKLy8gICAgIGFwcGxpY2F0aW9ucyByYXRoZXIgdGhhbiB0aGUgNCA3ICBtb2RlLgovLyAgICAgUHMgPSAxIDAgNSAwICAtPiBTZXQgdGVybWluZm8vdGVybWNhcCBmdW5jdGlvbi1rZXkgbW9kZS4KLy8gICAgIFBzID0gMSAwIDUgMSAgLT4gU2V0IFN1biBmdW5jdGlvbi1rZXkgbW9kZS4KLy8gICAgIFBzID0gMSAwIDUgMiAgLT4gU2V0IEhQIGZ1bmN0aW9uLWtleSBtb2RlLgovLyAgICAgUHMgPSAxIDAgNSAzICAtPiBTZXQgU0NPIGZ1bmN0aW9uLWtleSBtb2RlLgovLyAgICAgUHMgPSAxIDAgNiAwICAtPiBTZXQgbGVnYWN5IGtleWJvYXJkIGVtdWxhdGlvbiAoWDExUjYpLgovLyAgICAgUHMgPSAxIDAgNiAxICAtPiBTZXQgVlQyMjAga2V5Ym9hcmQgZW11bGF0aW9uLgovLyAgICAgUHMgPSAyIDAgMCA0ICAtPiBTZXQgYnJhY2tldGVkIHBhc3RlIG1vZGUuCi8vIE1vZGVzOgovLyAgIGh0dHA6Ly92dDEwMC5uZXQvZG9jcy92dDIyMC1ybS9jaGFwdGVyNC5odG1sClRlcm1pbmFsLnByb3RvdHlwZS5zZXRNb2RlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdvYmplY3QnKSB7CiAgICB2YXIgbCA9IHBhcmFtcy5sZW5ndGgKICAgICAgLCBpID0gMDsKCiAgICBmb3IgKDsgaSA8IGw7IGkrKykgewogICAgICB0aGlzLnNldE1vZGUocGFyYW1zW2ldKTsKICAgIH0KCiAgICByZXR1cm47CiAgfQoKICBpZiAoIXRoaXMucHJlZml4KSB7CiAgICBzd2l0Y2ggKHBhcmFtcykgewogICAgICBjYXNlIDQ6CiAgICAgICAgdGhpcy5pbnNlcnRNb2RlID0gdHJ1ZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAyMDoKICAgICAgICAvL3RoaXMuY29udmVydEVvbCA9IHRydWU7CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfSBlbHNlIGlmICh0aGlzLnByZWZpeCA9PT0gJz8nKSB7CiAgICBzd2l0Y2ggKHBhcmFtcykgewogICAgICBjYXNlIDE6CiAgICAgICAgdGhpcy5hcHBsaWNhdGlvbkN1cnNvciA9IHRydWU7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMjoKICAgICAgICB0aGlzLnNldGdDaGFyc2V0KDAsIFRlcm1pbmFsLmNoYXJzZXRzLlVTKTsKICAgICAgICB0aGlzLnNldGdDaGFyc2V0KDEsIFRlcm1pbmFsLmNoYXJzZXRzLlVTKTsKICAgICAgICB0aGlzLnNldGdDaGFyc2V0KDIsIFRlcm1pbmFsLmNoYXJzZXRzLlVTKTsKICAgICAgICB0aGlzLnNldGdDaGFyc2V0KDMsIFRlcm1pbmFsLmNoYXJzZXRzLlVTKTsKICAgICAgICAvLyBzZXQgVlQxMDAgbW9kZSBoZXJlCiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMzogLy8gMTMyIGNvbCBtb2RlCiAgICAgICAgdGhpcy5zYXZlZENvbHMgPSB0aGlzLmNvbHM7CiAgICAgICAgdGhpcy5yZXNpemUoMTMyLCB0aGlzLnJvd3MpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDY6CiAgICAgICAgdGhpcy5vcmlnaW5Nb2RlID0gdHJ1ZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSA3OgogICAgICAgIHRoaXMud3JhcGFyb3VuZE1vZGUgPSB0cnVlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDEyOgogICAgICAgIC8vIHRoaXMuY3Vyc29yQmxpbmsgPSB0cnVlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDY2OgogICAgICAgIHRoaXMubG9nKCdTZXJpYWwgcG9ydCByZXF1ZXN0ZWQgYXBwbGljYXRpb24ga2V5cGFkLicpOwogICAgICAgIHRoaXMuYXBwbGljYXRpb25LZXlwYWQgPSB0cnVlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDk6IC8vIFgxMCBNb3VzZQogICAgICAgIC8vIG5vIHJlbGVhc2UsIG5vIG1vdGlvbiwgbm8gd2hlZWwsIG5vIG1vZGlmaWVycy4KICAgICAgY2FzZSAxMDAwOiAvLyB2dDIwMCBtb3VzZQogICAgICAgIC8vIG5vIG1vdGlvbi4KICAgICAgICAvLyBubyBtb2RpZmllcnMsIGV4Y2VwdCBjb250cm9sIG9uIHRoZSB3aGVlbC4KICAgICAgY2FzZSAxMDAyOiAvLyBidXR0b24gZXZlbnQgbW91c2UKICAgICAgY2FzZSAxMDAzOiAvLyBhbnkgZXZlbnQgbW91c2UKICAgICAgICAvLyBhbnkgZXZlbnQgLSBzZW5kcyBtb3Rpb24gZXZlbnRzLAogICAgICAgIC8vIGV2ZW4gaWYgdGhlcmUgaXMgbm8gYnV0dG9uIGhlbGQgZG93bi4KICAgICAgICB0aGlzLngxME1vdXNlID0gcGFyYW1zID09PSA5OwogICAgICAgIHRoaXMudnQyMDBNb3VzZSA9IHBhcmFtcyA9PT0gMTAwMDsKICAgICAgICB0aGlzLm5vcm1hbE1vdXNlID0gcGFyYW1zID4gMTAwMDsKICAgICAgICB0aGlzLm1vdXNlRXZlbnRzID0gdHJ1ZTsKICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUuY3Vyc29yID0gJ2RlZmF1bHQnOwogICAgICAgIHRoaXMubG9nKCdCaW5kaW5nIHRvIG1vdXNlIGV2ZW50cy4nKTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAxMDA0OiAvLyBzZW5kIGZvY3VzaW4vZm9jdXNvdXQgZXZlbnRzCiAgICAgICAgLy8gZm9jdXNpbjogXltbSQogICAgICAgIC8vIGZvY3Vzb3V0OiBeW1tPCiAgICAgICAgdGhpcy5zZW5kRm9jdXMgPSB0cnVlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDEwMDU6IC8vIHV0ZjggZXh0IG1vZGUgbW91c2UKICAgICAgICB0aGlzLnV0Zk1vdXNlID0gdHJ1ZTsKICAgICAgICAvLyBmb3Igd2lkZSB0ZXJtaW5hbHMKICAgICAgICAvLyBzaW1wbHkgZW5jb2RlcyBsYXJnZSB2YWx1ZXMgYXMgdXRmOCBjaGFyYWN0ZXJzCiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMTAwNjogLy8gc2dyIGV4dCBtb2RlIG1vdXNlCiAgICAgICAgdGhpcy5zZ3JNb3VzZSA9IHRydWU7CiAgICAgICAgLy8gZm9yIHdpZGUgdGVybWluYWxzCiAgICAgICAgLy8gZG9lcyBub3QgYWRkIDMyIHRvIGZpZWxkcwogICAgICAgIC8vIHByZXNzOiBeW1s8Yjt4O3lNCiAgICAgICAgLy8gcmVsZWFzZTogXltbPGI7eDt5bQogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDEwMTU6IC8vIHVyeHZ0IGV4dCBtb2RlIG1vdXNlCiAgICAgICAgdGhpcy51cnh2dE1vdXNlID0gdHJ1ZTsKICAgICAgICAvLyBmb3Igd2lkZSB0ZXJtaW5hbHMKICAgICAgICAvLyBudW1iZXJzIGZvciBmaWVsZHMKICAgICAgICAvLyBwcmVzczogXltbYjt4O3lNCiAgICAgICAgLy8gbW90aW9uOiBeW1tiO3g7eVQKICAgICAgICBicmVhazsKICAgICAgY2FzZSAyNTogLy8gc2hvdyBjdXJzb3IKICAgICAgICB0aGlzLmN1cnNvckhpZGRlbiA9IGZhbHNlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDEwNDk6IC8vIGFsdCBzY3JlZW4gYnVmZmVyIGN1cnNvcgogICAgICAgIC8vdGhpcy5zYXZlQ3Vyc29yKCk7CiAgICAgICAgOyAvLyBGQUxMLVRIUk9VR0gKICAgICAgY2FzZSA0NzogLy8gYWx0IHNjcmVlbiBidWZmZXIKICAgICAgY2FzZSAxMDQ3OiAvLyBhbHQgc2NyZWVuIGJ1ZmZlcgogICAgICAgIGlmICghdGhpcy5ub3JtYWwpIHsKICAgICAgICAgIHZhciBub3JtYWwgPSB7CiAgICAgICAgICAgIGxpbmVzOiB0aGlzLmxpbmVzLAogICAgICAgICAgICB5YmFzZTogdGhpcy55YmFzZSwKICAgICAgICAgICAgeWRpc3A6IHRoaXMueWRpc3AsCiAgICAgICAgICAgIHg6IHRoaXMueCwKICAgICAgICAgICAgeTogdGhpcy55LAogICAgICAgICAgICBzY3JvbGxUb3A6IHRoaXMuc2Nyb2xsVG9wLAogICAgICAgICAgICBzY3JvbGxCb3R0b206IHRoaXMuc2Nyb2xsQm90dG9tLAogICAgICAgICAgICB0YWJzOiB0aGlzLnRhYnMKICAgICAgICAgICAgLy8gWFhYIHNhdmUgY2hhcnNldChzKSBoZXJlPwogICAgICAgICAgICAvLyBjaGFyc2V0OiB0aGlzLmNoYXJzZXQsCiAgICAgICAgICAgIC8vIGdsZXZlbDogdGhpcy5nbGV2ZWwsCiAgICAgICAgICAgIC8vIGNoYXJzZXRzOiB0aGlzLmNoYXJzZXRzCiAgICAgICAgICB9OwogICAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgICAgdGhpcy5ub3JtYWwgPSBub3JtYWw7CiAgICAgICAgICB0aGlzLnNob3dDdXJzb3IoKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfQp9OwoKLy8gQ1NJIFBtIGwgIFJlc2V0IE1vZGUgKFJNKS4KLy8gICAgIFBzID0gMiAgLT4gS2V5Ym9hcmQgQWN0aW9uIE1vZGUgKEFNKS4KLy8gICAgIFBzID0gNCAgLT4gUmVwbGFjZSBNb2RlIChJUk0pLgovLyAgICAgUHMgPSAxIDIgIC0+IFNlbmQvcmVjZWl2ZSAoU1JNKS4KLy8gICAgIFBzID0gMiAwICAtPiBOb3JtYWwgTGluZWZlZWQgKExOTSkuCi8vIENTSSA/IFBtIGwKLy8gICBERUMgUHJpdmF0ZSBNb2RlIFJlc2V0IChERUNSU1QpLgovLyAgICAgUHMgPSAxICAtPiBOb3JtYWwgQ3Vyc29yIEtleXMgKERFQ0NLTSkuCi8vICAgICBQcyA9IDIgIC0+IERlc2lnbmF0ZSBWVDUyIG1vZGUgKERFQ0FOTSkuCi8vICAgICBQcyA9IDMgIC0+IDgwIENvbHVtbiBNb2RlIChERUNDT0xNKS4KLy8gICAgIFBzID0gNCAgLT4gSnVtcCAoRmFzdCkgU2Nyb2xsIChERUNTQ0xNKS4KLy8gICAgIFBzID0gNSAgLT4gTm9ybWFsIFZpZGVvIChERUNTQ05NKS4KLy8gICAgIFBzID0gNiAgLT4gTm9ybWFsIEN1cnNvciBNb2RlIChERUNPTSkuCi8vICAgICBQcyA9IDcgIC0+IE5vIFdyYXBhcm91bmQgTW9kZSAoREVDQVdNKS4KLy8gICAgIFBzID0gOCAgLT4gTm8gQXV0by1yZXBlYXQgS2V5cyAoREVDQVJNKS4KLy8gICAgIFBzID0gOSAgLT4gRG9uJ3Qgc2VuZCBNb3VzZSBYICYgWSBvbiBidXR0b24gcHJlc3MuCi8vICAgICBQcyA9IDEgMCAgLT4gSGlkZSB0b29sYmFyIChyeHZ0KS4KLy8gICAgIFBzID0gMSAyICAtPiBTdG9wIEJsaW5raW5nIEN1cnNvciAoYXR0NjEwKS4KLy8gICAgIFBzID0gMSA4ICAtPiBEb24ndCBwcmludCBmb3JtIGZlZWQgKERFQ1BGRikuCi8vICAgICBQcyA9IDEgOSAgLT4gTGltaXQgcHJpbnQgdG8gc2Nyb2xsaW5nIHJlZ2lvbiAoREVDUEVYKS4KLy8gICAgIFBzID0gMiA1ICAtPiBIaWRlIEN1cnNvciAoREVDVENFTSkuCi8vICAgICBQcyA9IDMgMCAgLT4gRG9uJ3Qgc2hvdyBzY3JvbGxiYXIgKHJ4dnQpLgovLyAgICAgUHMgPSAzIDUgIC0+IERpc2FibGUgZm9udC1zaGlmdGluZyBmdW5jdGlvbnMgKHJ4dnQpLgovLyAgICAgUHMgPSA0IDAgIC0+IERpc2FsbG93IDgwIC0+IDEzMiBNb2RlLgovLyAgICAgUHMgPSA0IDEgIC0+IE5vIG1vcmUoMSkgZml4IChzZWUgY3Vyc2VzIHJlc291cmNlKS4KLy8gICAgIFBzID0gNCAyICAtPiBEaXNhYmxlIE5hdGlvbiBSZXBsYWNlbWVudCBDaGFyYWN0ZXIgc2V0cyAoREVDLQovLyAgICAgTlJDTSkuCi8vICAgICBQcyA9IDQgNCAgLT4gVHVybiBPZmYgTWFyZ2luIEJlbGwuCi8vICAgICBQcyA9IDQgNSAgLT4gTm8gUmV2ZXJzZS13cmFwYXJvdW5kIE1vZGUuCi8vICAgICBQcyA9IDQgNiAgLT4gU3RvcCBMb2dnaW5nLiAgKFRoaXMgaXMgbm9ybWFsbHkgZGlzYWJsZWQgYnkgYQovLyAgICAgY29tcGlsZS10aW1lIG9wdGlvbikuCi8vICAgICBQcyA9IDQgNyAgLT4gVXNlIE5vcm1hbCBTY3JlZW4gQnVmZmVyLgovLyAgICAgUHMgPSA2IDYgIC0+IE51bWVyaWMga2V5cGFkIChERUNOS00pLgovLyAgICAgUHMgPSA2IDcgIC0+IEJhY2thcnJvdyBrZXkgc2VuZHMgZGVsZXRlIChERUNCS00pLgovLyAgICAgUHMgPSAxIDAgMCAwICAtPiBEb24ndCBzZW5kIE1vdXNlIFggJiBZIG9uIGJ1dHRvbiBwcmVzcyBhbmQKLy8gICAgIHJlbGVhc2UuICBTZWUgdGhlIHNlY3Rpb24gTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDEgIC0+IERvbid0IHVzZSBIaWxpdGUgTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDIgIC0+IERvbid0IHVzZSBDZWxsIE1vdGlvbiBNb3VzZSBUcmFja2luZy4KLy8gICAgIFBzID0gMSAwIDAgMyAgLT4gRG9uJ3QgdXNlIEFsbCBNb3Rpb24gTW91c2UgVHJhY2tpbmcuCi8vICAgICBQcyA9IDEgMCAwIDQgIC0+IERvbid0IHNlbmQgRm9jdXNJbi9Gb2N1c091dCBldmVudHMuCi8vICAgICBQcyA9IDEgMCAwIDUgIC0+IERpc2FibGUgRXh0ZW5kZWQgTW91c2UgTW9kZS4KLy8gICAgIFBzID0gMSAwIDEgMCAgLT4gRG9uJ3Qgc2Nyb2xsIHRvIGJvdHRvbSBvbiB0dHkgb3V0cHV0Ci8vICAgICAocnh2dCkuCi8vICAgICBQcyA9IDEgMCAxIDEgIC0+IERvbid0IHNjcm9sbCB0byBib3R0b20gb24ga2V5IHByZXNzIChyeHZ0KS4KLy8gICAgIFBzID0gMSAwIDMgNCAgLT4gRG9uJ3QgaW50ZXJwcmV0ICJtZXRhIiBrZXkuICAoVGhpcyBkaXNhYmxlcwovLyAgICAgdGhlIGVpZ2h0Qml0SW5wdXQgcmVzb3VyY2UpLgovLyAgICAgUHMgPSAxIDAgMyA1ICAtPiBEaXNhYmxlIHNwZWNpYWwgbW9kaWZpZXJzIGZvciBBbHQgYW5kIE51bS0KLy8gICAgIExvY2sga2V5cy4gIChUaGlzIGRpc2FibGVzIHRoZSBudW1Mb2NrIHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDMgNiAgLT4gRG9uJ3Qgc2VuZCBFU0MgIHdoZW4gTWV0YSBtb2RpZmllcyBhIGtleS4KLy8gICAgIChUaGlzIGRpc2FibGVzIHRoZSBtZXRhU2VuZHNFc2NhcGUgcmVzb3VyY2UpLgovLyAgICAgUHMgPSAxIDAgMyA3ICAtPiBTZW5kIFZUMjIwIFJlbW92ZSBmcm9tIHRoZSBlZGl0aW5nLWtleXBhZAovLyAgICAgRGVsZXRlIGtleS4KLy8gICAgIFBzID0gMSAwIDMgOSAgLT4gRG9uJ3Qgc2VuZCBFU0MgIHdoZW4gQWx0IG1vZGlmaWVzIGEga2V5LgovLyAgICAgKFRoaXMgZGlzYWJsZXMgdGhlIGFsdFNlbmRzRXNjYXBlIHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDQgMCAgLT4gRG8gbm90IGtlZXAgc2VsZWN0aW9uIHdoZW4gbm90IGhpZ2hsaWdodGVkLgovLyAgICAgKFRoaXMgZGlzYWJsZXMgdGhlIGtlZXBTZWxlY3Rpb24gcmVzb3VyY2UpLgovLyAgICAgUHMgPSAxIDAgNCAxICAtPiBVc2UgdGhlIFBSSU1BUlkgc2VsZWN0aW9uLiAgKFRoaXMgZGlzYWJsZXMKLy8gICAgIHRoZSBzZWxlY3RUb0NsaXBib2FyZCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDIgIC0+IERpc2FibGUgVXJnZW5jeSB3aW5kb3cgbWFuYWdlciBoaW50IHdoZW4KLy8gICAgIENvbnRyb2wtRyBpcyByZWNlaXZlZC4gIChUaGlzIGRpc2FibGVzIHRoZSBiZWxsSXNVcmdlbnQKLy8gICAgIHJlc291cmNlKS4KLy8gICAgIFBzID0gMSAwIDQgMyAgLT4gRGlzYWJsZSByYWlzaW5nIG9mIHRoZSB3aW5kb3cgd2hlbiBDb250cm9sLQovLyAgICAgRyBpcyByZWNlaXZlZC4gIChUaGlzIGRpc2FibGVzIHRoZSBwb3BPbkJlbGwgcmVzb3VyY2UpLgovLyAgICAgUHMgPSAxIDAgNCA3ICAtPiBVc2UgTm9ybWFsIFNjcmVlbiBCdWZmZXIsIGNsZWFyaW5nIHNjcmVlbgovLyAgICAgZmlyc3QgaWYgaW4gdGhlIEFsdGVybmF0ZSBTY3JlZW4uICAoVGhpcyBtYXkgYmUgZGlzYWJsZWQgYnkKLy8gICAgIHRoZSB0aXRlSW5oaWJpdCByZXNvdXJjZSkuCi8vICAgICBQcyA9IDEgMCA0IDggIC0+IFJlc3RvcmUgY3Vyc29yIGFzIGluIERFQ1JDLiAgKFRoaXMgbWF5IGJlCi8vICAgICBkaXNhYmxlZCBieSB0aGUgdGl0ZUluaGliaXQgcmVzb3VyY2UpLgovLyAgICAgUHMgPSAxIDAgNCA5ICAtPiBVc2UgTm9ybWFsIFNjcmVlbiBCdWZmZXIgYW5kIHJlc3RvcmUgY3Vyc29yCi8vICAgICBhcyBpbiBERUNSQy4gIChUaGlzIG1heSBiZSBkaXNhYmxlZCBieSB0aGUgdGl0ZUluaGliaXQKLy8gICAgIHJlc291cmNlKS4gIFRoaXMgY29tYmluZXMgdGhlIGVmZmVjdHMgb2YgdGhlIDEgMCA0IDcgIGFuZCAxIDAKLy8gICAgIDQgOCAgbW9kZXMuICBVc2UgdGhpcyB3aXRoIHRlcm1pbmZvLWJhc2VkIGFwcGxpY2F0aW9ucyByYXRoZXIKLy8gICAgIHRoYW4gdGhlIDQgNyAgbW9kZS4KLy8gICAgIFBzID0gMSAwIDUgMCAgLT4gUmVzZXQgdGVybWluZm8vdGVybWNhcCBmdW5jdGlvbi1rZXkgbW9kZS4KLy8gICAgIFBzID0gMSAwIDUgMSAgLT4gUmVzZXQgU3VuIGZ1bmN0aW9uLWtleSBtb2RlLgovLyAgICAgUHMgPSAxIDAgNSAyICAtPiBSZXNldCBIUCBmdW5jdGlvbi1rZXkgbW9kZS4KLy8gICAgIFBzID0gMSAwIDUgMyAgLT4gUmVzZXQgU0NPIGZ1bmN0aW9uLWtleSBtb2RlLgovLyAgICAgUHMgPSAxIDAgNiAwICAtPiBSZXNldCBsZWdhY3kga2V5Ym9hcmQgZW11bGF0aW9uIChYMTFSNikuCi8vICAgICBQcyA9IDEgMCA2IDEgIC0+IFJlc2V0IGtleWJvYXJkIGVtdWxhdGlvbiB0byBTdW4vUEMgc3R5bGUuCi8vICAgICBQcyA9IDIgMCAwIDQgIC0+IFJlc2V0IGJyYWNrZXRlZCBwYXN0ZSBtb2RlLgpUZXJtaW5hbC5wcm90b3R5cGUucmVzZXRNb2RlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgaWYgKHR5cGVvZiBwYXJhbXMgPT09ICdvYmplY3QnKSB7CiAgICB2YXIgbCA9IHBhcmFtcy5sZW5ndGgKICAgICAgLCBpID0gMDsKCiAgICBmb3IgKDsgaSA8IGw7IGkrKykgewogICAgICB0aGlzLnJlc2V0TW9kZShwYXJhbXNbaV0pOwogICAgfQoKICAgIHJldHVybjsKICB9CgogIGlmICghdGhpcy5wcmVmaXgpIHsKICAgIHN3aXRjaCAocGFyYW1zKSB7CiAgICAgIGNhc2UgNDoKICAgICAgICB0aGlzLmluc2VydE1vZGUgPSBmYWxzZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAyMDoKICAgICAgICAvL3RoaXMuY29udmVydEVvbCA9IGZhbHNlOwogICAgICAgIGJyZWFrOwogICAgfQogIH0gZWxzZSBpZiAodGhpcy5wcmVmaXggPT09ICc/JykgewogICAgc3dpdGNoIChwYXJhbXMpIHsKICAgICAgY2FzZSAxOgogICAgICAgIHRoaXMuYXBwbGljYXRpb25DdXJzb3IgPSBmYWxzZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAzOgogICAgICAgIGlmICh0aGlzLmNvbHMgPT09IDEzMiAmJiB0aGlzLnNhdmVkQ29scykgewogICAgICAgICAgdGhpcy5yZXNpemUodGhpcy5zYXZlZENvbHMsIHRoaXMucm93cyk7CiAgICAgICAgfQogICAgICAgIGRlbGV0ZSB0aGlzLnNhdmVkQ29sczsKICAgICAgICBicmVhazsKICAgICAgY2FzZSA2OgogICAgICAgIHRoaXMub3JpZ2luTW9kZSA9IGZhbHNlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDc6CiAgICAgICAgdGhpcy53cmFwYXJvdW5kTW9kZSA9IGZhbHNlOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlIDEyOgogICAgICAgIC8vIHRoaXMuY3Vyc29yQmxpbmsgPSBmYWxzZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSA2NjoKICAgICAgICB0aGlzLmxvZygnU3dpdGNoaW5nIGJhY2sgdG8gbm9ybWFsIGtleXBhZC4nKTsKICAgICAgICB0aGlzLmFwcGxpY2F0aW9uS2V5cGFkID0gZmFsc2U7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgOTogLy8gWDEwIE1vdXNlCiAgICAgIGNhc2UgMTAwMDogLy8gdnQyMDAgbW91c2UKICAgICAgY2FzZSAxMDAyOiAvLyBidXR0b24gZXZlbnQgbW91c2UKICAgICAgY2FzZSAxMDAzOiAvLyBhbnkgZXZlbnQgbW91c2UKICAgICAgICB0aGlzLngxME1vdXNlID0gZmFsc2U7CiAgICAgICAgdGhpcy52dDIwME1vdXNlID0gZmFsc2U7CiAgICAgICAgdGhpcy5ub3JtYWxNb3VzZSA9IGZhbHNlOwogICAgICAgIHRoaXMubW91c2VFdmVudHMgPSBmYWxzZTsKICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGUuY3Vyc29yID0gJyc7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMTAwNDogLy8gc2VuZCBmb2N1c2luL2ZvY3Vzb3V0IGV2ZW50cwogICAgICAgIHRoaXMuc2VuZEZvY3VzID0gZmFsc2U7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMTAwNTogLy8gdXRmOCBleHQgbW9kZSBtb3VzZQogICAgICAgIHRoaXMudXRmTW91c2UgPSBmYWxzZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAxMDA2OiAvLyBzZ3IgZXh0IG1vZGUgbW91c2UKICAgICAgICB0aGlzLnNnck1vdXNlID0gZmFsc2U7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMTAxNTogLy8gdXJ4dnQgZXh0IG1vZGUgbW91c2UKICAgICAgICB0aGlzLnVyeHZ0TW91c2UgPSBmYWxzZTsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAyNTogLy8gaGlkZSBjdXJzb3IKICAgICAgICB0aGlzLmN1cnNvckhpZGRlbiA9IHRydWU7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgMTA0OTogLy8gYWx0IHNjcmVlbiBidWZmZXIgY3Vyc29yCiAgICAgICAgOyAvLyBGQUxMLVRIUk9VR0gKICAgICAgY2FzZSA0NzogLy8gbm9ybWFsIHNjcmVlbiBidWZmZXIKICAgICAgY2FzZSAxMDQ3OiAvLyBub3JtYWwgc2NyZWVuIGJ1ZmZlciAtIGNsZWFyaW5nIGl0IGZpcnN0CiAgICAgICAgaWYgKHRoaXMubm9ybWFsKSB7CiAgICAgICAgICB0aGlzLmxpbmVzID0gdGhpcy5ub3JtYWwubGluZXM7CiAgICAgICAgICB0aGlzLnliYXNlID0gdGhpcy5ub3JtYWwueWJhc2U7CiAgICAgICAgICB0aGlzLnlkaXNwID0gdGhpcy5ub3JtYWwueWRpc3A7CiAgICAgICAgICB0aGlzLnggPSB0aGlzLm5vcm1hbC54OwogICAgICAgICAgdGhpcy55ID0gdGhpcy5ub3JtYWwueTsKICAgICAgICAgIHRoaXMuc2Nyb2xsVG9wID0gdGhpcy5ub3JtYWwuc2Nyb2xsVG9wOwogICAgICAgICAgdGhpcy5zY3JvbGxCb3R0b20gPSB0aGlzLm5vcm1hbC5zY3JvbGxCb3R0b207CiAgICAgICAgICB0aGlzLnRhYnMgPSB0aGlzLm5vcm1hbC50YWJzOwogICAgICAgICAgdGhpcy5ub3JtYWwgPSBudWxsOwogICAgICAgICAgLy8gaWYgKHBhcmFtcyA9PT0gMTA0OSkgewogICAgICAgICAgLy8gICB0aGlzLnggPSB0aGlzLnNhdmVkWDsKICAgICAgICAgIC8vICAgdGhpcy55ID0gdGhpcy5zYXZlZFk7CiAgICAgICAgICAvLyB9CiAgICAgICAgICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7CiAgICAgICAgICB0aGlzLnNob3dDdXJzb3IoKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfQp9OwoKLy8gQ1NJIFBzIDsgUHMgcgovLyAgIFNldCBTY3JvbGxpbmcgUmVnaW9uIFt0b3A7Ym90dG9tXSAoZGVmYXVsdCA9IGZ1bGwgc2l6ZSBvZiB3aW4tCi8vICAgZG93KSAoREVDU1RCTSkuCi8vIENTSSA/IFBtIHIKVGVybWluYWwucHJvdG90eXBlLnNldFNjcm9sbFJlZ2lvbiA9IGZ1bmN0aW9uKHBhcmFtcykgewogIGlmICh0aGlzLnByZWZpeCkgcmV0dXJuOwogIHRoaXMuc2Nyb2xsVG9wID0gKHBhcmFtc1swXSB8fCAxKSAtIDE7CiAgdGhpcy5zY3JvbGxCb3R0b20gPSAocGFyYW1zWzFdIHx8IHRoaXMucm93cykgLSAxOwogIHRoaXMueCA9IDA7CiAgdGhpcy55ID0gMDsKfTsKCi8vIENTSSBzCi8vICAgU2F2ZSBjdXJzb3IgKEFOU0kuU1lTKS4KVGVybWluYWwucHJvdG90eXBlLnNhdmVDdXJzb3IgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB0aGlzLnNhdmVkWCA9IHRoaXMueDsKICB0aGlzLnNhdmVkWSA9IHRoaXMueTsKfTsKCi8vIENTSSB1Ci8vICAgUmVzdG9yZSBjdXJzb3IgKEFOU0kuU1lTKS4KVGVybWluYWwucHJvdG90eXBlLnJlc3RvcmVDdXJzb3IgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB0aGlzLnggPSB0aGlzLnNhdmVkWCB8fCAwOwogIHRoaXMueSA9IHRoaXMuc2F2ZWRZIHx8IDA7Cn07CgovKioKICogTGVzc2VyIFVzZWQKICovCgovLyBDU0kgUHMgSQovLyAgIEN1cnNvciBGb3J3YXJkIFRhYnVsYXRpb24gUHMgdGFiIHN0b3BzIChkZWZhdWx0ID0gMSkgKENIVCkuClRlcm1pbmFsLnByb3RvdHlwZS5jdXJzb3JGb3J3YXJkVGFiID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdIHx8IDE7CiAgd2hpbGUgKHBhcmFtLS0pIHsKICAgIHRoaXMueCA9IHRoaXMubmV4dFN0b3AoKTsKICB9Cn07CgovLyBDU0kgUHMgUyAgU2Nyb2xsIHVwIFBzIGxpbmVzIChkZWZhdWx0ID0gMSkgKFNVKS4KVGVybWluYWwucHJvdG90eXBlLnNjcm9sbFVwID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdIHx8IDE7CiAgd2hpbGUgKHBhcmFtLS0pIHsKICAgIHRoaXMubGluZXMuc3BsaWNlKHRoaXMueWJhc2UgKyB0aGlzLnNjcm9sbFRvcCwgMSk7CiAgICB0aGlzLmxpbmVzLnNwbGljZSh0aGlzLnliYXNlICsgdGhpcy5zY3JvbGxCb3R0b20sIDAsIHRoaXMuYmxhbmtMaW5lKCkpOwogIH0KICAvLyB0aGlzLm1heFJhbmdlKCk7CiAgdGhpcy51cGRhdGVSYW5nZSh0aGlzLnNjcm9sbFRvcCk7CiAgdGhpcy51cGRhdGVSYW5nZSh0aGlzLnNjcm9sbEJvdHRvbSk7Cn07CgovLyBDU0kgUHMgVCAgU2Nyb2xsIGRvd24gUHMgbGluZXMgKGRlZmF1bHQgPSAxKSAoU0QpLgpUZXJtaW5hbC5wcm90b3R5cGUuc2Nyb2xsRG93biA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciBwYXJhbSA9IHBhcmFtc1swXSB8fCAxOwogIHdoaWxlIChwYXJhbS0tKSB7CiAgICB0aGlzLmxpbmVzLnNwbGljZSh0aGlzLnliYXNlICsgdGhpcy5zY3JvbGxCb3R0b20sIDEpOwogICAgdGhpcy5saW5lcy5zcGxpY2UodGhpcy55YmFzZSArIHRoaXMuc2Nyb2xsVG9wLCAwLCB0aGlzLmJsYW5rTGluZSgpKTsKICB9CiAgLy8gdGhpcy5tYXhSYW5nZSgpOwogIHRoaXMudXBkYXRlUmFuZ2UodGhpcy5zY3JvbGxUb3ApOwogIHRoaXMudXBkYXRlUmFuZ2UodGhpcy5zY3JvbGxCb3R0b20pOwp9OwoKLy8gQ1NJIFBzIDsgUHMgOyBQcyA7IFBzIDsgUHMgVAovLyAgIEluaXRpYXRlIGhpZ2hsaWdodCBtb3VzZSB0cmFja2luZy4gIFBhcmFtZXRlcnMgYXJlCi8vICAgW2Z1bmM7c3RhcnR4O3N0YXJ0eTtmaXJzdHJvdztsYXN0cm93XS4gIFNlZSB0aGUgc2VjdGlvbiBNb3VzZQovLyAgIFRyYWNraW5nLgpUZXJtaW5hbC5wcm90b3R5cGUuaW5pdE1vdXNlVHJhY2tpbmcgPSBmdW5jdGlvbihwYXJhbXMpIHsKICAvLyBSZWxldmFudDogREVDU0VUIDEwMDEKfTsKCi8vIENTSSA+IFBzOyBQcyBUCi8vICAgUmVzZXQgb25lIG9yIG1vcmUgZmVhdHVyZXMgb2YgdGhlIHRpdGxlIG1vZGVzIHRvIHRoZSBkZWZhdWx0Ci8vICAgdmFsdWUuICBOb3JtYWxseSwgInJlc2V0IiBkaXNhYmxlcyB0aGUgZmVhdHVyZS4gIEl0IGlzIHBvc3NpLQovLyAgIGJsZSB0byBkaXNhYmxlIHRoZSBhYmlsaXR5IHRvIHJlc2V0IGZlYXR1cmVzIGJ5IGNvbXBpbGluZyBhCi8vICAgZGlmZmVyZW50IGRlZmF1bHQgZm9yIHRoZSB0aXRsZSBtb2RlcyBpbnRvIHh0ZXJtLgovLyAgICAgUHMgPSAwICAtPiBEbyBub3Qgc2V0IHdpbmRvdy9pY29uIGxhYmVscyB1c2luZyBoZXhhZGVjaW1hbC4KLy8gICAgIFBzID0gMSAgLT4gRG8gbm90IHF1ZXJ5IHdpbmRvdy9pY29uIGxhYmVscyB1c2luZyBoZXhhZGVjaS0KLy8gICAgIG1hbC4KLy8gICAgIFBzID0gMiAgLT4gRG8gbm90IHNldCB3aW5kb3cvaWNvbiBsYWJlbHMgdXNpbmcgVVRGLTguCi8vICAgICBQcyA9IDMgIC0+IERvIG5vdCBxdWVyeSB3aW5kb3cvaWNvbiBsYWJlbHMgdXNpbmcgVVRGLTguCi8vICAgKFNlZSBkaXNjdXNzaW9uIG9mICJUaXRsZSBNb2RlcyIpLgpUZXJtaW5hbC5wcm90b3R5cGUucmVzZXRUaXRsZU1vZGVzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzIFogIEN1cnNvciBCYWNrd2FyZCBUYWJ1bGF0aW9uIFBzIHRhYiBzdG9wcyAoZGVmYXVsdCA9IDEpIChDQlQpLgpUZXJtaW5hbC5wcm90b3R5cGUuY3Vyc29yQmFja3dhcmRUYWIgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF0gfHwgMTsKICB3aGlsZSAocGFyYW0tLSkgewogICAgdGhpcy54ID0gdGhpcy5wcmV2U3RvcCgpOwogIH0KfTsKCi8vIENTSSBQcyBiICBSZXBlYXQgdGhlIHByZWNlZGluZyBncmFwaGljIGNoYXJhY3RlciBQcyB0aW1lcyAoUkVQKS4KVGVybWluYWwucHJvdG90eXBlLnJlcGVhdFByZWNlZGluZ0NoYXJhY3RlciA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciBwYXJhbSA9IHBhcmFtc1swXSB8fCAxCiAgICAsIGxpbmUgPSB0aGlzLmxpbmVzW3RoaXMueWJhc2UgKyB0aGlzLnldCiAgICAsIGNoID0gbGluZVt0aGlzLnggLSAxXSB8fCBbdGhpcy5kZWZBdHRyLCAnICddOwoKICB3aGlsZSAocGFyYW0tLSkgbGluZVt0aGlzLngrK10gPSBjaDsKfTsKCi8vIENTSSBQcyBnICBUYWIgQ2xlYXIgKFRCQykuCi8vICAgICBQcyA9IDAgIC0+IENsZWFyIEN1cnJlbnQgQ29sdW1uIChkZWZhdWx0KS4KLy8gICAgIFBzID0gMyAgLT4gQ2xlYXIgQWxsLgovLyBQb3RlbnRpYWxseToKLy8gICBQcyA9IDIgIC0+IENsZWFyIFN0b3BzIG9uIExpbmUuCi8vICAgaHR0cDovL3Z0MTAwLm5ldC9hbm5hcmJvci9hYWEtdWcvc2VjdGlvbjYuaHRtbApUZXJtaW5hbC5wcm90b3R5cGUudGFiQ2xlYXIgPSBmdW5jdGlvbihwYXJhbXMpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF07CiAgaWYgKHBhcmFtIDw9IDApIHsKICAgIGRlbGV0ZSB0aGlzLnRhYnNbdGhpcy54XTsKICB9IGVsc2UgaWYgKHBhcmFtID09PSAzKSB7CiAgICB0aGlzLnRhYnMgPSB7fTsKICB9Cn07CgovLyBDU0kgUG0gaSAgTWVkaWEgQ29weSAoTUMpLgovLyAgICAgUHMgPSAwICAtPiBQcmludCBzY3JlZW4gKGRlZmF1bHQpLgovLyAgICAgUHMgPSA0ICAtPiBUdXJuIG9mZiBwcmludGVyIGNvbnRyb2xsZXIgbW9kZS4KLy8gICAgIFBzID0gNSAgLT4gVHVybiBvbiBwcmludGVyIGNvbnRyb2xsZXIgbW9kZS4KLy8gQ1NJID8gUG0gaQovLyAgIE1lZGlhIENvcHkgKE1DLCBERUMtc3BlY2lmaWMpLgovLyAgICAgUHMgPSAxICAtPiBQcmludCBsaW5lIGNvbnRhaW5pbmcgY3Vyc29yLgovLyAgICAgUHMgPSA0ICAtPiBUdXJuIG9mZiBhdXRvcHJpbnQgbW9kZS4KLy8gICAgIFBzID0gNSAgLT4gVHVybiBvbiBhdXRvcHJpbnQgbW9kZS4KLy8gICAgIFBzID0gMSAgMCAgLT4gUHJpbnQgY29tcG9zZWQgZGlzcGxheSwgaWdub3JlcyBERUNQRVguCi8vICAgICBQcyA9IDEgIDEgIC0+IFByaW50IGFsbCBwYWdlcy4KVGVybWluYWwucHJvdG90eXBlLm1lZGlhQ29weSA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSA+IFBzOyBQcyBtCi8vICAgU2V0IG9yIHJlc2V0IHJlc291cmNlLXZhbHVlcyB1c2VkIGJ5IHh0ZXJtIHRvIGRlY2lkZSB3aGV0aGVyCi8vICAgdG8gY29uc3RydWN0IGVzY2FwZSBzZXF1ZW5jZXMgaG9sZGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUKLy8gICBtb2RpZmllcnMgcHJlc3NlZCB3aXRoIGEgZ2l2ZW4ga2V5LiAgVGhlIGZpcnN0IHBhcmFtZXRlciBpZGVuLQovLyAgIHRpZmllcyB0aGUgcmVzb3VyY2UgdG8gc2V0L3Jlc2V0LiAgVGhlIHNlY29uZCBwYXJhbWV0ZXIgaXMgdGhlCi8vICAgdmFsdWUgdG8gYXNzaWduIHRvIHRoZSByZXNvdXJjZS4gIElmIHRoZSBzZWNvbmQgcGFyYW1ldGVyIGlzCi8vICAgb21pdHRlZCwgdGhlIHJlc291cmNlIGlzIHJlc2V0IHRvIGl0cyBpbml0aWFsIHZhbHVlLgovLyAgICAgUHMgPSAxICAtPiBtb2RpZnlDdXJzb3JLZXlzLgovLyAgICAgUHMgPSAyICAtPiBtb2RpZnlGdW5jdGlvbktleXMuCi8vICAgICBQcyA9IDQgIC0+IG1vZGlmeU90aGVyS2V5cy4KLy8gICBJZiBubyBwYXJhbWV0ZXJzIGFyZSBnaXZlbiwgYWxsIHJlc291cmNlcyBhcmUgcmVzZXQgdG8gdGhlaXIKLy8gICBpbml0aWFsIHZhbHVlcy4KVGVybWluYWwucHJvdG90eXBlLnNldFJlc291cmNlcyA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSA+IFBzIG4KLy8gICBEaXNhYmxlIG1vZGlmaWVycyB3aGljaCBtYXkgYmUgZW5hYmxlZCB2aWEgdGhlIENTSSA+IFBzOyBQcyBtCi8vICAgc2VxdWVuY2UuICBUaGlzIGNvcnJlc3BvbmRzIHRvIGEgcmVzb3VyY2UgdmFsdWUgb2YgIi0xIiwgd2hpY2gKLy8gICBjYW5ub3QgYmUgc2V0IHdpdGggdGhlIG90aGVyIHNlcXVlbmNlLiAgVGhlIHBhcmFtZXRlciBpZGVudGktCi8vICAgZmllcyB0aGUgcmVzb3VyY2UgdG8gYmUgZGlzYWJsZWQ6Ci8vICAgICBQcyA9IDEgIC0+IG1vZGlmeUN1cnNvcktleXMuCi8vICAgICBQcyA9IDIgIC0+IG1vZGlmeUZ1bmN0aW9uS2V5cy4KLy8gICAgIFBzID0gNCAgLT4gbW9kaWZ5T3RoZXJLZXlzLgovLyAgIElmIHRoZSBwYXJhbWV0ZXIgaXMgb21pdHRlZCwgbW9kaWZ5RnVuY3Rpb25LZXlzIGlzIGRpc2FibGVkLgovLyAgIFdoZW4gbW9kaWZ5RnVuY3Rpb25LZXlzIGlzIGRpc2FibGVkLCB4dGVybSB1c2VzIHRoZSBtb2RpZmllcgovLyAgIGtleXMgdG8gbWFrZSBhbiBleHRlbmRlZCBzZXF1ZW5jZSBvZiBmdW5jdGlvbnMgcmF0aGVyIHRoYW4KLy8gICBhZGRpbmcgYSBwYXJhbWV0ZXIgdG8gZWFjaCBmdW5jdGlvbiBrZXkgdG8gZGVub3RlIHRoZSBtb2RpLQovLyAgIGZpZXJzLgpUZXJtaW5hbC5wcm90b3R5cGUuZGlzYWJsZU1vZGlmaWVycyA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSA+IFBzIHAKLy8gICBTZXQgcmVzb3VyY2UgdmFsdWUgcG9pbnRlck1vZGUuICBUaGlzIGlzIHVzZWQgYnkgeHRlcm0gdG8KLy8gICBkZWNpZGUgd2hldGhlciB0byBoaWRlIHRoZSBwb2ludGVyIGN1cnNvciBhcyB0aGUgdXNlciB0eXBlcy4KLy8gICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBwYXJhbWV0ZXI6Ci8vICAgICBQcyA9IDAgIC0+IG5ldmVyIGhpZGUgdGhlIHBvaW50ZXIuCi8vICAgICBQcyA9IDEgIC0+IGhpZGUgaWYgdGhlIG1vdXNlIHRyYWNraW5nIG1vZGUgaXMgbm90IGVuYWJsZWQuCi8vICAgICBQcyA9IDIgIC0+IGFsd2F5cyBoaWRlIHRoZSBwb2ludGVyLiAgSWYgbm8gcGFyYW1ldGVyIGlzCi8vICAgICBnaXZlbiwgeHRlcm0gdXNlcyB0aGUgZGVmYXVsdCwgd2hpY2ggaXMgMSAuClRlcm1pbmFsLnByb3RvdHlwZS5zZXRQb2ludGVyTW9kZSA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSAhIHAgICBTb2Z0IHRlcm1pbmFsIHJlc2V0IChERUNTVFIpLgovLyBodHRwOi8vdnQxMDAubmV0L2RvY3MvdnQyMjAtcm0vdGFibGU0LTEwLmh0bWwKVGVybWluYWwucHJvdG90eXBlLnNvZnRSZXNldCA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHRoaXMuY3Vyc29ySGlkZGVuID0gZmFsc2U7CiAgdGhpcy5pbnNlcnRNb2RlID0gZmFsc2U7CiAgdGhpcy5vcmlnaW5Nb2RlID0gZmFsc2U7CiAgdGhpcy53cmFwYXJvdW5kTW9kZSA9IGZhbHNlOyAvLyBhdXRvd3JhcAogIHRoaXMuYXBwbGljYXRpb25LZXlwYWQgPSBmYWxzZTsgLy8gPwogIHRoaXMuYXBwbGljYXRpb25DdXJzb3IgPSBmYWxzZTsKICB0aGlzLnNjcm9sbFRvcCA9IDA7CiAgdGhpcy5zY3JvbGxCb3R0b20gPSB0aGlzLnJvd3MgLSAxOwogIHRoaXMuY3VyQXR0ciA9IHRoaXMuZGVmQXR0cjsKICB0aGlzLnggPSB0aGlzLnkgPSAwOyAvLyA/CiAgdGhpcy5jaGFyc2V0ID0gbnVsbDsKICB0aGlzLmdsZXZlbCA9IDA7IC8vID8/CiAgdGhpcy5jaGFyc2V0cyA9IFtudWxsXTsgLy8gPz8KfTsKCi8vIENTSSBQcyQgcAovLyAgIFJlcXVlc3QgQU5TSSBtb2RlIChERUNSUU0pLiAgRm9yIFZUMzAwIGFuZCB1cCwgcmVwbHkgaXMKLy8gICAgIENTSSBQczsgUG0kIHkKLy8gICB3aGVyZSBQcyBpcyB0aGUgbW9kZSBudW1iZXIgYXMgaW4gUk0sIGFuZCBQbSBpcyB0aGUgbW9kZQovLyAgIHZhbHVlOgovLyAgICAgMCAtIG5vdCByZWNvZ25pemVkCi8vICAgICAxIC0gc2V0Ci8vICAgICAyIC0gcmVzZXQKLy8gICAgIDMgLSBwZXJtYW5lbnRseSBzZXQKLy8gICAgIDQgLSBwZXJtYW5lbnRseSByZXNldApUZXJtaW5hbC5wcm90b3R5cGUucmVxdWVzdEFuc2lNb2RlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJID8gUHMkIHAKLy8gICBSZXF1ZXN0IERFQyBwcml2YXRlIG1vZGUgKERFQ1JRTSkuICBGb3IgVlQzMDAgYW5kIHVwLCByZXBseSBpcwovLyAgICAgQ1NJID8gUHM7IFBtJCBwCi8vICAgd2hlcmUgUHMgaXMgdGhlIG1vZGUgbnVtYmVyIGFzIGluIERFQ1NFVCwgUG0gaXMgdGhlIG1vZGUgdmFsdWUKLy8gICBhcyBpbiB0aGUgQU5TSSBERUNSUU0uClRlcm1pbmFsLnByb3RvdHlwZS5yZXF1ZXN0UHJpdmF0ZU1vZGUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgUHMgOyBQcyAiIHAKLy8gICBTZXQgY29uZm9ybWFuY2UgbGV2ZWwgKERFQ1NDTCkuICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBmaXJzdAovLyAgIHBhcmFtZXRlcjoKLy8gICAgIFBzID0gNiAxICAtPiBWVDEwMC4KLy8gICAgIFBzID0gNiAyICAtPiBWVDIwMC4KLy8gICAgIFBzID0gNiAzICAtPiBWVDMwMC4KLy8gICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBzZWNvbmQgcGFyYW1ldGVyOgovLyAgICAgUHMgPSAwICAtPiA4LWJpdCBjb250cm9scy4KLy8gICAgIFBzID0gMSAgLT4gNy1iaXQgY29udHJvbHMgKGFsd2F5cyBzZXQgZm9yIFZUMTAwKS4KLy8gICAgIFBzID0gMiAgLT4gOC1iaXQgY29udHJvbHMuClRlcm1pbmFsLnByb3RvdHlwZS5zZXRDb25mb3JtYW5jZUxldmVsID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzIHEgIExvYWQgTEVEcyAoREVDTEwpLgovLyAgICAgUHMgPSAwICAtPiBDbGVhciBhbGwgTEVEUyAoZGVmYXVsdCkuCi8vICAgICBQcyA9IDEgIC0+IExpZ2h0IE51bSBMb2NrLgovLyAgICAgUHMgPSAyICAtPiBMaWdodCBDYXBzIExvY2suCi8vICAgICBQcyA9IDMgIC0+IExpZ2h0IFNjcm9sbCBMb2NrLgovLyAgICAgUHMgPSAyICAxICAtPiBFeHRpbmd1aXNoIE51bSBMb2NrLgovLyAgICAgUHMgPSAyICAyICAtPiBFeHRpbmd1aXNoIENhcHMgTG9jay4KLy8gICAgIFBzID0gMiAgMyAgLT4gRXh0aW5ndWlzaCBTY3JvbGwgTG9jay4KVGVybWluYWwucHJvdG90eXBlLmxvYWRMRURzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzIFNQIHEKLy8gICBTZXQgY3Vyc29yIHN0eWxlIChERUNTQ1VTUiwgVlQ1MjApLgovLyAgICAgUHMgPSAwICAtPiBibGlua2luZyBibG9jay4KLy8gICAgIFBzID0gMSAgLT4gYmxpbmtpbmcgYmxvY2sgKGRlZmF1bHQpLgovLyAgICAgUHMgPSAyICAtPiBzdGVhZHkgYmxvY2suCi8vICAgICBQcyA9IDMgIC0+IGJsaW5raW5nIHVuZGVybGluZS4KLy8gICAgIFBzID0gNCAgLT4gc3RlYWR5IHVuZGVybGluZS4KVGVybWluYWwucHJvdG90eXBlLnNldEN1cnNvclN0eWxlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzICIgcQovLyAgIFNlbGVjdCBjaGFyYWN0ZXIgcHJvdGVjdGlvbiBhdHRyaWJ1dGUgKERFQ1NDQSkuICBWYWxpZCB2YWx1ZXMKLy8gICBmb3IgdGhlIHBhcmFtZXRlcjoKLy8gICAgIFBzID0gMCAgLT4gREVDU0VEIGFuZCBERUNTRUwgY2FuIGVyYXNlIChkZWZhdWx0KS4KLy8gICAgIFBzID0gMSAgLT4gREVDU0VEIGFuZCBERUNTRUwgY2Fubm90IGVyYXNlLgovLyAgICAgUHMgPSAyICAtPiBERUNTRUQgYW5kIERFQ1NFTCBjYW4gZXJhc2UuClRlcm1pbmFsLnByb3RvdHlwZS5zZXRDaGFyUHJvdGVjdGlvbkF0dHIgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgPyBQbSByCi8vICAgUmVzdG9yZSBERUMgUHJpdmF0ZSBNb2RlIFZhbHVlcy4gIFRoZSB2YWx1ZSBvZiBQcyBwcmV2aW91c2x5Ci8vICAgc2F2ZWQgaXMgcmVzdG9yZWQuICBQcyB2YWx1ZXMgYXJlIHRoZSBzYW1lIGFzIGZvciBERUNTRVQuClRlcm1pbmFsLnByb3RvdHlwZS5yZXN0b3JlUHJpdmF0ZVZhbHVlcyA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSBQdDsgUGw7IFBiOyBQcjsgUHMkIHIKLy8gICBDaGFuZ2UgQXR0cmlidXRlcyBpbiBSZWN0YW5ndWxhciBBcmVhIChERUNDQVJBKSwgVlQ0MDAgYW5kIHVwLgovLyAgICAgUHQ7IFBsOyBQYjsgUHIgZGVub3RlcyB0aGUgcmVjdGFuZ2xlLgovLyAgICAgUHMgZGVub3RlcyB0aGUgU0dSIGF0dHJpYnV0ZXMgdG8gY2hhbmdlOiAwLCAxLCA0LCA1LCA3LgovLyBOT1RFOiB4dGVybSBkb2Vzbid0IGVuYWJsZSB0aGlzIGNvZGUgYnkgZGVmYXVsdC4KVGVybWluYWwucHJvdG90eXBlLnNldEF0dHJJblJlY3RhbmdsZSA9IGZ1bmN0aW9uKHBhcmFtcykgewogIHZhciB0ID0gcGFyYW1zWzBdCiAgICAsIGwgPSBwYXJhbXNbMV0KICAgICwgYiA9IHBhcmFtc1syXQogICAgLCByID0gcGFyYW1zWzNdCiAgICAsIGF0dHIgPSBwYXJhbXNbNF07CgogIHZhciBsaW5lCiAgICAsIGk7CgogIGZvciAoOyB0IDwgYiArIDE7IHQrKykgewogICAgbGluZSA9IHRoaXMubGluZXNbdGhpcy55YmFzZSArIHRdOwogICAgZm9yIChpID0gbDsgaSA8IHI7IGkrKykgewogICAgICBsaW5lW2ldID0gW2F0dHIsIGxpbmVbaV1bMV1dOwogICAgfQogIH0KCiAgLy8gdGhpcy5tYXhSYW5nZSgpOwogIHRoaXMudXBkYXRlUmFuZ2UocGFyYW1zWzBdKTsKICB0aGlzLnVwZGF0ZVJhbmdlKHBhcmFtc1syXSk7Cn07CgovLyBDU0kgPyBQbSBzCi8vICAgU2F2ZSBERUMgUHJpdmF0ZSBNb2RlIFZhbHVlcy4gIFBzIHZhbHVlcyBhcmUgdGhlIHNhbWUgYXMgZm9yCi8vICAgREVDU0VULgpUZXJtaW5hbC5wcm90b3R5cGUuc2F2ZVByaXZhdGVWYWx1ZXMgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgUHMgOyBQcyA7IFBzIHQKLy8gICBXaW5kb3cgbWFuaXB1bGF0aW9uIChmcm9tIGR0dGVybSwgYXMgd2VsbCBhcyBleHRlbnNpb25zKS4KLy8gICBUaGVzZSBjb250cm9scyBtYXkgYmUgZGlzYWJsZWQgdXNpbmcgdGhlIGFsbG93V2luZG93T3BzCi8vICAgcmVzb3VyY2UuICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBmaXJzdCAoYW5kIGFueSBhZGRpdGlvbmFsCi8vICAgcGFyYW1ldGVycykgYXJlOgovLyAgICAgUHMgPSAxICAtPiBEZS1pY29uaWZ5IHdpbmRvdy4KLy8gICAgIFBzID0gMiAgLT4gSWNvbmlmeSB3aW5kb3cuCi8vICAgICBQcyA9IDMgIDsgIHggOyAgeSAtPiBNb3ZlIHdpbmRvdyB0byBbeCwgeV0uCi8vICAgICBQcyA9IDQgIDsgIGhlaWdodCA7ICB3aWR0aCAtPiBSZXNpemUgdGhlIHh0ZXJtIHdpbmRvdyB0bwovLyAgICAgaGVpZ2h0IGFuZCB3aWR0aCBpbiBwaXhlbHMuCi8vICAgICBQcyA9IDUgIC0+IFJhaXNlIHRoZSB4dGVybSB3aW5kb3cgdG8gdGhlIGZyb250IG9mIHRoZSBzdGFjay0KLy8gICAgIGluZyBvcmRlci4KLy8gICAgIFBzID0gNiAgLT4gTG93ZXIgdGhlIHh0ZXJtIHdpbmRvdyB0byB0aGUgYm90dG9tIG9mIHRoZQovLyAgICAgc3RhY2tpbmcgb3JkZXIuCi8vICAgICBQcyA9IDcgIC0+IFJlZnJlc2ggdGhlIHh0ZXJtIHdpbmRvdy4KLy8gICAgIFBzID0gOCAgOyAgaGVpZ2h0IDsgIHdpZHRoIC0+IFJlc2l6ZSB0aGUgdGV4dCBhcmVhIHRvCi8vICAgICBbaGVpZ2h0O3dpZHRoXSBpbiBjaGFyYWN0ZXJzLgovLyAgICAgUHMgPSA5ICA7ICAwICAtPiBSZXN0b3JlIG1heGltaXplZCB3aW5kb3cuCi8vICAgICBQcyA9IDkgIDsgIDEgIC0+IE1heGltaXplIHdpbmRvdyAoaS5lLiwgcmVzaXplIHRvIHNjcmVlbgovLyAgICAgc2l6ZSkuCi8vICAgICBQcyA9IDEgMCAgOyAgMCAgLT4gVW5kbyBmdWxsLXNjcmVlbiBtb2RlLgovLyAgICAgUHMgPSAxIDAgIDsgIDEgIC0+IENoYW5nZSB0byBmdWxsLXNjcmVlbi4KLy8gICAgIFBzID0gMSAxICAtPiBSZXBvcnQgeHRlcm0gd2luZG93IHN0YXRlLiAgSWYgdGhlIHh0ZXJtIHdpbmRvdwovLyAgICAgaXMgb3BlbiAobm9uLWljb25pZmllZCksIGl0IHJldHVybnMgQ1NJIDEgdCAuICBJZiB0aGUgeHRlcm0KLy8gICAgIHdpbmRvdyBpcyBpY29uaWZpZWQsIGl0IHJldHVybnMgQ1NJIDIgdCAuCi8vICAgICBQcyA9IDEgMyAgLT4gUmVwb3J0IHh0ZXJtIHdpbmRvdyBwb3NpdGlvbi4gIFJlc3VsdCBpcyBDU0kgMwovLyAgICAgOyB4IDsgeSB0Ci8vICAgICBQcyA9IDEgNCAgLT4gUmVwb3J0IHh0ZXJtIHdpbmRvdyBpbiBwaXhlbHMuICBSZXN1bHQgaXMgQ1NJCi8vICAgICA0ICA7ICBoZWlnaHQgOyAgd2lkdGggdAovLyAgICAgUHMgPSAxIDggIC0+IFJlcG9ydCB0aGUgc2l6ZSBvZiB0aGUgdGV4dCBhcmVhIGluIGNoYXJhY3RlcnMuCi8vICAgICBSZXN1bHQgaXMgQ1NJICA4ICA7ICBoZWlnaHQgOyAgd2lkdGggdAovLyAgICAgUHMgPSAxIDkgIC0+IFJlcG9ydCB0aGUgc2l6ZSBvZiB0aGUgc2NyZWVuIGluIGNoYXJhY3RlcnMuCi8vICAgICBSZXN1bHQgaXMgQ1NJICA5ICA7ICBoZWlnaHQgOyAgd2lkdGggdAovLyAgICAgUHMgPSAyIDAgIC0+IFJlcG9ydCB4dGVybSB3aW5kb3cncyBpY29uIGxhYmVsLiAgUmVzdWx0IGlzCi8vICAgICBPU0MgIEwgIGxhYmVsIFNUCi8vICAgICBQcyA9IDIgMSAgLT4gUmVwb3J0IHh0ZXJtIHdpbmRvdydzIHRpdGxlLiAgUmVzdWx0IGlzIE9TQyAgbAovLyAgICAgbGFiZWwgU1QKLy8gICAgIFBzID0gMiAyICA7ICAwICAtPiBTYXZlIHh0ZXJtIGljb24gYW5kIHdpbmRvdyB0aXRsZSBvbgovLyAgICAgc3RhY2suCi8vICAgICBQcyA9IDIgMiAgOyAgMSAgLT4gU2F2ZSB4dGVybSBpY29uIHRpdGxlIG9uIHN0YWNrLgovLyAgICAgUHMgPSAyIDIgIDsgIDIgIC0+IFNhdmUgeHRlcm0gd2luZG93IHRpdGxlIG9uIHN0YWNrLgovLyAgICAgUHMgPSAyIDMgIDsgIDAgIC0+IFJlc3RvcmUgeHRlcm0gaWNvbiBhbmQgd2luZG93IHRpdGxlIGZyb20KLy8gICAgIHN0YWNrLgovLyAgICAgUHMgPSAyIDMgIDsgIDEgIC0+IFJlc3RvcmUgeHRlcm0gaWNvbiB0aXRsZSBmcm9tIHN0YWNrLgovLyAgICAgUHMgPSAyIDMgIDsgIDIgIC0+IFJlc3RvcmUgeHRlcm0gd2luZG93IHRpdGxlIGZyb20gc3RhY2suCi8vICAgICBQcyA+PSAyIDQgIC0+IFJlc2l6ZSB0byBQcyBsaW5lcyAoREVDU0xQUCkuClRlcm1pbmFsLnByb3RvdHlwZS5tYW5pcHVsYXRlV2luZG93ID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFB0OyBQbDsgUGI7IFByOyBQcyQgdAovLyAgIFJldmVyc2UgQXR0cmlidXRlcyBpbiBSZWN0YW5ndWxhciBBcmVhIChERUNSQVJBKSwgVlQ0MDAgYW5kCi8vICAgdXAuCi8vICAgICBQdDsgUGw7IFBiOyBQciBkZW5vdGVzIHRoZSByZWN0YW5nbGUuCi8vICAgICBQcyBkZW5vdGVzIHRoZSBhdHRyaWJ1dGVzIHRvIHJldmVyc2UsIGkuZS4sICAxLCA0LCA1LCA3LgovLyBOT1RFOiB4dGVybSBkb2Vzbid0IGVuYWJsZSB0aGlzIGNvZGUgYnkgZGVmYXVsdC4KVGVybWluYWwucHJvdG90eXBlLnJldmVyc2VBdHRySW5SZWN0YW5nbGUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgPiBQczsgUHMgdAovLyAgIFNldCBvbmUgb3IgbW9yZSBmZWF0dXJlcyBvZiB0aGUgdGl0bGUgbW9kZXMuICBFYWNoIHBhcmFtZXRlcgovLyAgIGVuYWJsZXMgYSBzaW5nbGUgZmVhdHVyZS4KLy8gICAgIFBzID0gMCAgLT4gU2V0IHdpbmRvdy9pY29uIGxhYmVscyB1c2luZyBoZXhhZGVjaW1hbC4KLy8gICAgIFBzID0gMSAgLT4gUXVlcnkgd2luZG93L2ljb24gbGFiZWxzIHVzaW5nIGhleGFkZWNpbWFsLgovLyAgICAgUHMgPSAyICAtPiBTZXQgd2luZG93L2ljb24gbGFiZWxzIHVzaW5nIFVURi04LgovLyAgICAgUHMgPSAzICAtPiBRdWVyeSB3aW5kb3cvaWNvbiBsYWJlbHMgdXNpbmcgVVRGLTguICAoU2VlIGRpcy0KLy8gICAgIGN1c3Npb24gb2YgIlRpdGxlIE1vZGVzIikKVGVybWluYWwucHJvdG90eXBlLnNldFRpdGxlTW9kZUZlYXR1cmUgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgUHMgU1AgdAovLyAgIFNldCB3YXJuaW5nLWJlbGwgdm9sdW1lIChERUNTV0JWLCBWVDUyMCkuCi8vICAgICBQcyA9IDAgIG9yIDEgIC0+IG9mZi4KLy8gICAgIFBzID0gMiAsIDMgIG9yIDQgIC0+IGxvdy4KLy8gICAgIFBzID0gNSAsIDYgLCA3ICwgb3IgOCAgLT4gaGlnaC4KVGVybWluYWwucHJvdG90eXBlLnNldFdhcm5pbmdCZWxsVm9sdW1lID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzIFNQIHUKLy8gICBTZXQgbWFyZ2luLWJlbGwgdm9sdW1lIChERUNTTUJWLCBWVDUyMCkuCi8vICAgICBQcyA9IDEgIC0+IG9mZi4KLy8gICAgIFBzID0gMiAsIDMgIG9yIDQgIC0+IGxvdy4KLy8gICAgIFBzID0gMCAsIDUgLCA2ICwgNyAsIG9yIDggIC0+IGhpZ2guClRlcm1pbmFsLnByb3RvdHlwZS5zZXRNYXJnaW5CZWxsVm9sdW1lID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFB0OyBQbDsgUGI7IFByOyBQcDsgUHQ7IFBsOyBQcCQgdgovLyAgIENvcHkgUmVjdGFuZ3VsYXIgQXJlYSAoREVDQ1JBLCBWVDQwMCBhbmQgdXApLgovLyAgICAgUHQ7IFBsOyBQYjsgUHIgZGVub3RlcyB0aGUgcmVjdGFuZ2xlLgovLyAgICAgUHAgZGVub3RlcyB0aGUgc291cmNlIHBhZ2UuCi8vICAgICBQdDsgUGwgZGVub3RlcyB0aGUgdGFyZ2V0IGxvY2F0aW9uLgovLyAgICAgUHAgZGVub3RlcyB0aGUgdGFyZ2V0IHBhZ2UuCi8vIE5PVEU6IHh0ZXJtIGRvZXNuJ3QgZW5hYmxlIHRoaXMgY29kZSBieSBkZWZhdWx0LgpUZXJtaW5hbC5wcm90b3R5cGUuY29weVJlY3RhbmdsZSA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSBQdCA7IFBsIDsgUGIgOyBQciAnIHcKLy8gICBFbmFibGUgRmlsdGVyIFJlY3RhbmdsZSAoREVDRUZSKSwgVlQ0MjAgYW5kIHVwLgovLyAgIFBhcmFtZXRlcnMgYXJlIFt0b3A7bGVmdDtib3R0b207cmlnaHRdLgovLyAgIERlZmluZXMgdGhlIGNvb3JkaW5hdGVzIG9mIGEgZmlsdGVyIHJlY3RhbmdsZSBhbmQgYWN0aXZhdGVzCi8vICAgaXQuICBBbnl0aW1lIHRoZSBsb2NhdG9yIGlzIGRldGVjdGVkIG91dHNpZGUgb2YgdGhlIGZpbHRlcgovLyAgIHJlY3RhbmdsZSwgYW4gb3V0c2lkZSByZWN0YW5nbGUgZXZlbnQgaXMgZ2VuZXJhdGVkIGFuZCB0aGUKLy8gICByZWN0YW5nbGUgaXMgZGlzYWJsZWQuICBGaWx0ZXIgcmVjdGFuZ2xlcyBhcmUgYWx3YXlzIHRyZWF0ZWQKLy8gICBhcyAib25lLXNob3QiIGV2ZW50cy4gIEFueSBwYXJhbWV0ZXJzIHRoYXQgYXJlIG9taXR0ZWQgZGVmYXVsdAovLyAgIHRvIHRoZSBjdXJyZW50IGxvY2F0b3IgcG9zaXRpb24uICBJZiBhbGwgcGFyYW1ldGVycyBhcmUgb21pdC0KLy8gICB0ZWQsIGFueSBsb2NhdG9yIG1vdGlvbiB3aWxsIGJlIHJlcG9ydGVkLiAgREVDRUxSIGFsd2F5cyBjYW4tCi8vICAgY2VscyBhbnkgcHJldm91cyByZWN0YW5nbGUgZGVmaW5pdGlvbi4KVGVybWluYWwucHJvdG90eXBlLmVuYWJsZUZpbHRlclJlY3RhbmdsZSA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSBQcyB4ICBSZXF1ZXN0IFRlcm1pbmFsIFBhcmFtZXRlcnMgKERFQ1JFUVRQQVJNKS4KLy8gICBpZiBQcyBpcyBhICIwIiAoZGVmYXVsdCkgb3IgIjEiLCBhbmQgeHRlcm0gaXMgZW11bGF0aW5nIFZUMTAwLAovLyAgIHRoZSBjb250cm9sIHNlcXVlbmNlIGVsaWNpdHMgYSByZXNwb25zZSBvZiB0aGUgc2FtZSBmb3JtIHdob3NlCi8vICAgcGFyYW1ldGVycyBkZXNjcmliZSB0aGUgdGVybWluYWw6Ci8vICAgICBQcyAtPiB0aGUgZ2l2ZW4gUHMgaW5jcmVtZW50ZWQgYnkgMi4KLy8gICAgIFBuID0gMSAgPC0gbm8gcGFyaXR5LgovLyAgICAgUG4gPSAxICA8LSBlaWdodCBiaXRzLgovLyAgICAgUG4gPSAxICA8LSAyICA4ICB0cmFuc21pdCAzOC40ayBiYXVkLgovLyAgICAgUG4gPSAxICA8LSAyICA4ICByZWNlaXZlIDM4LjRrIGJhdWQuCi8vICAgICBQbiA9IDEgIDwtIGNsb2NrIG11bHRpcGxpZXIuCi8vICAgICBQbiA9IDAgIDwtIFNUUCBmbGFncy4KVGVybWluYWwucHJvdG90eXBlLnJlcXVlc3RQYXJhbWV0ZXJzID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzIHggIFNlbGVjdCBBdHRyaWJ1dGUgQ2hhbmdlIEV4dGVudCAoREVDU0FDRSkuCi8vICAgICBQcyA9IDAgIC0+IGZyb20gc3RhcnQgdG8gZW5kIHBvc2l0aW9uLCB3cmFwcGVkLgovLyAgICAgUHMgPSAxICAtPiBmcm9tIHN0YXJ0IHRvIGVuZCBwb3NpdGlvbiwgd3JhcHBlZC4KLy8gICAgIFBzID0gMiAgLT4gcmVjdGFuZ2xlIChleGFjdCkuClRlcm1pbmFsLnByb3RvdHlwZS5zZWxlY3RDaGFuZ2VFeHRlbnQgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgUGM7IFB0OyBQbDsgUGI7IFByJCB4Ci8vICAgRmlsbCBSZWN0YW5ndWxhciBBcmVhIChERUNGUkEpLCBWVDQyMCBhbmQgdXAuCi8vICAgICBQYyBpcyB0aGUgY2hhcmFjdGVyIHRvIHVzZS4KLy8gICAgIFB0OyBQbDsgUGI7IFByIGRlbm90ZXMgdGhlIHJlY3RhbmdsZS4KLy8gTk9URTogeHRlcm0gZG9lc24ndCBlbmFibGUgdGhpcyBjb2RlIGJ5IGRlZmF1bHQuClRlcm1pbmFsLnByb3RvdHlwZS5maWxsUmVjdGFuZ2xlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIGNoID0gcGFyYW1zWzBdCiAgICAsIHQgPSBwYXJhbXNbMV0KICAgICwgbCA9IHBhcmFtc1syXQogICAgLCBiID0gcGFyYW1zWzNdCiAgICAsIHIgPSBwYXJhbXNbNF07CgogIHZhciBsaW5lCiAgICAsIGk7CgogIGZvciAoOyB0IDwgYiArIDE7IHQrKykgewogICAgbGluZSA9IHRoaXMubGluZXNbdGhpcy55YmFzZSArIHRdOwogICAgZm9yIChpID0gbDsgaSA8IHI7IGkrKykgewogICAgICBsaW5lW2ldID0gW2xpbmVbaV1bMF0sIFN0cmluZy5mcm9tQ2hhckNvZGUoY2gpXTsKICAgIH0KICB9CgogIC8vIHRoaXMubWF4UmFuZ2UoKTsKICB0aGlzLnVwZGF0ZVJhbmdlKHBhcmFtc1sxXSk7CiAgdGhpcy51cGRhdGVSYW5nZShwYXJhbXNbM10pOwp9OwoKLy8gQ1NJIFBzIDsgUHUgJyB6Ci8vICAgRW5hYmxlIExvY2F0b3IgUmVwb3J0aW5nIChERUNFTFIpLgovLyAgIFZhbGlkIHZhbHVlcyBmb3IgdGhlIGZpcnN0IHBhcmFtZXRlcjoKLy8gICAgIFBzID0gMCAgLT4gTG9jYXRvciBkaXNhYmxlZCAoZGVmYXVsdCkuCi8vICAgICBQcyA9IDEgIC0+IExvY2F0b3IgZW5hYmxlZC4KLy8gICAgIFBzID0gMiAgLT4gTG9jYXRvciBlbmFibGVkIGZvciBvbmUgcmVwb3J0LCB0aGVuIGRpc2FibGVkLgovLyAgIFRoZSBzZWNvbmQgcGFyYW1ldGVyIHNwZWNpZmllcyB0aGUgY29vcmRpbmF0ZSB1bml0IGZvciBsb2NhdG9yCi8vICAgcmVwb3J0cy4KLy8gICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBzZWNvbmQgcGFyYW1ldGVyOgovLyAgICAgUHUgPSAwICA8LSBvciBvbWl0dGVkIC0+IGRlZmF1bHQgdG8gY2hhcmFjdGVyIGNlbGxzLgovLyAgICAgUHUgPSAxICA8LSBkZXZpY2UgcGh5c2ljYWwgcGl4ZWxzLgovLyAgICAgUHUgPSAyICA8LSBjaGFyYWN0ZXIgY2VsbHMuClRlcm1pbmFsLnByb3RvdHlwZS5lbmFibGVMb2NhdG9yUmVwb3J0aW5nID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHZhbCA9IHBhcmFtc1swXSA+IDA7CiAgLy90aGlzLm1vdXNlRXZlbnRzID0gdmFsOwogIC8vdGhpcy5kZWNMb2NhdG9yID0gdmFsOwp9OwoKLy8gQ1NJIFB0OyBQbDsgUGI7IFByJCB6Ci8vICAgRXJhc2UgUmVjdGFuZ3VsYXIgQXJlYSAoREVDRVJBKSwgVlQ0MDAgYW5kIHVwLgovLyAgICAgUHQ7IFBsOyBQYjsgUHIgZGVub3RlcyB0aGUgcmVjdGFuZ2xlLgovLyBOT1RFOiB4dGVybSBkb2Vzbid0IGVuYWJsZSB0aGlzIGNvZGUgYnkgZGVmYXVsdC4KVGVybWluYWwucHJvdG90eXBlLmVyYXNlUmVjdGFuZ2xlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIHQgPSBwYXJhbXNbMF0KICAgICwgbCA9IHBhcmFtc1sxXQogICAgLCBiID0gcGFyYW1zWzJdCiAgICAsIHIgPSBwYXJhbXNbM107CgogIHZhciBsaW5lCiAgICAsIGkKICAgICwgY2g7CgogIGNoID0gW3RoaXMuZXJhc2VBdHRyKCksICcgJ107IC8vIHh0ZXJtPwoKICBmb3IgKDsgdCA8IGIgKyAxOyB0KyspIHsKICAgIGxpbmUgPSB0aGlzLmxpbmVzW3RoaXMueWJhc2UgKyB0XTsKICAgIGZvciAoaSA9IGw7IGkgPCByOyBpKyspIHsKICAgICAgbGluZVtpXSA9IGNoOwogICAgfQogIH0KCiAgLy8gdGhpcy5tYXhSYW5nZSgpOwogIHRoaXMudXBkYXRlUmFuZ2UocGFyYW1zWzBdKTsKICB0aGlzLnVwZGF0ZVJhbmdlKHBhcmFtc1syXSk7Cn07CgovLyBDU0kgUG0gJyB7Ci8vICAgU2VsZWN0IExvY2F0b3IgRXZlbnRzIChERUNTTEUpLgovLyAgIFZhbGlkIHZhbHVlcyBmb3IgdGhlIGZpcnN0IChhbmQgYW55IGFkZGl0aW9uYWwgcGFyYW1ldGVycykKLy8gICBhcmU6Ci8vICAgICBQcyA9IDAgIC0+IG9ubHkgcmVzcG9uZCB0byBleHBsaWNpdCBob3N0IHJlcXVlc3RzIChERUNSUUxQKS4KLy8gICAgICAgICAgICAgICAgKFRoaXMgaXMgZGVmYXVsdCkuICBJdCBhbHNvIGNhbmNlbHMgYW55IGZpbHRlcgovLyAgIHJlY3RhbmdsZS4KLy8gICAgIFBzID0gMSAgLT4gcmVwb3J0IGJ1dHRvbiBkb3duIHRyYW5zaXRpb25zLgovLyAgICAgUHMgPSAyICAtPiBkbyBub3QgcmVwb3J0IGJ1dHRvbiBkb3duIHRyYW5zaXRpb25zLgovLyAgICAgUHMgPSAzICAtPiByZXBvcnQgYnV0dG9uIHVwIHRyYW5zaXRpb25zLgovLyAgICAgUHMgPSA0ICAtPiBkbyBub3QgcmVwb3J0IGJ1dHRvbiB1cCB0cmFuc2l0aW9ucy4KVGVybWluYWwucHJvdG90eXBlLnNldExvY2F0b3JFdmVudHMgPSBmdW5jdGlvbihwYXJhbXMpIHsKICA7Cn07CgovLyBDU0kgUHQ7IFBsOyBQYjsgUHIkIHsKLy8gICBTZWxlY3RpdmUgRXJhc2UgUmVjdGFuZ3VsYXIgQXJlYSAoREVDU0VSQSksIFZUNDAwIGFuZCB1cC4KLy8gICAgIFB0OyBQbDsgUGI7IFByIGRlbm90ZXMgdGhlIHJlY3RhbmdsZS4KVGVybWluYWwucHJvdG90eXBlLnNlbGVjdGl2ZUVyYXNlUmVjdGFuZ2xlID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgOwp9OwoKLy8gQ1NJIFBzICcgfAovLyAgIFJlcXVlc3QgTG9jYXRvciBQb3NpdGlvbiAoREVDUlFMUCkuCi8vICAgVmFsaWQgdmFsdWVzIGZvciB0aGUgcGFyYW1ldGVyIGFyZToKLy8gICAgIFBzID0gMCAsIDEgb3Igb21pdHRlZCAtPiB0cmFuc21pdCBhIHNpbmdsZSBERUNMUlAgbG9jYXRvcgovLyAgICAgcmVwb3J0LgoKLy8gICBJZiBMb2NhdG9yIFJlcG9ydGluZyBoYXMgYmVlbiBlbmFibGVkIGJ5IGEgREVDRUxSLCB4dGVybSB3aWxsCi8vICAgcmVzcG9uZCB3aXRoIGEgREVDTFJQIExvY2F0b3IgUmVwb3J0LiAgVGhpcyByZXBvcnQgaXMgYWxzbwovLyAgIGdlbmVyYXRlZCBvbiBidXR0b24gdXAgYW5kIGRvd24gZXZlbnRzIGlmIHRoZXkgaGF2ZSBiZWVuCi8vICAgZW5hYmxlZCB3aXRoIGEgREVDU0xFLCBvciB3aGVuIHRoZSBsb2NhdG9yIGlzIGRldGVjdGVkIG91dHNpZGUKLy8gICBvZiBhIGZpbHRlciByZWN0YW5nbGUsIGlmIGZpbHRlciByZWN0YW5nbGVzIGhhdmUgYmVlbiBlbmFibGVkCi8vICAgd2l0aCBhIERFQ0VGUi4KCi8vICAgICAtPiBDU0kgUGUgOyBQYiA7IFByIDsgUGMgOyBQcCAmICB3CgovLyAgIFBhcmFtZXRlcnMgYXJlIFtldmVudDtidXR0b247cm93O2NvbHVtbjtwYWdlXS4KLy8gICBWYWxpZCB2YWx1ZXMgZm9yIHRoZSBldmVudDoKLy8gICAgIFBlID0gMCAgLT4gbG9jYXRvciB1bmF2YWlsYWJsZSAtIG5vIG90aGVyIHBhcmFtZXRlcnMgc2VudC4KLy8gICAgIFBlID0gMSAgLT4gcmVxdWVzdCAtIHh0ZXJtIHJlY2VpdmVkIGEgREVDUlFMUC4KLy8gICAgIFBlID0gMiAgLT4gbGVmdCBidXR0b24gZG93bi4KLy8gICAgIFBlID0gMyAgLT4gbGVmdCBidXR0b24gdXAuCi8vICAgICBQZSA9IDQgIC0+IG1pZGRsZSBidXR0b24gZG93bi4KLy8gICAgIFBlID0gNSAgLT4gbWlkZGxlIGJ1dHRvbiB1cC4KLy8gICAgIFBlID0gNiAgLT4gcmlnaHQgYnV0dG9uIGRvd24uCi8vICAgICBQZSA9IDcgIC0+IHJpZ2h0IGJ1dHRvbiB1cC4KLy8gICAgIFBlID0gOCAgLT4gTTQgYnV0dG9uIGRvd24uCi8vICAgICBQZSA9IDkgIC0+IE00IGJ1dHRvbiB1cC4KLy8gICAgIFBlID0gMSAwICAtPiBsb2NhdG9yIG91dHNpZGUgZmlsdGVyIHJlY3RhbmdsZS4KLy8gICBgYGJ1dHRvbicnIHBhcmFtZXRlciBpcyBhIGJpdG1hc2sgaW5kaWNhdGluZyB3aGljaCBidXR0b25zIGFyZQovLyAgICAgcHJlc3NlZDoKLy8gICAgIFBiID0gMCAgPC0gbm8gYnV0dG9ucyBkb3duLgovLyAgICAgUGIgJiAxICA8LSByaWdodCBidXR0b24gZG93bi4KLy8gICAgIFBiICYgMiAgPC0gbWlkZGxlIGJ1dHRvbiBkb3duLgovLyAgICAgUGIgJiA0ICA8LSBsZWZ0IGJ1dHRvbiBkb3duLgovLyAgICAgUGIgJiA4ICA8LSBNNCBidXR0b24gZG93bi4KLy8gICBgYHJvdycnIGFuZCBgYGNvbHVtbicnIHBhcmFtZXRlcnMgYXJlIHRoZSBjb29yZGluYXRlcyBvZiB0aGUKLy8gICAgIGxvY2F0b3IgcG9zaXRpb24gaW4gdGhlIHh0ZXJtIHdpbmRvdywgZW5jb2RlZCBhcyBBU0NJSSBkZWNpLQovLyAgICAgbWFsLgovLyAgIFRoZSBgYHBhZ2UnJyBwYXJhbWV0ZXIgaXMgbm90IHVzZWQgYnkgeHRlcm0sIGFuZCB3aWxsIGJlIG9taXQtCi8vICAgdGVkLgpUZXJtaW5hbC5wcm90b3R5cGUucmVxdWVzdExvY2F0b3JQb3NpdGlvbiA9IGZ1bmN0aW9uKHBhcmFtcykgewogIDsKfTsKCi8vIENTSSBQIG0gU1AgfQovLyBJbnNlcnQgUCBzIENvbHVtbihzKSAoZGVmYXVsdCA9IDEpIChERUNJQyksIFZUNDIwIGFuZCB1cC4KLy8gTk9URTogeHRlcm0gZG9lc24ndCBlbmFibGUgdGhpcyBjb2RlIGJ5IGRlZmF1bHQuClRlcm1pbmFsLnByb3RvdHlwZS5pbnNlcnRDb2x1bW5zID0gZnVuY3Rpb24oKSB7CiAgdmFyIHBhcmFtID0gcGFyYW1zWzBdCiAgICAsIGwgPSB0aGlzLnliYXNlICsgdGhpcy5yb3dzCiAgICAsIGNoID0gW3RoaXMuZXJhc2VBdHRyKCksICcgJ10gLy8geHRlcm0/CiAgICAsIGk7CgogIHdoaWxlIChwYXJhbS0tKSB7CiAgICBmb3IgKGkgPSB0aGlzLnliYXNlOyBpIDwgbDsgaSsrKSB7CiAgICAgIHRoaXMubGluZXNbaV0uc3BsaWNlKHRoaXMueCArIDEsIDAsIGNoKTsKICAgICAgdGhpcy5saW5lc1tpXS5wb3AoKTsKICAgIH0KICB9CgogIHRoaXMubWF4UmFuZ2UoKTsKfTsKCi8vIENTSSBQIG0gU1AgfgovLyBEZWxldGUgUCBzIENvbHVtbihzKSAoZGVmYXVsdCA9IDEpIChERUNEQyksIFZUNDIwIGFuZCB1cAovLyBOT1RFOiB4dGVybSBkb2Vzbid0IGVuYWJsZSB0aGlzIGNvZGUgYnkgZGVmYXVsdC4KVGVybWluYWwucHJvdG90eXBlLmRlbGV0ZUNvbHVtbnMgPSBmdW5jdGlvbigpIHsKICB2YXIgcGFyYW0gPSBwYXJhbXNbMF0KICAgICwgbCA9IHRoaXMueWJhc2UgKyB0aGlzLnJvd3MKICAgICwgY2ggPSBbdGhpcy5lcmFzZUF0dHIoKSwgJyAnXSAvLyB4dGVybT8KICAgICwgaTsKCiAgd2hpbGUgKHBhcmFtLS0pIHsKICAgIGZvciAoaSA9IHRoaXMueWJhc2U7IGkgPCBsOyBpKyspIHsKICAgICAgdGhpcy5saW5lc1tpXS5zcGxpY2UodGhpcy54LCAxKTsKICAgICAgdGhpcy5saW5lc1tpXS5wdXNoKGNoKTsKICAgIH0KICB9CgogIHRoaXMubWF4UmFuZ2UoKTsKfTsKCi8qKgogKiBQcmVmaXgvU2VsZWN0L1Zpc3VhbC9TZWFyY2ggTW9kZXMKICovCgpUZXJtaW5hbC5wcm90b3R5cGUuZW50ZXJQcmVmaXggPSBmdW5jdGlvbigpIHsKICB0aGlzLnByZWZpeE1vZGUgPSB0cnVlOwp9OwoKVGVybWluYWwucHJvdG90eXBlLmxlYXZlUHJlZml4ID0gZnVuY3Rpb24oKSB7CiAgdGhpcy5wcmVmaXhNb2RlID0gZmFsc2U7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuZW50ZXJTZWxlY3QgPSBmdW5jdGlvbigpIHsKICB0aGlzLl9yZWFsID0gewogICAgeDogdGhpcy54LAogICAgeTogdGhpcy55LAogICAgeWRpc3A6IHRoaXMueWRpc3AsCiAgICB5YmFzZTogdGhpcy55YmFzZSwKICAgIGN1cnNvckhpZGRlbjogdGhpcy5jdXJzb3JIaWRkZW4sCiAgICBsaW5lczogdGhpcy5jb3B5QnVmZmVyKHRoaXMubGluZXMpLAogICAgd3JpdGU6IHRoaXMud3JpdGUKICB9OwogIHRoaXMud3JpdGUgPSBmdW5jdGlvbigpIHt9OwogIHRoaXMuc2VsZWN0TW9kZSA9IHRydWU7CiAgdGhpcy52aXN1YWxNb2RlID0gZmFsc2U7CiAgdGhpcy5jdXJzb3JIaWRkZW4gPSBmYWxzZTsKICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwp9OwoKVGVybWluYWwucHJvdG90eXBlLmxlYXZlU2VsZWN0ID0gZnVuY3Rpb24oKSB7CiAgdGhpcy54ID0gdGhpcy5fcmVhbC54OwogIHRoaXMueSA9IHRoaXMuX3JlYWwueTsKICB0aGlzLnlkaXNwID0gdGhpcy5fcmVhbC55ZGlzcDsKICB0aGlzLnliYXNlID0gdGhpcy5fcmVhbC55YmFzZTsKICB0aGlzLmN1cnNvckhpZGRlbiA9IHRoaXMuX3JlYWwuY3Vyc29ySGlkZGVuOwogIHRoaXMubGluZXMgPSB0aGlzLl9yZWFsLmxpbmVzOwogIHRoaXMud3JpdGUgPSB0aGlzLl9yZWFsLndyaXRlOwogIGRlbGV0ZSB0aGlzLl9yZWFsOwogIHRoaXMuc2VsZWN0TW9kZSA9IGZhbHNlOwogIHRoaXMudmlzdWFsTW9kZSA9IGZhbHNlOwogIHRoaXMucmVmcmVzaCgwLCB0aGlzLnJvd3MgLSAxKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5lbnRlclZpc3VhbCA9IGZ1bmN0aW9uKCkgewogIHRoaXMuX3JlYWwucHJlVmlzdWFsID0gdGhpcy5jb3B5QnVmZmVyKHRoaXMubGluZXMpOwogIHRoaXMuc2VsZWN0VGV4dCh0aGlzLngsIHRoaXMueCwgdGhpcy55ZGlzcCArIHRoaXMueSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgdGhpcy52aXN1YWxNb2RlID0gdHJ1ZTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5sZWF2ZVZpc3VhbCA9IGZ1bmN0aW9uKCkgewogIHRoaXMubGluZXMgPSB0aGlzLl9yZWFsLnByZVZpc3VhbDsKICBkZWxldGUgdGhpcy5fcmVhbC5wcmVWaXN1YWw7CiAgZGVsZXRlIHRoaXMuX3NlbGVjdGVkOwogIHRoaXMudmlzdWFsTW9kZSA9IGZhbHNlOwogIHRoaXMucmVmcmVzaCgwLCB0aGlzLnJvd3MgLSAxKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5lbnRlclNlYXJjaCA9IGZ1bmN0aW9uKGRvd24pIHsKICB0aGlzLmVudHJ5ID0gJyc7CiAgdGhpcy5zZWFyY2hNb2RlID0gdHJ1ZTsKICB0aGlzLnNlYXJjaERvd24gPSBkb3duOwogIHRoaXMuX3JlYWwucHJlU2VhcmNoID0gdGhpcy5jb3B5QnVmZmVyKHRoaXMubGluZXMpOwogIHRoaXMuX3JlYWwucHJlU2VhcmNoWCA9IHRoaXMueDsKICB0aGlzLl9yZWFsLnByZVNlYXJjaFkgPSB0aGlzLnk7CgogIHZhciBib3R0b20gPSB0aGlzLnlkaXNwICsgdGhpcy5yb3dzIC0gMTsKICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZW50cnlQcmVmaXgubGVuZ3RoOyBpKyspIHsKICAgIC8vdGhpcy5saW5lc1tib3R0b21dW2ldWzBdID0gKHRoaXMuZGVmQXR0ciAmIH4weDFmZikgfCA0OwogICAgLy90aGlzLmxpbmVzW2JvdHRvbV1baV1bMV0gPSB0aGlzLmVudHJ5UHJlZml4W2ldOwogICAgdGhpcy5saW5lc1tib3R0b21dW2ldID0gWwogICAgICAodGhpcy5kZWZBdHRyICYgfjB4MWZmKSB8IDQsCiAgICAgIHRoaXMuZW50cnlQcmVmaXhbaV0KICAgIF07CiAgfQoKICB0aGlzLnkgPSB0aGlzLnJvd3MgLSAxOwogIHRoaXMueCA9IHRoaXMuZW50cnlQcmVmaXgubGVuZ3RoOwoKICB0aGlzLnJlZnJlc2godGhpcy5yb3dzIC0gMSwgdGhpcy5yb3dzIC0gMSk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUubGVhdmVTZWFyY2ggPSBmdW5jdGlvbigpIHsKICB0aGlzLnNlYXJjaE1vZGUgPSBmYWxzZTsKCiAgaWYgKHRoaXMuX3JlYWwucHJlU2VhcmNoKSB7CiAgICB0aGlzLmxpbmVzID0gdGhpcy5fcmVhbC5wcmVTZWFyY2g7CiAgICB0aGlzLnggPSB0aGlzLl9yZWFsLnByZVNlYXJjaFg7CiAgICB0aGlzLnkgPSB0aGlzLl9yZWFsLnByZVNlYXJjaFk7CiAgICBkZWxldGUgdGhpcy5fcmVhbC5wcmVTZWFyY2g7CiAgICBkZWxldGUgdGhpcy5fcmVhbC5wcmVTZWFyY2hYOwogICAgZGVsZXRlIHRoaXMuX3JlYWwucHJlU2VhcmNoWTsKICB9CgogIHRoaXMucmVmcmVzaCh0aGlzLnJvd3MgLSAxLCB0aGlzLnJvd3MgLSAxKTsKfTsKClRlcm1pbmFsLnByb3RvdHlwZS5jb3B5QnVmZmVyID0gZnVuY3Rpb24obGluZXMpIHsKICB2YXIgbGluZXMgPSBsaW5lcyB8fCB0aGlzLmxpbmVzCiAgICAsIG91dCA9IFtdOwoKICBmb3IgKHZhciB5ID0gMDsgeSA8IGxpbmVzLmxlbmd0aDsgeSsrKSB7CiAgICBvdXRbeV0gPSBbXTsKICAgIGZvciAodmFyIHggPSAwOyB4IDwgbGluZXNbeV0ubGVuZ3RoOyB4KyspIHsKICAgICAgb3V0W3ldW3hdID0gW2xpbmVzW3ldW3hdWzBdLCBsaW5lc1t5XVt4XVsxXV07CiAgICB9CiAgfQoKICByZXR1cm4gb3V0Owp9OwoKVGVybWluYWwucHJvdG90eXBlLmdldENvcHlUZXh0YXJlYSA9IGZ1bmN0aW9uKHRleHQpIHsKICB2YXIgdGV4dGFyZWEgPSB0aGlzLl9jb3B5VGV4dGFyZWEKICAgICwgZG9jdW1lbnQgPSB0aGlzLmRvY3VtZW50OwoKICBpZiAoIXRleHRhcmVhKSB7CiAgICB0ZXh0YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RleHRhcmVhJyk7CiAgICB0ZXh0YXJlYS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7CiAgICB0ZXh0YXJlYS5zdHlsZS5sZWZ0ID0gJy0zMjAwMHB4JzsKICAgIHRleHRhcmVhLnN0eWxlLnRvcCA9ICctMzIwMDBweCc7CiAgICB0ZXh0YXJlYS5zdHlsZS53aWR0aCA9ICcwcHgnOwogICAgdGV4dGFyZWEuc3R5bGUuaGVpZ2h0ID0gJzBweCc7CiAgICB0ZXh0YXJlYS5zdHlsZS5vcGFjaXR5ID0gJzAnOwogICAgdGV4dGFyZWEuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3RyYW5zcGFyZW50JzsKICAgIHRleHRhcmVhLnN0eWxlLmJvcmRlclN0eWxlID0gJ25vbmUnOwogICAgdGV4dGFyZWEuc3R5bGUub3V0bGluZVN0eWxlID0gJ25vbmUnOwoKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdib2R5JylbMF0uYXBwZW5kQ2hpbGQodGV4dGFyZWEpOwoKICAgIHRoaXMuX2NvcHlUZXh0YXJlYSA9IHRleHRhcmVhOwogIH0KCiAgcmV0dXJuIHRleHRhcmVhOwp9OwoKLy8gTk9URTogT25seSB3b3JrcyBmb3IgcHJpbWFyeSBzZWxlY3Rpb24gb24gWDExLgovLyBOb24tWDExIHVzZXJzIHNob3VsZCB1c2UgQ3RybC1DIGluc3RlYWQuClRlcm1pbmFsLnByb3RvdHlwZS5jb3B5VGV4dCA9IGZ1bmN0aW9uKHRleHQpIHsKICB2YXIgc2VsZiA9IHRoaXMKICAgICwgdGV4dGFyZWEgPSB0aGlzLmdldENvcHlUZXh0YXJlYSgpOwoKICB0aGlzLmVtaXQoJ2NvcHknLCB0ZXh0KTsKCiAgdGV4dGFyZWEuZm9jdXMoKTsKICB0ZXh0YXJlYS50ZXh0Q29udGVudCA9IHRleHQ7CiAgdGV4dGFyZWEudmFsdWUgPSB0ZXh0OwogIHRleHRhcmVhLnNldFNlbGVjdGlvblJhbmdlKDAsIHRleHQubGVuZ3RoKTsKCiAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgIHNlbGYuZWxlbWVudC5mb2N1cygpOwogICAgc2VsZi5mb2N1cygpOwogIH0sIDEpOwp9OwoKVGVybWluYWwucHJvdG90eXBlLnNlbGVjdFRleHQgPSBmdW5jdGlvbih4MSwgeDIsIHkxLCB5MikgewogIHZhciBveDEKICAgICwgb3gyCiAgICAsIG95MQogICAgLCBveTIKICAgICwgdG1wCiAgICAsIHgKICAgICwgeQogICAgLCB4bAogICAgLCBhdHRyOwoKICBpZiAodGhpcy5fc2VsZWN0ZWQpIHsKICAgIG94MSA9IHRoaXMuX3NlbGVjdGVkLngxOwogICAgb3gyID0gdGhpcy5fc2VsZWN0ZWQueDI7CiAgICBveTEgPSB0aGlzLl9zZWxlY3RlZC55MTsKICAgIG95MiA9IHRoaXMuX3NlbGVjdGVkLnkyOwoKICAgIGlmIChveTIgPCBveTEpIHsKICAgICAgdG1wID0gb3gyOwogICAgICBveDIgPSBveDE7CiAgICAgIG94MSA9IHRtcDsKICAgICAgdG1wID0gb3kyOwogICAgICBveTIgPSBveTE7CiAgICAgIG95MSA9IHRtcDsKICAgIH0KCiAgICBpZiAob3gyIDwgb3gxICYmIG95MSA9PT0gb3kyKSB7CiAgICAgIHRtcCA9IG94MjsKICAgICAgb3gyID0gb3gxOwogICAgICBveDEgPSB0bXA7CiAgICB9CgogICAgZm9yICh5ID0gb3kxOyB5IDw9IG95MjsgeSsrKSB7CiAgICAgIHggPSAwOwogICAgICB4bCA9IHRoaXMuY29scyAtIDE7CiAgICAgIGlmICh5ID09PSBveTEpIHsKICAgICAgICB4ID0gb3gxOwogICAgICB9CiAgICAgIGlmICh5ID09PSBveTIpIHsKICAgICAgICB4bCA9IG94MjsKICAgICAgfQogICAgICBmb3IgKDsgeCA8PSB4bDsgeCsrKSB7CiAgICAgICAgaWYgKHRoaXMubGluZXNbeV1beF0ub2xkICE9IG51bGwpIHsKICAgICAgICAgIC8vdGhpcy5saW5lc1t5XVt4XVswXSA9IHRoaXMubGluZXNbeV1beF0ub2xkOwogICAgICAgICAgLy9kZWxldGUgdGhpcy5saW5lc1t5XVt4XS5vbGQ7CiAgICAgICAgICBhdHRyID0gdGhpcy5saW5lc1t5XVt4XS5vbGQ7CiAgICAgICAgICBkZWxldGUgdGhpcy5saW5lc1t5XVt4XS5vbGQ7CiAgICAgICAgICB0aGlzLmxpbmVzW3ldW3hdID0gW2F0dHIsIHRoaXMubGluZXNbeV1beF1bMV1dOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHkxID0gdGhpcy5fc2VsZWN0ZWQueTE7CiAgICB4MSA9IHRoaXMuX3NlbGVjdGVkLngxOwogIH0KCiAgeTEgPSBNYXRoLm1heCh5MSwgMCk7CiAgeTEgPSBNYXRoLm1pbih5MSwgdGhpcy55ZGlzcCArIHRoaXMucm93cyAtIDEpOwoKICB5MiA9IE1hdGgubWF4KHkyLCAwKTsKICB5MiA9IE1hdGgubWluKHkyLCB0aGlzLnlkaXNwICsgdGhpcy5yb3dzIC0gMSk7CgogIHRoaXMuX3NlbGVjdGVkID0geyB4MTogeDEsIHgyOiB4MiwgeTE6IHkxLCB5MjogeTIgfTsKCiAgaWYgKHkyIDwgeTEpIHsKICAgIHRtcCA9IHgyOwogICAgeDIgPSB4MTsKICAgIHgxID0gdG1wOwogICAgdG1wID0geTI7CiAgICB5MiA9IHkxOwogICAgeTEgPSB0bXA7CiAgfQoKICBpZiAoeDIgPCB4MSAmJiB5MSA9PT0geTIpIHsKICAgIHRtcCA9IHgyOwogICAgeDIgPSB4MTsKICAgIHgxID0gdG1wOwogIH0KCiAgZm9yICh5ID0geTE7IHkgPD0geTI7IHkrKykgewogICAgeCA9IDA7CiAgICB4bCA9IHRoaXMuY29scyAtIDE7CiAgICBpZiAoeSA9PT0geTEpIHsKICAgICAgeCA9IHgxOwogICAgfQogICAgaWYgKHkgPT09IHkyKSB7CiAgICAgIHhsID0geDI7CiAgICB9CiAgICBmb3IgKDsgeCA8PSB4bDsgeCsrKSB7CiAgICAgIC8vdGhpcy5saW5lc1t5XVt4XS5vbGQgPSB0aGlzLmxpbmVzW3ldW3hdWzBdOwogICAgICAvL3RoaXMubGluZXNbeV1beF1bMF0gJj0gfjB4MWZmOwogICAgICAvL3RoaXMubGluZXNbeV1beF1bMF0gfD0gKDB4MWZmIDw8IDkpIHwgNDsKICAgICAgYXR0ciA9IHRoaXMubGluZXNbeV1beF1bMF07CiAgICAgIHRoaXMubGluZXNbeV1beF0gPSBbCiAgICAgICAgKGF0dHIgJiB+MHgxZmYpIHwgKCgweDFmZiA8PCA5KSB8IDQpLAogICAgICAgIHRoaXMubGluZXNbeV1beF1bMV0KICAgICAgXTsKICAgICAgdGhpcy5saW5lc1t5XVt4XS5vbGQgPSBhdHRyOwogICAgfQogIH0KCiAgeTEgPSB5MSAtIHRoaXMueWRpc3A7CiAgeTIgPSB5MiAtIHRoaXMueWRpc3A7CgogIHkxID0gTWF0aC5tYXgoeTEsIDApOwogIHkxID0gTWF0aC5taW4oeTEsIHRoaXMucm93cyAtIDEpOwoKICB5MiA9IE1hdGgubWF4KHkyLCAwKTsKICB5MiA9IE1hdGgubWluKHkyLCB0aGlzLnJvd3MgLSAxKTsKCiAgLy90aGlzLnJlZnJlc2goeTEsIHkyKTsKICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUuZ3JhYlRleHQgPSBmdW5jdGlvbih4MSwgeDIsIHkxLCB5MikgewogIHZhciBvdXQgPSAnJwogICAgLCBidWYgPSAnJwogICAgLCBjaAogICAgLCB4CiAgICAsIHkKICAgICwgeGwKICAgICwgdG1wOwoKICBpZiAoeTIgPCB5MSkgewogICAgdG1wID0geDI7CiAgICB4MiA9IHgxOwogICAgeDEgPSB0bXA7CiAgICB0bXAgPSB5MjsKICAgIHkyID0geTE7CiAgICB5MSA9IHRtcDsKICB9CgogIGlmICh4MiA8IHgxICYmIHkxID09PSB5MikgewogICAgdG1wID0geDI7CiAgICB4MiA9IHgxOwogICAgeDEgPSB0bXA7CiAgfQoKICBmb3IgKHkgPSB5MTsgeSA8PSB5MjsgeSsrKSB7CiAgICB4ID0gMDsKICAgIHhsID0gdGhpcy5jb2xzIC0gMTsKICAgIGlmICh5ID09PSB5MSkgewogICAgICB4ID0geDE7CiAgICB9CiAgICBpZiAoeSA9PT0geTIpIHsKICAgICAgeGwgPSB4MjsKICAgIH0KICAgIGZvciAoOyB4IDw9IHhsOyB4KyspIHsKICAgICAgY2ggPSB0aGlzLmxpbmVzW3ldW3hdWzFdOwogICAgICBpZiAoY2ggPT09ICcgJykgewogICAgICAgIGJ1ZiArPSBjaDsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgICBpZiAoYnVmKSB7CiAgICAgICAgb3V0ICs9IGJ1ZjsKICAgICAgICBidWYgPSAnJzsKICAgICAgfQogICAgICBvdXQgKz0gY2g7CiAgICAgIGlmIChpc1dpZGUoY2gpKSB4Kys7CiAgICB9CiAgICBidWYgPSAnJzsKICAgIG91dCArPSAnXG4nOwogIH0KCiAgLy8gSWYgd2UncmUgbm90IGF0IHRoZSBlbmQgb2YgdGhlCiAgLy8gbGluZSwgZG9uJ3QgYWRkIGEgbmV3bGluZS4KICBmb3IgKHggPSB4MiwgeSA9IHkyOyB4IDwgdGhpcy5jb2xzOyB4KyspIHsKICAgIGlmICh0aGlzLmxpbmVzW3ldW3hdWzFdICE9PSAnICcpIHsKICAgICAgb3V0ID0gb3V0LnNsaWNlKDAsIC0xKTsKICAgICAgYnJlYWs7CiAgICB9CiAgfQoKICByZXR1cm4gb3V0Owp9OwoKVGVybWluYWwucHJvdG90eXBlLmtleVByZWZpeCA9IGZ1bmN0aW9uKGV2LCBrZXkpIHsKICBpZiAoa2V5ID09PSAnaycgfHwga2V5ID09PSAnJicpIHsKICAgIHRoaXMuZGVzdHJveSgpOwogIH0gZWxzZSBpZiAoa2V5ID09PSAncCcgfHwga2V5ID09PSAnXScpIHsKICAgIHRoaXMuZW1pdCgncmVxdWVzdCBwYXN0ZScpOwogIH0gZWxzZSBpZiAoa2V5ID09PSAnYycpIHsKICAgIHRoaXMuZW1pdCgncmVxdWVzdCBjcmVhdGUnKTsKICB9IGVsc2UgaWYgKGtleSA+PSAnMCcgJiYga2V5IDw9ICc5JykgewogICAga2V5ID0gK2tleSAtIDE7CiAgICBpZiAoIX5rZXkpIGtleSA9IDk7CiAgICB0aGlzLmVtaXQoJ3JlcXVlc3QgdGVybScsIGtleSk7CiAgfSBlbHNlIGlmIChrZXkgPT09ICduJykgewogICAgdGhpcy5lbWl0KCdyZXF1ZXN0IHRlcm0gbmV4dCcpOwogIH0gZWxzZSBpZiAoa2V5ID09PSAnUCcpIHsKICAgIHRoaXMuZW1pdCgncmVxdWVzdCB0ZXJtIHByZXZpb3VzJyk7CiAgfSBlbHNlIGlmIChrZXkgPT09ICc6JykgewogICAgdGhpcy5lbWl0KCdyZXF1ZXN0IGNvbW1hbmQgbW9kZScpOwogIH0gZWxzZSBpZiAoa2V5ID09PSAnWycpIHsKICAgIHRoaXMuZW50ZXJTZWxlY3QoKTsKICB9Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUua2V5U2VsZWN0ID0gZnVuY3Rpb24oZXYsIGtleSkgewogIHRoaXMuc2hvd0N1cnNvcigpOwoKICBpZiAodGhpcy5zZWFyY2hNb2RlIHx8IGtleSA9PT0gJ24nIHx8IGtleSA9PT0gJ04nKSB7CiAgICByZXR1cm4gdGhpcy5rZXlTZWFyY2goZXYsIGtleSk7CiAgfQoKICBpZiAoa2V5ID09PSAnXHgwNCcpIHsgLy8gY3RybC1kCiAgICB2YXIgeSA9IHRoaXMueWRpc3AgKyB0aGlzLnk7CiAgICBpZiAodGhpcy55ZGlzcCA9PT0gdGhpcy55YmFzZSkgewogICAgICAvLyBNaW1pYyB2aW0gYmVoYXZpb3IKICAgICAgdGhpcy55ID0gTWF0aC5taW4odGhpcy55ICsgKHRoaXMucm93cyAtIDEpIC8gMiB8IDAsIHRoaXMucm93cyAtIDEpOwogICAgICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnNjcm9sbERpc3AoKHRoaXMucm93cyAtIDEpIC8gMiB8IDApOwogICAgfQogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQodGhpcy54LCB0aGlzLngsIHksIHRoaXMueWRpc3AgKyB0aGlzLnkpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ1x4MTUnKSB7IC8vIGN0cmwtdQogICAgdmFyIHkgPSB0aGlzLnlkaXNwICsgdGhpcy55OwogICAgaWYgKHRoaXMueWRpc3AgPT09IDApIHsKICAgICAgLy8gTWltaWMgdmltIGJlaGF2aW9yCiAgICAgIHRoaXMueSA9IE1hdGgubWF4KHRoaXMueSAtICh0aGlzLnJvd3MgLSAxKSAvIDIgfCAwLCAwKTsKICAgICAgdGhpcy5yZWZyZXNoKDAsIHRoaXMucm93cyAtIDEpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5zY3JvbGxEaXNwKC0odGhpcy5yb3dzIC0gMSkgLyAyIHwgMCk7CiAgICB9CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dCh0aGlzLngsIHRoaXMueCwgeSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnXHgwNicpIHsgLy8gY3RybC1mCiAgICB2YXIgeSA9IHRoaXMueWRpc3AgKyB0aGlzLnk7CiAgICB0aGlzLnNjcm9sbERpc3AodGhpcy5yb3dzIC0gMSk7CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dCh0aGlzLngsIHRoaXMueCwgeSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnXHgwMicpIHsgLy8gY3RybC1iCiAgICB2YXIgeSA9IHRoaXMueWRpc3AgKyB0aGlzLnk7CiAgICB0aGlzLnNjcm9sbERpc3AoLSh0aGlzLnJvd3MgLSAxKSk7CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dCh0aGlzLngsIHRoaXMueCwgeSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnaycgfHwga2V5ID09PSAnXHgxYltBJykgewogICAgdmFyIHkgPSB0aGlzLnlkaXNwICsgdGhpcy55OwogICAgdGhpcy55LS07CiAgICBpZiAodGhpcy55IDwgMCkgewogICAgICB0aGlzLnkgPSAwOwogICAgICB0aGlzLnNjcm9sbERpc3AoLTEpOwogICAgfQogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQodGhpcy54LCB0aGlzLngsIHksIHRoaXMueWRpc3AgKyB0aGlzLnkpOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5yZWZyZXNoKHRoaXMueSwgdGhpcy55ICsgMSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnaicgfHwga2V5ID09PSAnXHgxYltCJykgewogICAgdmFyIHkgPSB0aGlzLnlkaXNwICsgdGhpcy55OwogICAgdGhpcy55Kys7CiAgICBpZiAodGhpcy55ID49IHRoaXMucm93cykgewogICAgICB0aGlzLnkgPSB0aGlzLnJvd3MgLSAxOwogICAgICB0aGlzLnNjcm9sbERpc3AoMSk7CiAgICB9CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dCh0aGlzLngsIHRoaXMueCwgeSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnJlZnJlc2godGhpcy55IC0gMSwgdGhpcy55KTsKICAgIH0KICAgIHJldHVybjsKICB9CgogIGlmIChrZXkgPT09ICdoJyB8fCBrZXkgPT09ICdceDFiW0QnKSB7CiAgICB2YXIgeCA9IHRoaXMueDsKICAgIHRoaXMueC0tOwogICAgaWYgKHRoaXMueCA8IDApIHsKICAgICAgdGhpcy54ID0gMDsKICAgIH0KICAgIGlmICh0aGlzLnZpc3VhbE1vZGUpIHsKICAgICAgdGhpcy5zZWxlY3RUZXh0KHgsIHRoaXMueCwgdGhpcy55ZGlzcCArIHRoaXMueSwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ2wnIHx8IGtleSA9PT0gJ1x4MWJbQycpIHsKICAgIHZhciB4ID0gdGhpcy54OwogICAgdGhpcy54Kys7CiAgICBpZiAodGhpcy54ID49IHRoaXMuY29scykgewogICAgICB0aGlzLnggPSB0aGlzLmNvbHMgLSAxOwogICAgfQogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQoeCwgdGhpcy54LCB0aGlzLnlkaXNwICsgdGhpcy55LCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmVmcmVzaCh0aGlzLnksIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAndicgfHwga2V5ID09PSAnICcpIHsKICAgIGlmICghdGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuZW50ZXJWaXN1YWwoKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMubGVhdmVWaXN1YWwoKTsKICAgIH0KICAgIHJldHVybjsKICB9CgogIGlmIChrZXkgPT09ICd5JykgewogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB2YXIgdGV4dCA9IHRoaXMuZ3JhYlRleHQoCiAgICAgICAgdGhpcy5fc2VsZWN0ZWQueDEsIHRoaXMuX3NlbGVjdGVkLngyLAogICAgICAgIHRoaXMuX3NlbGVjdGVkLnkxLCB0aGlzLl9zZWxlY3RlZC55Mik7CiAgICAgIHRoaXMuY29weVRleHQodGV4dCk7CiAgICAgIHRoaXMubGVhdmVWaXN1YWwoKTsKICAgICAgLy8gdGhpcy5sZWF2ZVNlbGVjdCgpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ3EnIHx8IGtleSA9PT0gJ1x4MWInKSB7CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMubGVhdmVWaXN1YWwoKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMubGVhdmVTZWxlY3QoKTsKICAgIH0KICAgIHJldHVybjsKICB9CgogIGlmIChrZXkgPT09ICd3JyB8fCBrZXkgPT09ICdXJykgewogICAgdmFyIG94ID0gdGhpcy54OwogICAgdmFyIG95ID0gdGhpcy55OwogICAgdmFyIG95ZCA9IHRoaXMueWRpc3A7CgogICAgdmFyIHggPSB0aGlzLng7CiAgICB2YXIgeSA9IHRoaXMueTsKICAgIHZhciB5YiA9IHRoaXMueWRpc3A7CiAgICB2YXIgc2F3X3NwYWNlID0gZmFsc2U7CgogICAgZm9yICg7OykgewogICAgICB2YXIgbGluZSA9IHRoaXMubGluZXNbeWIgKyB5XTsKICAgICAgd2hpbGUgKHggPCB0aGlzLmNvbHMpIHsKICAgICAgICBpZiAobGluZVt4XVsxXSA8PSAnICcpIHsKICAgICAgICAgIHNhd19zcGFjZSA9IHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChzYXdfc3BhY2UpIHsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICB4Kys7CiAgICAgIH0KICAgICAgaWYgKHggPj0gdGhpcy5jb2xzKSB4ID0gdGhpcy5jb2xzIC0gMTsKICAgICAgaWYgKHggPT09IHRoaXMuY29scyAtIDEgJiYgbGluZVt4XVsxXSA8PSAnICcpIHsKICAgICAgICB4ID0gMDsKICAgICAgICBpZiAoKyt5ID49IHRoaXMucm93cykgewogICAgICAgICAgeS0tOwogICAgICAgICAgaWYgKCsreWIgPiB0aGlzLnliYXNlKSB7CiAgICAgICAgICAgIHliID0gdGhpcy55YmFzZTsKICAgICAgICAgICAgeCA9IHRoaXMueDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQoKICAgIHRoaXMueCA9IHgsIHRoaXMueSA9IHk7CiAgICB0aGlzLnNjcm9sbERpc3AoLXRoaXMueWRpc3AgKyB5Yik7CgogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQob3gsIHRoaXMueCwgb3kgKyBveWQsIHRoaXMueWRpc3AgKyB0aGlzLnkpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ2InIHx8IGtleSA9PT0gJ0InKSB7CiAgICB2YXIgb3ggPSB0aGlzLng7CiAgICB2YXIgb3kgPSB0aGlzLnk7CiAgICB2YXIgb3lkID0gdGhpcy55ZGlzcDsKCiAgICB2YXIgeCA9IHRoaXMueDsKICAgIHZhciB5ID0gdGhpcy55OwogICAgdmFyIHliID0gdGhpcy55ZGlzcDsKCiAgICBmb3IgKDs7KSB7CiAgICAgIHZhciBsaW5lID0gdGhpcy5saW5lc1t5YiArIHldOwogICAgICB2YXIgc2F3X3NwYWNlID0geCA+IDAgJiYgbGluZVt4XVsxXSA+ICcgJyAmJiBsaW5lW3ggLSAxXVsxXSA+ICcgJzsKICAgICAgd2hpbGUgKHggPj0gMCkgewogICAgICAgIGlmIChsaW5lW3hdWzFdIDw9ICcgJykgewogICAgICAgICAgaWYgKHNhd19zcGFjZSAmJiAoeCArIDEgPCB0aGlzLmNvbHMgJiYgbGluZVt4ICsgMV1bMV0gPiAnICcpKSB7CiAgICAgICAgICAgIHgrKzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBzYXdfc3BhY2UgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICB4LS07CiAgICAgIH0KICAgICAgaWYgKHggPCAwKSB4ID0gMDsKICAgICAgaWYgKHggPT09IDAgJiYgKGxpbmVbeF1bMV0gPD0gJyAnIHx8ICFzYXdfc3BhY2UpKSB7CiAgICAgICAgeCA9IHRoaXMuY29scyAtIDE7CiAgICAgICAgaWYgKC0teSA8IDApIHsKICAgICAgICAgIHkrKzsKICAgICAgICAgIGlmICgtLXliIDwgMCkgewogICAgICAgICAgICB5YisrOwogICAgICAgICAgICB4ID0gMDsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQoKICAgIHRoaXMueCA9IHgsIHRoaXMueSA9IHk7CiAgICB0aGlzLnNjcm9sbERpc3AoLXRoaXMueWRpc3AgKyB5Yik7CgogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQob3gsIHRoaXMueCwgb3kgKyBveWQsIHRoaXMueWRpc3AgKyB0aGlzLnkpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ2UnIHx8IGtleSA9PT0gJ0UnKSB7CiAgICB2YXIgeCA9IHRoaXMueCArIDE7CiAgICB2YXIgeSA9IHRoaXMueTsKICAgIHZhciB5YiA9IHRoaXMueWRpc3A7CiAgICBpZiAoeCA+PSB0aGlzLmNvbHMpIHgtLTsKCiAgICBmb3IgKDs7KSB7CiAgICAgIHZhciBsaW5lID0gdGhpcy5saW5lc1t5YiArIHldOwogICAgICB3aGlsZSAoeCA8IHRoaXMuY29scykgewogICAgICAgIGlmIChsaW5lW3hdWzFdIDw9ICcgJykgewogICAgICAgICAgeCsrOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgICAgd2hpbGUgKHggPCB0aGlzLmNvbHMpIHsKICAgICAgICBpZiAobGluZVt4XVsxXSA8PSAnICcpIHsKICAgICAgICAgIGlmICh4IC0gMSA+PSAwICYmIGxpbmVbeCAtIDFdWzFdID4gJyAnKSB7CiAgICAgICAgICAgIHgtLTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHgrKzsKICAgICAgfQogICAgICBpZiAoeCA+PSB0aGlzLmNvbHMpIHggPSB0aGlzLmNvbHMgLSAxOwogICAgICBpZiAoeCA9PT0gdGhpcy5jb2xzIC0gMSAmJiBsaW5lW3hdWzFdIDw9ICcgJykgewogICAgICAgIHggPSAwOwogICAgICAgIGlmICgrK3kgPj0gdGhpcy5yb3dzKSB7CiAgICAgICAgICB5LS07CiAgICAgICAgICBpZiAoKyt5YiA+IHRoaXMueWJhc2UpIHsKICAgICAgICAgICAgeWIgPSB0aGlzLnliYXNlOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgICAgYnJlYWs7CiAgICB9CgogICAgdGhpcy54ID0geCwgdGhpcy55ID0geTsKICAgIHRoaXMuc2Nyb2xsRGlzcCgtdGhpcy55ZGlzcCArIHliKTsKCiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dChveCwgdGhpcy54LCBveSArIG95ZCwgdGhpcy55ZGlzcCArIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnXicgfHwga2V5ID09PSAnMCcpIHsKICAgIHZhciBveCA9IHRoaXMueDsKCiAgICBpZiAoa2V5ID09PSAnMCcpIHsKICAgICAgdGhpcy54ID0gMDsKICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnXicpIHsKICAgICAgdmFyIGxpbmUgPSB0aGlzLmxpbmVzW3RoaXMueWRpc3AgKyB0aGlzLnldOwogICAgICB2YXIgeCA9IDA7CiAgICAgIHdoaWxlICh4IDwgdGhpcy5jb2xzKSB7CiAgICAgICAgaWYgKGxpbmVbeF1bMV0gPiAnICcpIHsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICB4Kys7CiAgICAgIH0KICAgICAgaWYgKHggPj0gdGhpcy5jb2xzKSB4ID0gdGhpcy5jb2xzIC0gMTsKICAgICAgdGhpcy54ID0geDsKICAgIH0KCiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dChveCwgdGhpcy54LCB0aGlzLnlkaXNwICsgdGhpcy55LCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmVmcmVzaCh0aGlzLnksIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnJCcpIHsKICAgIHZhciBveCA9IHRoaXMueDsKICAgIHZhciBsaW5lID0gdGhpcy5saW5lc1t0aGlzLnlkaXNwICsgdGhpcy55XTsKICAgIHZhciB4ID0gdGhpcy5jb2xzIC0gMTsKICAgIHdoaWxlICh4ID49IDApIHsKICAgICAgaWYgKGxpbmVbeF1bMV0gPiAnICcpIHsKICAgICAgICBpZiAodGhpcy52aXN1YWxNb2RlICYmIHggPCB0aGlzLmNvbHMgLSAxKSB4Kys7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgICAgeC0tOwogICAgfQogICAgaWYgKHggPCAwKSB4ID0gMDsKICAgIHRoaXMueCA9IHg7CiAgICBpZiAodGhpcy52aXN1YWxNb2RlKSB7CiAgICAgIHRoaXMuc2VsZWN0VGV4dChveCwgdGhpcy54LCB0aGlzLnlkaXNwICsgdGhpcy55LCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmVmcmVzaCh0aGlzLnksIHRoaXMueSk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5ID09PSAnZycgfHwga2V5ID09PSAnRycpIHsKICAgIHZhciBveCA9IHRoaXMueDsKICAgIHZhciBveSA9IHRoaXMueTsKICAgIHZhciBveWQgPSB0aGlzLnlkaXNwOwogICAgaWYgKGtleSA9PT0gJ2cnKSB7CiAgICAgIHRoaXMueCA9IDAsIHRoaXMueSA9IDA7CiAgICAgIHRoaXMuc2Nyb2xsRGlzcCgtdGhpcy55ZGlzcCk7CiAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ0cnKSB7CiAgICAgIHRoaXMueCA9IDAsIHRoaXMueSA9IHRoaXMucm93cyAtIDE7CiAgICAgIHRoaXMuc2Nyb2xsRGlzcCh0aGlzLnliYXNlKTsKICAgIH0KICAgIGlmICh0aGlzLnZpc3VhbE1vZGUpIHsKICAgICAgdGhpcy5zZWxlY3RUZXh0KG94LCB0aGlzLngsIG95ICsgb3lkLCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0KICAgIHJldHVybjsKICB9CgogIGlmIChrZXkgPT09ICdIJyB8fCBrZXkgPT09ICdNJyB8fCBrZXkgPT09ICdMJykgewogICAgdmFyIG94ID0gdGhpcy54OwogICAgdmFyIG95ID0gdGhpcy55OwogICAgaWYgKGtleSA9PT0gJ0gnKSB7CiAgICAgIHRoaXMueCA9IDAsIHRoaXMueSA9IDA7CiAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ00nKSB7CiAgICAgIHRoaXMueCA9IDAsIHRoaXMueSA9IHRoaXMucm93cyAvIDIgfCAwOwogICAgfSBlbHNlIGlmIChrZXkgPT09ICdMJykgewogICAgICB0aGlzLnggPSAwLCB0aGlzLnkgPSB0aGlzLnJvd3MgLSAxOwogICAgfQogICAgaWYgKHRoaXMudmlzdWFsTW9kZSkgewogICAgICB0aGlzLnNlbGVjdFRleHQob3gsIHRoaXMueCwgdGhpcy55ZGlzcCArIG95LCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucmVmcmVzaChveSwgb3kpOwogICAgICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwogICAgfQogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ3snIHx8IGtleSA9PT0gJ30nKSB7CiAgICB2YXIgb3ggPSB0aGlzLng7CiAgICB2YXIgb3kgPSB0aGlzLnk7CiAgICB2YXIgb3lkID0gdGhpcy55ZGlzcDsKCiAgICB2YXIgbGluZTsKICAgIHZhciBzYXdfZnVsbCA9IGZhbHNlOwogICAgdmFyIGZvdW5kID0gZmFsc2U7CiAgICB2YXIgZmlyc3RfaXNfc3BhY2UgPSAtMTsKICAgIHZhciB5ID0gdGhpcy55ICsgKGtleSA9PT0gJ3snID8gLTEgOiAxKTsKICAgIHZhciB5YiA9IHRoaXMueWRpc3A7CiAgICB2YXIgaTsKCiAgICBpZiAoa2V5ID09PSAneycpIHsKICAgICAgaWYgKHkgPCAwKSB7CiAgICAgICAgeSsrOwogICAgICAgIGlmICh5YiA+IDApIHliLS07CiAgICAgIH0KICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnfScpIHsKICAgICAgaWYgKHkgPj0gdGhpcy5yb3dzKSB7CiAgICAgICAgeS0tOwogICAgICAgIGlmICh5YiA8IHRoaXMueWJhc2UpIHliKys7CiAgICAgIH0KICAgIH0KCiAgICBmb3IgKDs7KSB7CiAgICAgIGxpbmUgPSB0aGlzLmxpbmVzW3liICsgeV07CgogICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5jb2xzOyBpKyspIHsKICAgICAgICBpZiAobGluZVtpXVsxXSA+ICcgJykgewogICAgICAgICAgaWYgKGZpcnN0X2lzX3NwYWNlID09PSAtMSkgewogICAgICAgICAgICBmaXJzdF9pc19zcGFjZSA9IDA7CiAgICAgICAgICB9CiAgICAgICAgICBzYXdfZnVsbCA9IHRydWU7CiAgICAgICAgICBicmVhazsKICAgICAgICB9IGVsc2UgaWYgKGkgPT09IHRoaXMuY29scyAtIDEpIHsKICAgICAgICAgIGlmIChmaXJzdF9pc19zcGFjZSA9PT0gLTEpIHsKICAgICAgICAgICAgZmlyc3RfaXNfc3BhY2UgPSAxOwogICAgICAgICAgfSBlbHNlIGlmIChmaXJzdF9pc19zcGFjZSA9PT0gMCkgewogICAgICAgICAgICBmb3VuZCA9IHRydWU7CiAgICAgICAgICB9IGVsc2UgaWYgKGZpcnN0X2lzX3NwYWNlID09PSAxKSB7CiAgICAgICAgICAgIGlmIChzYXdfZnVsbCkgZm91bmQgPSB0cnVlOwogICAgICAgICAgfQogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoZm91bmQpIGJyZWFrOwoKICAgICAgaWYgKGtleSA9PT0gJ3snKSB7CiAgICAgICAgeS0tOwogICAgICAgIGlmICh5IDwgMCkgewogICAgICAgICAgeSsrOwogICAgICAgICAgaWYgKHliID4gMCkgeWItLTsKICAgICAgICAgIGVsc2UgYnJlYWs7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ30nKSB7CiAgICAgICAgeSsrOwogICAgICAgIGlmICh5ID49IHRoaXMucm93cykgewogICAgICAgICAgeS0tOwogICAgICAgICAgaWYgKHliIDwgdGhpcy55YmFzZSkgeWIrKzsKICAgICAgICAgIGVsc2UgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9CgogICAgaWYgKCFmb3VuZCkgewogICAgICBpZiAoa2V5ID09PSAneycpIHsKICAgICAgICB5ID0gMDsKICAgICAgICB5YiA9IDA7CiAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnfScpIHsKICAgICAgICB5ID0gdGhpcy5yb3dzIC0gMTsKICAgICAgICB5YiA9IHRoaXMueWJhc2U7CiAgICAgIH0KICAgIH0KCiAgICB0aGlzLnggPSAwLCB0aGlzLnkgPSB5OwogICAgdGhpcy5zY3JvbGxEaXNwKC10aGlzLnlkaXNwICsgeWIpOwoKICAgIGlmICh0aGlzLnZpc3VhbE1vZGUpIHsKICAgICAgdGhpcy5zZWxlY3RUZXh0KG94LCB0aGlzLngsIG95ICsgb3lkLCB0aGlzLnlkaXNwICsgdGhpcy55KTsKICAgIH0KICAgIHJldHVybjsKICB9CgogIGlmIChrZXkgPT09ICcvJyB8fCBrZXkgPT09ICc/JykgewogICAgaWYgKCF0aGlzLnZpc3VhbE1vZGUpIHsKICAgICAgdGhpcy5lbnRlclNlYXJjaChrZXkgPT09ICcvJyk7CiAgICB9CiAgICByZXR1cm47CiAgfQoKICByZXR1cm4gZmFsc2U7Cn07CgpUZXJtaW5hbC5wcm90b3R5cGUua2V5U2VhcmNoID0gZnVuY3Rpb24oZXYsIGtleSkgewogIGlmIChrZXkgPT09ICdceDFiJykgewogICAgdGhpcy5sZWF2ZVNlYXJjaCgpOwogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ1xyJyB8fCAoIXRoaXMuc2VhcmNoTW9kZSAmJiAoa2V5ID09PSAnbicgfHwga2V5ID09PSAnTicpKSkgewogICAgdGhpcy5sZWF2ZVNlYXJjaCgpOwoKICAgIHZhciBlbnRyeSA9IHRoaXMuZW50cnk7CgogICAgaWYgKCFlbnRyeSkgewogICAgICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB2YXIgb3ggPSB0aGlzLng7CiAgICB2YXIgb3kgPSB0aGlzLnk7CiAgICB2YXIgb3lkID0gdGhpcy55ZGlzcDsKCiAgICB2YXIgbGluZTsKICAgIHZhciBmb3VuZCA9IGZhbHNlOwogICAgdmFyIHdyYXBwZWQgPSBmYWxzZTsKICAgIHZhciB4ID0gdGhpcy54ICsgMTsKICAgIHZhciB5ID0gdGhpcy55ZGlzcCArIHRoaXMueTsKICAgIHZhciB5YiwgaTsKICAgIHZhciB1cCA9IGtleSA9PT0gJ04nCiAgICAgID8gdGhpcy5zZWFyY2hEb3duCiAgICAgIDogIXRoaXMuc2VhcmNoRG93bjsKCiAgICBmb3IgKDs7KSB7CiAgICAgIGxpbmUgPSB0aGlzLmxpbmVzW3ldOwoKICAgICAgd2hpbGUgKHggPCB0aGlzLmNvbHMpIHsKICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZW50cnkubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh4ICsgaSA+PSB0aGlzLmNvbHMpIGJyZWFrOwogICAgICAgICAgaWYgKGxpbmVbeCArIGldWzFdICE9PSBlbnRyeVtpXSkgewogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0gZWxzZSBpZiAobGluZVt4ICsgaV1bMV0gPT09IGVudHJ5W2ldICYmIGkgPT09IGVudHJ5Lmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgZm91bmQgPSB0cnVlOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGZvdW5kKSBicmVhazsKICAgICAgICB4ICs9IGkgKyAxOwogICAgICB9CiAgICAgIGlmIChmb3VuZCkgYnJlYWs7CgogICAgICB4ID0gMDsKCiAgICAgIGlmICghdXApIHsKICAgICAgICB5Kys7CiAgICAgICAgaWYgKHkgPiB0aGlzLnliYXNlICsgdGhpcy5yb3dzIC0gMSkgewogICAgICAgICAgaWYgKHdyYXBwZWQpIGJyZWFrOwogICAgICAgICAgLy8gdGhpcy5zZXRNZXNzYWdlKCdTZWFyY2ggd3JhcHBlZC4gQ29udGludWluZyBhdCBUT1AuJyk7CiAgICAgICAgICB3cmFwcGVkID0gdHJ1ZTsKICAgICAgICAgIHkgPSAwOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB5LS07CiAgICAgICAgaWYgKHkgPCAwKSB7CiAgICAgICAgICBpZiAod3JhcHBlZCkgYnJlYWs7CiAgICAgICAgICAvLyB0aGlzLnNldE1lc3NhZ2UoJ1NlYXJjaCB3cmFwcGVkLiBDb250aW51aW5nIGF0IEJPVFRPTS4nKTsKICAgICAgICAgIHdyYXBwZWQgPSB0cnVlOwogICAgICAgICAgeSA9IHRoaXMueWJhc2UgKyB0aGlzLnJvd3MgLSAxOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIGlmIChmb3VuZCkgewogICAgICBpZiAoeSAtIHRoaXMueWJhc2UgPCAwKSB7CiAgICAgICAgeWIgPSB5OwogICAgICAgIHkgPSAwOwogICAgICAgIGlmICh5YiA+IHRoaXMueWJhc2UpIHsKICAgICAgICAgIHkgPSB5YiAtIHRoaXMueWJhc2U7CiAgICAgICAgICB5YiA9IHRoaXMueWJhc2U7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHliID0gdGhpcy55YmFzZTsKICAgICAgICB5IC09IHRoaXMueWJhc2U7CiAgICAgIH0KCiAgICAgIHRoaXMueCA9IHgsIHRoaXMueSA9IHk7CiAgICAgIHRoaXMuc2Nyb2xsRGlzcCgtdGhpcy55ZGlzcCArIHliKTsKCiAgICAgIGlmICh0aGlzLnZpc3VhbE1vZGUpIHsKICAgICAgICB0aGlzLnNlbGVjdFRleHQob3gsIHRoaXMueCwgb3kgKyBveWQsIHRoaXMueWRpc3AgKyB0aGlzLnkpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KCiAgICAvLyB0aGlzLnNldE1lc3NhZ2UoIk5vIG1hdGNoZXMgZm91bmQuIik7CiAgICB0aGlzLnJlZnJlc2goMCwgdGhpcy5yb3dzIC0gMSk7CgogICAgcmV0dXJuOwogIH0KCiAgaWYgKGtleSA9PT0gJ1xiJyB8fCBrZXkgPT09ICdceDdmJykgewogICAgaWYgKHRoaXMuZW50cnkubGVuZ3RoID09PSAwKSByZXR1cm47CiAgICB2YXIgYm90dG9tID0gdGhpcy55ZGlzcCArIHRoaXMucm93cyAtIDE7CiAgICB0aGlzLmVudHJ5ID0gdGhpcy5lbnRyeS5zbGljZSgwLCAtMSk7CiAgICB2YXIgaSA9IHRoaXMuZW50cnlQcmVmaXgubGVuZ3RoICsgdGhpcy5lbnRyeS5sZW5ndGg7CiAgICAvL3RoaXMubGluZXNbYm90dG9tXVtpXVsxXSA9ICcgJzsKICAgIHRoaXMubGluZXNbYm90dG9tXVtpXSA9IFsKICAgICAgdGhpcy5saW5lc1tib3R0b21dW2ldWzBdLAogICAgICAnICcKICAgIF07CiAgICB0aGlzLngtLTsKICAgIHRoaXMucmVmcmVzaCh0aGlzLnJvd3MgLSAxLCB0aGlzLnJvd3MgLSAxKTsKICAgIHRoaXMucmVmcmVzaCh0aGlzLnksIHRoaXMueSk7CiAgICByZXR1cm47CiAgfQoKICBpZiAoa2V5Lmxlbmd0aCA9PT0gMSAmJiBrZXkgPj0gJyAnICYmIGtleSA8PSAnficpIHsKICAgIHZhciBib3R0b20gPSB0aGlzLnlkaXNwICsgdGhpcy5yb3dzIC0gMTsKICAgIHRoaXMuZW50cnkgKz0ga2V5OwogICAgdmFyIGkgPSB0aGlzLmVudHJ5UHJlZml4Lmxlbmd0aCArIHRoaXMuZW50cnkubGVuZ3RoIC0gMTsKICAgIC8vdGhpcy5saW5lc1tib3R0b21dW2ldWzBdID0gKHRoaXMuZGVmQXR0ciAmIH4weDFmZikgfCA0OwogICAgLy90aGlzLmxpbmVzW2JvdHRvbV1baV1bMV0gPSBrZXk7CiAgICB0aGlzLmxpbmVzW2JvdHRvbV1baV0gPSBbCiAgICAgICh0aGlzLmRlZkF0dHIgJiB+MHgxZmYpIHwgNCwKICAgICAga2V5CiAgICBdOwogICAgdGhpcy54Kys7CiAgICB0aGlzLnJlZnJlc2godGhpcy5yb3dzIC0gMSwgdGhpcy5yb3dzIC0gMSk7CiAgICB0aGlzLnJlZnJlc2godGhpcy55LCB0aGlzLnkpOwogICAgcmV0dXJuOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9OwoKLyoqCiAqIENoYXJhY3RlciBTZXRzCiAqLwoKVGVybWluYWwuY2hhcnNldHMgPSB7fTsKCi8vIERFQyBTcGVjaWFsIENoYXJhY3RlciBhbmQgTGluZSBEcmF3aW5nIFNldC4KLy8gaHR0cDovL3Z0MTAwLm5ldC9kb2NzL3Z0MTAyLXVnL3RhYmxlNS0xMy5odG1sCi8vIEEgbG90IG9mIGN1cnNlcyBhcHBzIHVzZSB0aGlzIGlmIHRoZXkgc2VlIFRFUk09eHRlcm0uCi8vIHRlc3Rpbmc6IGVjaG8gLWUgJ1xlKDBhXGUoQicKLy8gVGhlIHh0ZXJtIG91dHB1dCBzb21ldGltZXMgc2VlbXMgdG8gY29uZmxpY3Qgd2l0aCB0aGUKLy8gcmVmZXJlbmNlIGFib3ZlLiB4dGVybSBzZWVtcyBpbiBsaW5lIHdpdGggdGhlIHJlZmVyZW5jZQovLyB3aGVuIHJ1bm5pbmcgdnR0ZXN0IGhvd2V2ZXIuCi8vIFRoZSB0YWJsZSBiZWxvdyBub3cgdXNlcyB4dGVybSdzIG91dHB1dCBmcm9tIHZ0dGVzdC4KVGVybWluYWwuY2hhcnNldHMuU0NMRCA9IHsgLy8gKDAKICAnYCc6ICdcdTI1YzYnLCAvLyAn4peGJwogICdhJzogJ1x1MjU5MicsIC8vICfilpInCiAgJ2InOiAnXHUwMDA5JywgLy8gJ1x0JwogICdjJzogJ1x1MDAwYycsIC8vICdcZicKICAnZCc6ICdcdTAwMGQnLCAvLyAnXHInCiAgJ2UnOiAnXHUwMDBhJywgLy8gJ1xuJwogICdmJzogJ1x1MDBiMCcsIC8vICfCsCcKICAnZyc6ICdcdTAwYjEnLCAvLyAnwrEnCiAgJ2gnOiAnXHUyNDI0JywgLy8gJ1x1MjQyNCcgKE5MKQogICdpJzogJ1x1MDAwYicsIC8vICdcdicKICAnaic6ICdcdTI1MTgnLCAvLyAn4pSYJwogICdrJzogJ1x1MjUxMCcsIC8vICfilJAnCiAgJ2wnOiAnXHUyNTBjJywgLy8gJ+KUjCcKICAnbSc6ICdcdTI1MTQnLCAvLyAn4pSUJwogICduJzogJ1x1MjUzYycsIC8vICfilLwnCiAgJ28nOiAnXHUyM2JhJywgLy8gJ+KOuicKICAncCc6ICdcdTIzYmInLCAvLyAn4o67JwogICdxJzogJ1x1MjUwMCcsIC8vICfilIAnCiAgJ3InOiAnXHUyM2JjJywgLy8gJ+KOvCcKICAncyc6ICdcdTIzYmQnLCAvLyAn4o69JwogICd0JzogJ1x1MjUxYycsIC8vICfilJwnCiAgJ3UnOiAnXHUyNTI0JywgLy8gJ+KUpCcKICAndic6ICdcdTI1MzQnLCAvLyAn4pS0JwogICd3JzogJ1x1MjUyYycsIC8vICfilKwnCiAgJ3gnOiAnXHUyNTAyJywgLy8gJ+KUgicKICAneSc6ICdcdTIyNjQnLCAvLyAn4omkJwogICd6JzogJ1x1MjI2NScsIC8vICfiiaUnCiAgJ3snOiAnXHUwM2MwJywgLy8gJ8+AJwogICd8JzogJ1x1MjI2MCcsIC8vICfiiaAnCiAgJ30nOiAnXHUwMGEzJywgLy8gJ8KjJwogICd+JzogJ1x1MDBiNycgIC8vICfCtycKfTsKClRlcm1pbmFsLmNoYXJzZXRzLlVLID0gbnVsbDsgLy8gKEEKVGVybWluYWwuY2hhcnNldHMuVVMgPSBudWxsOyAvLyAoQiAoVVNBU0NJSSkKVGVybWluYWwuY2hhcnNldHMuRHV0Y2ggPSBudWxsOyAvLyAoNApUZXJtaW5hbC5jaGFyc2V0cy5GaW5uaXNoID0gbnVsbDsgLy8gKEMgb3IgKDUKVGVybWluYWwuY2hhcnNldHMuRnJlbmNoID0gbnVsbDsgLy8gKFIKVGVybWluYWwuY2hhcnNldHMuRnJlbmNoQ2FuYWRpYW4gPSBudWxsOyAvLyAoUQpUZXJtaW5hbC5jaGFyc2V0cy5HZXJtYW4gPSBudWxsOyAvLyAoSwpUZXJtaW5hbC5jaGFyc2V0cy5JdGFsaWFuID0gbnVsbDsgLy8gKFkKVGVybWluYWwuY2hhcnNldHMuTm9yd2VnaWFuRGFuaXNoID0gbnVsbDsgLy8gKEUgb3IgKDYKVGVybWluYWwuY2hhcnNldHMuU3BhbmlzaCA9IG51bGw7IC8vIChaClRlcm1pbmFsLmNoYXJzZXRzLlN3ZWRpc2ggPSBudWxsOyAvLyAoSCBvciAoNwpUZXJtaW5hbC5jaGFyc2V0cy5Td2lzcyA9IG51bGw7IC8vICg9ClRlcm1pbmFsLmNoYXJzZXRzLklTT0xhdGluID0gbnVsbDsgLy8gL0EKCi8qKgogKiBIZWxwZXJzCiAqLwoKZnVuY3Rpb24gb24oZWwsIHR5cGUsIGhhbmRsZXIsIGNhcHR1cmUpIHsKICBlbC5hZGRFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIsIGNhcHR1cmUgfHwgZmFsc2UpOwp9CgpmdW5jdGlvbiBvZmYoZWwsIHR5cGUsIGhhbmRsZXIsIGNhcHR1cmUpIHsKICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGhhbmRsZXIsIGNhcHR1cmUgfHwgZmFsc2UpOwp9CgpmdW5jdGlvbiBjYW5jZWwoZXYpIHsKICBpZiAoZXYucHJldmVudERlZmF1bHQpIGV2LnByZXZlbnREZWZhdWx0KCk7CiAgZXYucmV0dXJuVmFsdWUgPSBmYWxzZTsKICBpZiAoZXYuc3RvcFByb3BhZ2F0aW9uKSBldi5zdG9wUHJvcGFnYXRpb24oKTsKICBldi5jYW5jZWxCdWJibGUgPSB0cnVlOwogIHJldHVybiBmYWxzZTsKfQoKZnVuY3Rpb24gaW5oZXJpdHMoY2hpbGQsIHBhcmVudCkgewogIGZ1bmN0aW9uIGYoKSB7CiAgICB0aGlzLmNvbnN0cnVjdG9yID0gY2hpbGQ7CiAgfQogIGYucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTsKICBjaGlsZC5wcm90b3R5cGUgPSBuZXcgZjsKfQoKLy8gaWYgYm9sZCBpcyBicm9rZW4sIHdlIGNhbid0Ci8vIHVzZSBpdCBpbiB0aGUgdGVybWluYWwuCmZ1bmN0aW9uIGlzQm9sZEJyb2tlbihkb2N1bWVudCkgewogIHZhciBib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXTsKICB2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7CiAgZWwuaW5uZXJIVE1MID0gJ2hlbGxvIHdvcmxkJzsKICBib2R5LmFwcGVuZENoaWxkKGVsKTsKICB2YXIgdzEgPSBlbC5zY3JvbGxXaWR0aDsKICBlbC5zdHlsZS5mb250V2VpZ2h0ID0gJ2JvbGQnOwogIHZhciB3MiA9IGVsLnNjcm9sbFdpZHRoOwogIGJvZHkucmVtb3ZlQ2hpbGQoZWwpOwogIHJldHVybiB3MSAhPT0gdzI7Cn0KCnZhciBTdHJpbmcgPSB0aGlzLlN0cmluZzsKdmFyIHNldFRpbWVvdXQgPSB0aGlzLnNldFRpbWVvdXQ7CnZhciBzZXRJbnRlcnZhbCA9IHRoaXMuc2V0SW50ZXJ2YWw7CgpmdW5jdGlvbiBpbmRleE9mKG9iaiwgZWwpIHsKICB2YXIgaSA9IG9iai5sZW5ndGg7CiAgd2hpbGUgKGktLSkgewogICAgaWYgKG9ialtpXSA9PT0gZWwpIHJldHVybiBpOwogIH0KICByZXR1cm4gLTE7Cn0KCmZ1bmN0aW9uIGlzV2lkZShjaCkgewogIGlmIChjaCA8PSAnXHVmZjAwJykgcmV0dXJuIGZhbHNlOwogIHJldHVybiAoY2ggPj0gJ1x1ZmYwMScgJiYgY2ggPD0gJ1x1ZmZiZScpCiAgICAgIHx8IChjaCA+PSAnXHVmZmMyJyAmJiBjaCA8PSAnXHVmZmM3JykKICAgICAgfHwgKGNoID49ICdcdWZmY2EnICYmIGNoIDw9ICdcdWZmY2YnKQogICAgICB8fCAoY2ggPj0gJ1x1ZmZkMicgJiYgY2ggPD0gJ1x1ZmZkNycpCiAgICAgIHx8IChjaCA+PSAnXHVmZmRhJyAmJiBjaCA8PSAnXHVmZmRjJykKICAgICAgfHwgKGNoID49ICdcdWZmZTAnICYmIGNoIDw9ICdcdWZmZTYnKQogICAgICB8fCAoY2ggPj0gJ1x1ZmZlOCcgJiYgY2ggPD0gJ1x1ZmZlZScpOwp9CgpmdW5jdGlvbiBtYXRjaENvbG9yKHIxLCBnMSwgYjEpIHsKICB2YXIgaGFzaCA9IChyMSA8PCAxNikgfCAoZzEgPDwgOCkgfCBiMTsKCiAgaWYgKG1hdGNoQ29sb3IuX2NhY2hlW2hhc2hdICE9IG51bGwpIHsKICAgIHJldHVybiBtYXRjaENvbG9yLl9jYWNoZVtoYXNoXTsKICB9CgogIHZhciBsZGlmZiA9IEluZmluaXR5CiAgICAsIGxpID0gLTEKICAgICwgaSA9IDAKICAgICwgYwogICAgLCByMgogICAgLCBnMgogICAgLCBiMgogICAgLCBkaWZmOwoKICBmb3IgKDsgaSA8IFRlcm1pbmFsLnZjb2xvcnMubGVuZ3RoOyBpKyspIHsKICAgIGMgPSBUZXJtaW5hbC52Y29sb3JzW2ldOwogICAgcjIgPSBjWzBdOwogICAgZzIgPSBjWzFdOwogICAgYjIgPSBjWzJdOwoKICAgIGRpZmYgPSBtYXRjaENvbG9yLmRpc3RhbmNlKHIxLCBnMSwgYjEsIHIyLCBnMiwgYjIpOwoKICAgIGlmIChkaWZmID09PSAwKSB7CiAgICAgIGxpID0gaTsKICAgICAgYnJlYWs7CiAgICB9CgogICAgaWYgKGRpZmYgPCBsZGlmZikgewogICAgICBsZGlmZiA9IGRpZmY7CiAgICAgIGxpID0gaTsKICAgIH0KICB9CgogIHJldHVybiBtYXRjaENvbG9yLl9jYWNoZVtoYXNoXSA9IGxpOwp9CgptYXRjaENvbG9yLl9jYWNoZSA9IHt9OwoKLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xNjMzODI4Cm1hdGNoQ29sb3IuZGlzdGFuY2UgPSBmdW5jdGlvbihyMSwgZzEsIGIxLCByMiwgZzIsIGIyKSB7CiAgcmV0dXJuIE1hdGgucG93KDMwICogKHIxIC0gcjIpLCAyKQogICAgKyBNYXRoLnBvdyg1OSAqIChnMSAtIGcyKSwgMikKICAgICsgTWF0aC5wb3coMTEgKiAoYjEgLSBiMiksIDIpOwp9OwoKZnVuY3Rpb24gZWFjaChvYmosIGl0ZXIsIGNvbikgewogIGlmIChvYmouZm9yRWFjaCkgcmV0dXJuIG9iai5mb3JFYWNoKGl0ZXIsIGNvbik7CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmoubGVuZ3RoOyBpKyspIHsKICAgIGl0ZXIuY2FsbChjb24sIG9ialtpXSwgaSwgb2JqKTsKICB9Cn0KCmZ1bmN0aW9uIGtleXMob2JqKSB7CiAgaWYgKE9iamVjdC5rZXlzKSByZXR1cm4gT2JqZWN0LmtleXMob2JqKTsKICB2YXIga2V5LCBrZXlzID0gW107CiAgZm9yIChrZXkgaW4gb2JqKSB7CiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgewogICAgICBrZXlzLnB1c2goa2V5KTsKICAgIH0KICB9CiAgcmV0dXJuIGtleXM7Cn0KCi8qKgogKiBFeHBvc2UKICovCgpUZXJtaW5hbC5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7ClRlcm1pbmFsLmluaGVyaXRzID0gaW5oZXJpdHM7ClRlcm1pbmFsLm9uID0gb247ClRlcm1pbmFsLm9mZiA9IG9mZjsKVGVybWluYWwuY2FuY2VsID0gY2FuY2VsOwoKaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7CiAgbW9kdWxlLmV4cG9ydHMgPSBUZXJtaW5hbDsKfSBlbHNlIHsKICB0aGlzLlRlcm1pbmFsID0gVGVybWluYWw7Cn0KCn0pLmNhbGwoZnVuY3Rpb24oKSB7CiAgcmV0dXJuIHRoaXMgfHwgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93IDogZ2xvYmFsKTsKfSgpKTsK"></script>
        <style>
            @font-face {
                         font-family: 'Ubuntu Mono';
                         font-style: normal;
                         font-weight: 400;
                         src: url(data:application/x-font-woff;charset=utf-8;base64,) format('woff');
                       }
            body {
                    font-family: 'Ubuntu Mono', sans-serif;
                    font-size:  14pt;
                 }
        </style>
    </head>
    
    <body>
        <script>
{{ jscript }}
        </script>
    </body>
</html>
